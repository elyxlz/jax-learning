Search.setIndex({"docnames": ["api_refactor", "api_reference/checkpoint", "api_reference/checkpoint.abstract_checkpoint_manager", "api_reference/checkpoint.args", "api_reference/checkpoint.checkpoint_handlers", "api_reference/checkpoint.checkpoint_manager", "api_reference/checkpoint.checkpoint_utils", "api_reference/checkpoint.checkpointers", "api_reference/checkpoint.logging", "api_reference/checkpoint.metadata", "api_reference/checkpoint.msgpack_utils", "api_reference/checkpoint.multihost", "api_reference/checkpoint.path.atomicity", "api_reference/checkpoint.path.deleter", "api_reference/checkpoint.path.step", "api_reference/checkpoint.transform_utils", "api_reference/checkpoint.tree", "api_reference/checkpoint.type_handlers", "api_reference/checkpoint.utils", "api_reference/export", "api_reference/export.dtensor_utils", "api_reference/export.export_manager", "api_reference/export.export_manager_base", "api_reference/export.jax_module", "api_reference/export.serving_config", "api_reference/export.utils", "api_reference/export.validate.validation_manager", "api_reference/export.validate.validation_report", "async_checkpointing", "checkpoint_format", "checkpointing_pytrees", "contributors", "custom_handlers", "index", "optimized_checkpointing", "orbax_checkpoint_101", "orbax_checkpoint_announcements", "orbax_checkpoint_api_overview", "orbax_export_101", "orbax_export_work_together_with_dtensor", "preemption_checkpointing", "transformations"], "filenames": ["api_refactor.ipynb", "api_reference/checkpoint.rst", "api_reference/checkpoint.abstract_checkpoint_manager.rst", "api_reference/checkpoint.args.rst", "api_reference/checkpoint.checkpoint_handlers.rst", "api_reference/checkpoint.checkpoint_manager.rst", "api_reference/checkpoint.checkpoint_utils.rst", "api_reference/checkpoint.checkpointers.rst", "api_reference/checkpoint.logging.rst", "api_reference/checkpoint.metadata.rst", "api_reference/checkpoint.msgpack_utils.rst", "api_reference/checkpoint.multihost.rst", "api_reference/checkpoint.path.atomicity.rst", "api_reference/checkpoint.path.deleter.rst", "api_reference/checkpoint.path.step.rst", "api_reference/checkpoint.transform_utils.rst", "api_reference/checkpoint.tree.rst", "api_reference/checkpoint.type_handlers.rst", "api_reference/checkpoint.utils.rst", "api_reference/export.rst", "api_reference/export.dtensor_utils.rst", "api_reference/export.export_manager.rst", "api_reference/export.export_manager_base.rst", "api_reference/export.jax_module.rst", "api_reference/export.serving_config.rst", "api_reference/export.utils.rst", "api_reference/export.validate.validation_manager.rst", "api_reference/export.validate.validation_report.rst", "async_checkpointing.ipynb", "checkpoint_format.ipynb", "checkpointing_pytrees.ipynb", "contributors.md", "custom_handlers.ipynb", "index.rst", "optimized_checkpointing.ipynb", "orbax_checkpoint_101.ipynb", "orbax_checkpoint_announcements.md", "orbax_checkpoint_api_overview.ipynb", "orbax_export_101.ipynb", "orbax_export_work_together_with_dtensor.ipynb", "preemption_checkpointing.ipynb", "transformations.ipynb"], "titles": ["Using the Refactored CheckpointManager API", "orbax.checkpoint API Reference", "AbstractCheckpointManager", "CheckpointArgs", "CheckpointHandlers", "CheckpointManager", "Checkpointing Utilities", "Checkpointers", "Checkpoint logging", "Metadata Utilities", "Msgpack utils", "Multi-host Utilities", "Atomicity", "Checkpoint Deleter", "Step entities", "PyTree Transformations", "Tree Utilities", "TypeHandlers", "General Utilities", "orbax.export API Reference", "DTensor utilities for multi-device/host export", "ExportManager", "ExportManagerBase", "JaxModule", "ServingConfig", "General Utilities", "ValidationManager", "ValidationReport", "Asynchronous Checkpointing", "Checkpoint Format Guide", "Checkpointing PyTrees of Arrays", "Contributors", "Customizing Checkpointing Logic", "Orbax", "Optimized Checkpointing with Tensorstore", "Checkpointing with Orbax", "Announcements", "API Overview", "Exporting with Orbax", "Orbax export work together with DTensor", "Preemption Tolerance", "Transformations"], "terms": {"As": [0, 4, 12, 24, 32, 37], "orbax": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 40, 41], "0": [0, 2, 4, 5, 6, 7, 14, 15, 17, 18, 25, 27, 28, 29, 30, 32, 34, 35, 37, 38, 39, 40, 41], "5": [0, 5, 6, 15, 28, 29, 30, 32, 35, 37, 38, 39, 41], "sever": [0, 40], "new": [0, 5, 6, 15, 18, 28, 32, 35, 41], "have": [0, 2, 4, 5, 6, 11, 12, 15, 17, 18, 25, 28, 29, 30, 32, 34, 35, 37, 38, 41], "been": [0, 2, 5, 6, 18, 28, 37, 38, 39], "introduc": 0, "differ": [0, 4, 6, 7, 11, 15, 17, 30, 32, 34, 35, 38, 41], "level": [0, 2, 5, 6, 10, 14, 15, 18, 29, 35, 37, 41], "The": [0, 2, 4, 5, 6, 7, 9, 11, 12, 15, 16, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "most": [0, 4, 18, 30, 32, 33, 35, 37, 38, 39, 40, 41], "signific": [0, 28, 37], "chang": [0, 14, 15, 23, 32, 36, 41], "i": [0, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "how": [0, 2, 3, 4, 6, 9, 29, 32, 34, 35, 37, 39], "user": [0, 2, 3, 4, 6, 7, 12, 17, 24, 27, 32, 33, 35, 37, 38, 40], "interact": [0, 37], "thi": [0, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 23, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "page": [0, 30, 32, 35], "show": [0, 32, 35], "side": [0, 32], "comparison": [0, 32, 34, 38], "old": [0, 2, 5, 6, 12, 15, 32, 36, 41], "legaci": [0, 4, 5, 12, 32, 34, 40], "deprec": [0, 2, 4, 7, 17, 18, 32, 36, 39, 40], "stop": [0, 6, 32], "work": [0, 4, 5, 14, 17, 18, 28, 30, 32, 33, 34, 37, 40, 41], "mai": [0, 2, 3, 4, 5, 6, 7, 15, 29, 32, 33, 34, 35, 37, 38, 41], "1st": [0, 5, 17, 32, 36, 40], "2024": [0, 5, 17, 32, 38, 39, 40], "pleas": [0, 2, 5, 7, 14, 17, 18, 30, 32, 33, 36, 37, 39, 40], "ensur": [0, 2, 4, 5, 7, 12, 17, 32, 35, 36], "you": [0, 4, 5, 7, 28, 29, 30, 32, 33, 35, 36, 37, 38, 41], "ar": [0, 2, 4, 5, 6, 7, 11, 12, 14, 15, 16, 17, 18, 20, 23, 28, 29, 30, 32, 34, 35, 37, 38, 39, 40, 41], "style": [0, 5, 32], "save": [0, 2, 3, 4, 5, 6, 7, 10, 12, 14, 17, 18, 21, 22, 23, 26, 28, 29, 32, 36, 37, 38, 39, 40, 41], "now": [0, 4, 28, 30, 32, 35, 36, 37], "async": [0, 1, 4, 5, 7, 17, 28, 30, 33, 36, 37], "default": [0, 2, 4, 5, 6, 11, 12, 17, 23, 25, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41], "make": [0, 2, 5, 7, 29, 30, 32, 34, 35, 36, 37], "sure": [0, 2, 5, 30, 32, 34, 36, 37], "call": [0, 2, 4, 5, 6, 7, 11, 12, 17, 20, 25, 28, 32, 36, 37, 38, 39, 41], "wait_until_finish": [0, 2, 5, 7, 28, 30, 32, 35, 36, 37, 40], "depend": [0, 2, 4, 5, 7, 15, 17, 36, 37, 40], "previou": [0, 2, 5, 7, 32, 36], "being": [0, 5, 6, 7, 18, 28, 32, 36], "complet": [0, 2, 4, 7, 12, 17, 28, 29, 32, 36, 37], "otherwis": [0, 2, 4, 5, 11, 12, 13, 14, 16, 17, 32, 34, 36, 37, 38], "behavior": [0, 5, 6, 12, 20, 28, 36, 37], "can": [0, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 17, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "disabl": [0, 34, 36], "via": [0, 2, 6, 28, 35, 36, 37], "checkpointmanageropt": [0, 1, 12, 13, 28, 35, 36, 37, 40], "enable_async_checkpoint": [0, 5, 28, 36, 37], "option": [0, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 25, 27, 29, 32, 34, 35, 36, 37, 38, 41], "For": [0, 2, 4, 5, 6, 7, 15, 18, 25, 29, 30, 32, 34, 35, 37, 38, 41], "further": [0, 28, 29, 40], "inform": [0, 4, 7, 15, 17, 29, 35, 37], "see": [0, 2, 3, 4, 5, 7, 13, 15, 17, 20, 28, 29, 32, 35, 36, 37], "introductori": 0, "tutori": 0, "overview": [0, 33, 35], "import": [0, 3, 5, 7, 15, 28, 29, 30, 32, 34, 35, 37, 38, 39, 40, 41], "ocp": [0, 2, 3, 4, 7, 28, 29, 30, 32, 34, 35, 37, 40, 41], "dummi": 0, "pytre": [0, 1, 2, 4, 5, 6, 9, 10, 16, 17, 23, 24, 25, 26, 28, 32, 33, 34, 35, 37, 38], "simplic": 0, "In": [0, 4, 6, 7, 17, 18, 28, 29, 30, 32, 35, 37, 41], "realiti": 0, "would": [0, 5, 6, 12, 23, 28, 29, 34, 35, 37, 40], "tree": [0, 1, 4, 10, 15, 17, 29, 30, 34, 35, 37, 41], "np": [0, 4, 6, 17, 28, 29, 30, 32, 35, 38, 39, 41], "ndarrai": [0, 4, 6, 17, 29, 30, 32], "jax": [0, 4, 6, 9, 11, 13, 16, 17, 18, 20, 21, 22, 23, 24, 28, 29, 30, 32, 33, 34, 35, 37, 38, 40, 41], "arrai": [0, 1, 2, 4, 6, 9, 10, 16, 17, 18, 20, 23, 25, 28, 29, 32, 33, 34, 35, 37, 38, 39, 41], "shapedtypestruct": [0, 4, 6, 16, 30], "metadata": [0, 1, 2, 4, 5, 6, 7, 12, 13, 17, 18, 29, 30, 35, 37, 38], "restor": [0, 2, 3, 4, 5, 6, 7, 10, 15, 17, 29, 32, 37, 40], "abstract_pytre": [0, 4], "extra_metadata": [0, 37], "version": [0, 5, 15, 17, 25, 29, 33, 35, 37, 38, 39, 41], "1": [0, 2, 4, 5, 6, 11, 15, 16, 25, 26, 28, 29, 30, 32, 34, 35, 37, 38, 39, 40, 41], "mngr": [0, 2, 5, 6, 29, 35, 37, 40], "test_util": [0, 29, 30, 35, 37], "erase_and_create_empti": [0, 29, 30, 35, 37], "tmp": [0, 12, 14, 18, 28, 29, 30, 32, 34, 35, 37, 38, 39, 40, 41], "ckpt1": 0, "pytreecheckpointhandl": [0, 1, 2, 6, 7, 15, 30, 32, 34], "restore_arg": [0, 4, 6, 30, 41], "checkpoint_util": [0, 5, 6, 41], "construct_restore_arg": [0, 1, 6, 41], "restore_kwarg": [0, 2, 5, 6], "warn": [0, 4, 6, 30, 32, 34, 35, 37, 38, 39, 40, 41], "absl": [0, 30, 32, 34, 35, 37, 38, 39, 40, 41], "configur": [0, 2, 5, 12, 21, 24, 25, 29, 35, 37, 38, 40], "follow": [0, 2, 4, 6, 9, 12, 15, 28, 29, 31, 32, 33, 34, 35, 37, 40, 41], "instruct": [0, 7, 36, 40, 41], "http": [0, 5, 17, 33, 40], "readthedoc": [0, 5, 17, 30, 32, 39, 40], "io": [0, 5, 14, 17, 40], "en": [0, 5, 17, 29, 35, 40], "latest": [0, 2, 5, 6, 14, 17, 30, 32, 33, 39, 40], "api_refactor": [0, 5, 33, 40], "html": [0, 5, 17, 33, 40], "migrat": [0, 5, 17, 36, 40, 41], "august": [0, 5, 17, 36, 40], "ckpt2": 0, "arg": [0, 2, 3, 4, 5, 7, 11, 12, 13, 14, 17, 18, 25, 28, 29, 30, 32, 34, 35, 37, 41], "standardsav": [0, 1, 2, 3, 4, 5, 7, 28, 29, 30, 35, 37], "provid": [0, 2, 4, 5, 6, 7, 11, 12, 14, 15, 16, 17, 18, 24, 28, 29, 30, 33, 34, 35, 37, 38, 39, 40, 41], "dure": [0, 2, 4, 5, 15, 17, 23, 28, 32], "an": [0, 2, 4, 5, 7, 9, 11, 12, 14, 15, 16, 17, 20, 21, 23, 24, 25, 28, 29, 30, 33, 35, 37, 38, 39, 40, 41], "initi": [0, 4, 17, 20, 23, 30, 34, 37, 38, 39, 41], "instanc": [0, 2, 3, 4, 5, 17, 29, 37], "record": [0, 12, 18], "type": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 29, 30, 32, 35, 38], "so": [0, 3, 6, 12, 15, 17, 28, 29, 30, 32, 34, 35, 37, 38], "do": [0, 2, 4, 5, 6, 15, 17, 18, 28, 30, 35, 37, 38, 39], "need": [0, 2, 4, 5, 7, 14, 15, 16, 17, 28, 29, 30, 32, 34, 35, 37, 39, 40, 41], "specifi": [0, 2, 4, 5, 6, 14, 17, 23, 25, 30, 37], "again": [0, 6], "If": [0, 2, 4, 5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 20, 23, 24, 26, 28, 30, 32, 37, 38, 40, 41], "checkpointarg": [0, 1, 2, 4, 5, 32, 37], "particular": [0, 29, 35, 37], "occas": 0, "cannot": [0, 3, 5, 17, 28, 34, 37], "without": [0, 2, 4, 5, 7, 12, 16, 28, 29, 32, 37, 40], "argument": [0, 1, 2, 3, 4, 5, 6, 7, 11, 15, 23, 25, 32, 35, 37, 41], "time": [0, 5, 6, 11, 12, 18, 28, 30, 32, 34, 37, 40], "mani": [0, 4, 7, 12, 15, 34, 35, 37], "case": [0, 4, 5, 6, 14, 17, 18, 28, 29, 30, 32, 33, 34, 35, 37], "exactli": [0, 4, 6, 16, 37], "addit": [0, 2, 4, 5, 7, 15, 17, 21, 30, 37, 41], "custom": [0, 2, 3, 4, 5, 10, 11, 12, 13, 14, 17, 28, 29, 33, 36, 37], "properti": [0, 2, 4, 5, 9, 14, 17, 21, 23, 25, 35], "like": [0, 4, 7, 28, 29, 30, 32, 34, 35, 37, 38], "shard": [0, 1, 4, 6, 17, 23, 29, 32, 34, 35, 37], "dtype": [0, 4, 9, 16, 17, 23, 25, 28, 29, 32, 34, 35, 37, 38, 39], "desir": [0, 4, 30, 37, 41], "just": [0, 4, 14, 15, 32, 37], "abstract": [0, 2, 4, 5, 7, 9, 11, 12, 13, 14, 17, 22, 30, 32, 37], "target": [0, 4, 6, 14, 15, 16, 30, 32, 35, 37], "which": [0, 2, 4, 5, 6, 7, 9, 11, 12, 14, 15, 17, 21, 22, 23, 28, 29, 30, 32, 34, 35, 37, 41], "set": [0, 2, 4, 5, 6, 11, 13, 17, 20, 23, 24, 30, 33, 34, 37, 41], "standardrestor": [0, 1, 2, 3, 4, 5, 7, 30, 35, 37], "standardcheckpointhandl": [0, 1, 2, 7, 12, 28, 30, 35, 37], "expect": [0, 5, 6, 7, 11, 18, 30, 35, 37], "Not": [0, 30, 35, 37], "gener": [0, 1, 5, 6, 7, 19, 27, 30, 32, 34, 35, 37, 38, 41], "unsaf": [0, 30, 35, 37], "unless": [0, 30, 32, 35, 37], "know": [0, 2, 4, 6, 15, 30, 32, 35, 37], "present": [0, 2, 4, 5, 6, 14, 15, 17, 28, 29, 30, 32, 35, 37, 41], "topologi": [0, 30, 35, 37], "same": [0, 4, 5, 9, 11, 16, 17, 20, 23, 24, 25, 29, 30, 32, 35, 37, 38, 41], "one": [0, 2, 5, 6, 7, 15, 24, 25, 29, 30, 32, 34, 35, 37, 38, 39], "wa": [0, 2, 4, 6, 15, 29, 30, 32, 34, 35, 37, 41], "under": [0, 3, 4, 5, 6, 14, 18, 30, 35, 37], "note": [0, 2, 3, 4, 6, 11, 12, 14, 15, 16, 17, 18, 28, 29, 30, 32, 33, 37, 41], "don": [0, 5], "t": [0, 4, 5, 14, 17, 25, 29, 30, 32, 34], "forget": [0, 5], "keyword": [0, 5, 7, 17, 32], "get": [0, 4, 5, 12, 16, 17, 18, 24, 29, 32, 33, 37, 39, 41], "necessari": [0, 3, 4, 5, 6, 15, 28, 32, 35, 37], "forev": [0, 5], "onli": [0, 2, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 24, 28, 30, 32, 35, 37], "until": [0, 2, 5, 6, 7, 11, 28, 30, 34, 37, 41], "remov": [0, 5, 6, 30, 39, 41], "valu": [0, 2, 3, 4, 5, 6, 9, 14, 15, 16, 17, 18, 23, 24, 25, 27, 28, 29, 30, 32, 35, 37], "subclass": [0, 2, 3, 4, 37], "modul": [0, 16, 17, 18, 21, 23, 26, 32, 35, 38, 41], "These": [0, 15, 32], "class": [0, 1, 2, 3, 4, 5, 7, 9, 11, 12, 13, 15, 17, 21, 22, 23, 24, 25, 26, 27, 30, 32, 37, 38, 39, 41], "commun": [0, 39], "logic": [0, 2, 4, 5, 6, 7, 12, 17, 28, 29, 35, 37], "wish": [0, 29, 35], "your": [0, 3, 4, 5, 6, 20, 30, 32, 35, 36, 37, 38, 41], "object": [0, 2, 4, 5, 6, 7, 10, 12, 15, 16, 17, 20, 25, 26, 28, 29, 30, 32, 33, 37, 38, 41], "typic": [0, 2, 4, 7, 15, 28, 29, 37, 41], "consist": [0, 23, 29, 33, 35, 38, 41], "let": [0, 29, 30, 35, 37, 41], "": [0, 4, 5, 7, 14, 17, 24, 28, 29, 30, 31, 32, 34, 35, 37, 38, 40, 41], "explor": [0, 4], "scenario": [0, 37, 41], "when": [0, 2, 3, 4, 5, 6, 7, 15, 17, 23, 28, 29, 30, 32, 34, 35, 37, 38, 39, 40], "item_metadata": [0, 2, 5], "rais": [0, 2, 4, 7, 12, 14, 16, 17, 18, 20, 27, 32], "error": [0, 2, 4, 5, 7, 14, 16, 34, 38], "due": [0, 2, 7, 25, 30], "unspecifi": [0, 15, 23, 41], "checkpointhandl": [0, 1, 2, 3, 5, 7, 28, 29, 35], "name": [0, 2, 4, 5, 9, 11, 13, 14, 15, 16, 17, 18, 20, 23, 25, 29, 32, 34, 35, 37, 38, 39], "item_handl": [0, 2, 5, 34, 37], "resolv": [0, 14, 37], "unmap": 0, "new_mngr": 0, "valueerror": [0, 2, 4, 7, 14, 17, 18], "traceback": [0, 32, 41], "recent": [0, 32, 33, 34, 40, 41], "last": [0, 15, 32, 41], "ipykernel_723": 0, "2652070573": 0, "py": [0, 30, 32, 39, 41], "2": [0, 2, 4, 11, 15, 16, 25, 26, 28, 29, 30, 32, 34, 35, 37, 38, 39, 40, 41], "3": [0, 15, 17, 28, 29, 30, 32, 35, 37, 38, 39, 41], "checkout": [0, 30, 32, 39], "org": [0, 30, 32, 39], "user_build": [0, 30, 32, 39], "env": [0, 30, 32, 39], "lib": [0, 30, 32, 39], "python3": [0, 30, 32, 39], "9": [0, 29, 30, 32, 35, 39, 41], "site": [0, 30, 32, 39], "packag": [0, 4, 7, 8, 9, 11, 30, 32, 33, 39], "checkpoint_manag": [0, 5, 13, 35], "self": [0, 3, 5, 9, 14, 15, 17, 21, 23, 24, 25, 27, 32, 39], "step": [0, 1, 2, 4, 5, 6, 12, 13, 24, 28, 29, 35, 37, 40, 41], "directori": [0, 1, 2, 4, 5, 6, 7, 9, 12, 13, 14, 17, 21, 23, 25, 32, 34, 35, 37, 38], "1183": 0, "restore_directori": 0, "_get_read_step_directori": 0, "1184": 0, "step_stat": 0, "checkpointer_start_tim": 0, "1185": 0, "_checkpoint": 0, "1186": 0, "checkpointer_duration_sec": 0, "1187": 0, "async_checkpoint": [0, 28, 32, 33], "kwarg": [0, 2, 4, 7, 11, 12, 13, 14, 17, 18, 21, 22, 23, 32], "339": 0, "superclass": [0, 4, 5, 7, 17, 32], "document": [0, 4, 5, 7, 17, 32, 35], "340": 0, "341": 0, "return": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 30, 32, 35, 37, 38, 39, 40, 41], "super": [0, 32], "342": 0, "343": 0, "def": [0, 28, 29, 30, 32, 34, 35, 37, 38, 39, 40, 41], "check_for_error": [0, 2, 5, 7], "227": 0, "log": [0, 1, 5, 12, 38, 39], "info": [0, 17, 29, 30, 32, 35, 38, 39], "from": [0, 2, 4, 5, 7, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41], "228": 0, "ckpt_arg": 0, "construct_checkpoint_arg": 0, "_handler": [0, 32], "fals": [0, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 26, 27, 28, 29, 32, 35, 37, 41], "229": 0, "230": 0, "finish": [0, 2, 4, 5, 7, 28, 29, 38, 40], "231": 0, "multihost": [0, 5, 11, 17], "sync_global_process": [0, 1, 11], "composite_checkpoint_handl": [0, 32], "471": 0, "continu": [0, 6, 17, 34], "472": 0, "handler": [0, 3, 4, 7, 17, 32, 33, 37], "none": [0, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 30, 32, 34, 35, 37, 39, 40], "473": 0, "474": 0, "f": [0, 5, 15, 29, 32, 34, 38, 39], "item_nam": [0, 2, 4, 5, 12, 29, 35, 37], "had": [0, 37, 40], "undetermin": 0, "475": 0, "appropri": [0, 2, 15, 41], "indic": [0, 2, 3, 4, 5, 9, 12, 18, 34], "close": [0, 1, 2, 4, 5, 7, 13, 32, 34, 36], "altern": [0, 5, 12, 14, 18, 23], "print": [0, 5, 29, 32, 34, 38, 39], "doesn": [0, 4, 14, 25, 30, 32], "support": [0, 4, 10, 12, 14, 17, 23, 25, 26, 28], "ani": [0, 2, 3, 4, 5, 6, 7, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 28, 30, 32, 33, 37, 41], "input": [0, 2, 5, 15, 23, 24, 25, 26, 32, 39], "avail": [0, 17, 29, 30, 32], "becom": [0, 28], "even": [0, 25, 34, 40], "more": [0, 4, 5, 7, 12, 28, 32, 35, 36, 37, 38], "critic": 0, "484512995": 0, "1211": 0, "items_missing_handl": 0, "append": [0, 14, 17, 32], "1212": 0, "1213": 0, "1214": 0, "No": [0, 2, 32, 41], "map": [0, 2, 4, 5, 14, 15, 17, 21, 23, 24, 25, 26, 37, 38, 41], "found": [0, 2, 5, 6, 9, 14, 17, 31, 32], "1215": 0, "scalarmetadata": [0, 1, 4, 9, 17, 35], "posixgpath": [0, 32, 35], "shape": [0, 4, 9, 17, 20, 23, 25, 32, 35, 38, 39], "int64": [0, 4, 32, 35], "ckpt3": 0, "state": [0, 2, 4, 7, 12, 14, 18, 28, 29, 30, 32, 34, 35, 37, 40, 41], "jsoncheckpointhandl": [0, 1, 37], "compositearg": [0, 2, 3, 4, 5, 37], "ckpt4": 0, "defin": [0, 2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 18, 22, 27, 32, 33, 38, 39, 41], "up": [0, 2, 4, 5, 6, 12, 14, 23, 32, 34, 35, 37], "front": [0, 4, 37], "contract": [0, 37], "about": [0, 4, 7, 28, 29, 30, 32, 35], "what": [0, 2, 4, 6, 7, 29, 30, 34, 37, 41], "deal": [0, 4, 7, 17, 35, 37], "composit": [0, 1, 2, 4, 5, 14, 29, 35, 37], "jsonsav": [0, 1, 2, 3, 4, 5, 29, 35, 37], "subset": [0, 4, 5, 37], "describ": [0, 9], "abov": [0, 5, 10, 15, 23, 28, 29, 30, 34, 37], "2106957155": 0, "6": [0, 14, 29, 30, 32, 35, 37, 38, 39, 40, 41], "7": [0, 29, 30, 35, 39, 41], "jsonrestor": [0, 1, 2, 3, 4, 37], "2842306685": 0, "abstractcheckpointmanag": [1, 5], "checkpointmanag": [1, 2, 4, 6, 12, 13, 28, 29, 34, 35, 36, 40], "asyncopt": 1, "multiprocessingopt": [1, 28], "util": [1, 12, 15, 17, 19, 29, 30, 33, 35, 38, 39], "function": [1, 4, 6, 7, 10, 11, 15, 18, 19, 20, 21, 23, 24, 26, 32, 33, 35, 36, 38, 39, 40, 41], "is_async_checkpoint": [1, 5], "abstractcheckpoint": [1, 4, 5], "asynccheckpoint": [1, 2, 4, 5, 12, 28, 30, 32, 37], "standardcheckpoint": [1, 4, 35, 37], "pytreecheckpoint": [1, 2, 32, 40, 41], "asynccheckpointhandl": [1, 28, 37], "compositecheckpointhandl": [1, 3, 5, 35], "arraycheckpointhandl": 1, "protocheckpointhandl": 1, "jaxrandomkeycheckpointhandl": 1, "numpyrandomkeycheckpointhandl": 1, "arraysav": [1, 3], "arrayrestor": [1, 3], "standard": [1, 4, 12, 14, 17, 18, 29, 30, 32, 41], "pytreesav": [1, 3, 29, 30, 34], "pytreerestor": [1, 3, 30, 41], "json": [1, 4, 29, 32, 35, 37, 38], "proto": [1, 4, 34], "protosav": [1, 3], "protorestor": [1, 3], "jaxrandomkei": 1, "jaxrandomkeysav": [1, 3], "jaxrandomkeyrestor": [1, 3], "numpyrandomkei": 1, "numpyrandomkeysav": [1, 3], "numpyrandomkeyrestor": [1, 3], "get_registered_handler_cl": [1, 3], "register_with_handl": [1, 3, 32], "get_registered_args_cl": [1, 3], "has_registered_arg": [1, 3], "typehandl": [1, 4, 36], "savearg": [1, 4, 7, 17, 30, 32, 34, 36, 37], "restorearg": [1, 4, 6, 7, 15, 17, 30, 32], "arrayrestorearg": [1, 3, 4, 6, 17, 30], "numpyhandl": [1, 32], "scalarhandl": [1, 32], "arrayhandl": [1, 32], "singleslicearrayhandl": 1, "stringhandl": [1, 32], "tensorstor": [1, 4, 32, 37], "is_ocdbt_checkpoint": [1, 17, 29], "merge_ocdbt_per_process_fil": [1, 4, 17], "get_json_tspec_writ": [1, 17], "get_json_tspec_read": [1, 17, 29], "get_ts_context": [1, 17], "get_cast_tspec_seri": [1, 17], "get_cast_tspec_deseri": [1, 17], "registri": [1, 4], "typehandlerregistri": [1, 4, 17], "create_type_handler_registri": [1, 17], "register_type_handl": [1, 17, 32], "get_type_handl": [1, 17], "has_type_handl": [1, 17, 32], "register_standard_handlers_with_opt": [1, 17], "atom": [1, 4, 7, 17, 37, 38], "temporarypath": 1, "atomicrenametemporarypath": 1, "commitfiletemporarypath": 1, "helper": 1, "get_default_temporary_path_class": [1, 12], "on_commit_callback": [1, 12], "entiti": 1, "nameformat": [1, 5, 6, 13, 18], "factori": [1, 5, 38, 39], "variou": [1, 33, 37, 41], "standard_name_format": [1, 14], "composite_name_format": [1, 14], "build_step_path": [1, 14], "checkpoint_steps_path": [1, 14, 18], "checkpoint_step": [1, 5, 14, 18], "any_checkpoint_step": [1, 14, 18], "latest_step_metadata": [1, 14], "step_metadata_of_checkpoint_path": [1, 14], "experiment": [1, 17, 29, 39], "find_step_path": [1, 14], "is_gcs_path": [1, 14, 18], "get_save_directori": [1, 14, 18], "is_tmp_checkpoint": [1, 14, 18], "is_checkpoint_fin": [1, 14, 18], "tmp_checkpoint": [1, 14, 18], "cleanup_tmp_directori": [1, 5, 14, 18, 28, 37], "step_from_checkpoint_nam": [1, 14, 18], "implement": [1, 2, 4, 5, 7, 11, 12, 15, 17, 28, 32], "build_step_metadata": [1, 14], "step_prefix_with_underscor": [1, 14], "delet": [1, 2, 5, 7, 17, 36, 37], "checkpointdelet": [1, 13], "delete_step": [1, 13], "__init__": [1, 2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 17, 19, 21, 23, 24, 25, 26, 27, 32], "__subclasshook__": [1, 2, 5, 11, 12, 13, 14], "standardcheckpointdelet": [1, 13], "threadedcheckpointdelet": [1, 13], "create_checkpoint_delet": [1, 13], "wait_for_new_checkpoint": [1, 6], "unlock_existing_checkpoint": [1, 6], "checkpoints_iter": [1, 6], "wrapper": [1, 17, 37], "async_makedir": [1, 18], "async_write_byt": [1, 18], "async_exist": [1, 18], "aggreg": [1, 4, 17, 34, 36], "file": [1, 4, 5, 6, 7, 12, 14, 17, 29, 30, 32, 38], "leaf_is_placehold": [1, 18], "leaf_placehold": [1, 18], "name_from_leaf_placehold": [1, 18], "lockdir": [1, 18], "is_lock": [1, 18], "are_lock": [1, 18], "fully_replicated_host_local_array_to_global_arrai": [1, 18], "misc": 1, "is_scalar": [1, 18], "record_saved_dur": [1, 18], "transform": [1, 4, 16, 17, 20, 30, 33], "__eq__": [1, 3, 5, 9, 14, 15, 17, 19, 24, 25, 27], "__hash__": [1, 3, 5, 9, 14, 15, 17, 19, 24, 25, 27], "apply_transform": [1, 4, 15], "merge_tre": [1, 15], "msgpack": [1, 4, 34], "msgpack_seri": [1, 10], "msgpack_restor": [1, 10], "multi": [1, 4, 5, 19, 33, 35, 39], "host": [1, 2, 4, 5, 7, 12, 17, 18, 19, 28, 33, 34, 35, 38, 39], "broadcast_one_to_al": [1, 11], "barriersyncfn": [1, 11], "__call__": [1, 11], "get_barrier_sync_fn": [1, 11], "unique_barrier_kei": [1, 11], "deserialize_tre": [1, 16], "from_flat_dict": [1, 16], "from_flattened_with_keypath": [1, 16], "serialize_tre": [1, 16], "to_flat_dict": [1, 16], "is_sequence_kei": [1, 16], "is_dict_kei": [1, 16], "tuple_path_from_keypath": [1, 16], "get_key_nam": [1, 16], "is_empty_nod": [1, 16], "is_empty_or_leaf": [1, 16], "to_shape_dtype_struct": [1, 16, 29, 30, 35], "get_param_nam": [1, 16], "arraymetadata": [1, 4, 9, 17, 32, 35], "stringmetadata": [1, 9, 17], "shardingmetadata": [1, 9, 17], "namedshardingmetadata": [1, 9], "singledeviceshardingmetadata": [1, 9], "gspmdshardingmetadata": [1, 9], "positionalshardingmetadata": [1, 9], "shardingtyp": [1, 9], "from_jax_shard": [1, 9], "from_serialized_str": [1, 9], "get_sharding_or_non": [1, 9], "abstractlogg": [1, 5], "compositelogg": 1, "standardlogg": 1, "cloudlogg": 1, "cloudloggeropt": 1, "stepstatist": 1, "manag": [2, 4, 5, 7, 21, 22, 29, 33, 34, 36, 37, 39, 41], "checkpoint": [2, 3, 4, 5, 9, 10, 11, 12, 14, 15, 16, 17, 23, 36, 40], "abstract_checkpoint_manag": 2, "sourc": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 31], "interfac": [2, 4, 7, 17, 22, 32], "allow": [2, 4, 7, 12, 23, 28, 29, 30, 32, 35, 37, 39, 40], "exist": [2, 4, 5, 6, 7, 12, 14, 17, 20, 29, 32, 35, 37, 41], "e": [2, 6, 11, 14, 17, 18, 20, 23, 29, 32, 38, 39], "g": [2, 5, 6, 14, 15, 17, 18, 20, 29, 32, 41], "keep": [2, 5, 17, 35], "track": 2, "multipl": [2, 4, 5, 10, 11, 14, 15, 17, 23, 32, 33, 37, 38, 41], "structur": [2, 4, 6, 7, 10, 12, 15, 16, 23, 29, 30, 32, 34, 35, 37, 41], "path": [2, 3, 4, 5, 6, 7, 12, 13, 14, 17, 18, 21, 22, 28, 29, 30, 32, 34, 35, 37, 41], "top": [2, 5, 14, 18, 29, 35], "param": [2, 5, 14, 17, 18, 23, 38, 39, 41], "first": [2, 4, 6, 7, 17, 18, 28, 29, 30, 32, 35, 37, 38, 39, 40], "saveabl": 2, "second": [2, 6, 11, 14], "contain": [2, 4, 6, 12, 14, 17, 29, 32, 35, 41], "all": [2, 3, 4, 5, 6, 7, 11, 12, 14, 15, 17, 23, 24, 25, 26, 29, 30, 32, 34, 35, 37, 38, 39, 40, 41], "item": [2, 3, 4, 5, 7, 14, 16, 18, 30, 32, 35, 37], "all_step": [2, 5, 28, 35, 37], "read": [2, 4, 5, 14, 17, 29, 30, 32, 34], "paramet": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 34, 38, 39, 41], "bool": [2, 3, 4, 5, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 20, 23, 24, 26, 32, 41], "true": [2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 20, 23, 24, 25, 26, 28, 29, 32, 34, 37, 38, 39, 41], "forc": [2, 5, 7, 32, 40], "directli": [2, 4, 5, 7, 15, 28, 29, 30, 33], "storag": [2, 4, 5, 14, 17, 28, 34], "locat": [2, 4, 7, 12, 17], "cach": [2, 5, 11, 12, 13, 14, 29, 37], "result": [2, 4, 6, 15, 27, 28, 29, 30, 32, 37, 38, 41], "sequenc": [2, 5, 14, 17, 21, 25, 26, 29, 32, 38], "int": [2, 4, 5, 6, 11, 13, 14, 16, 17, 18, 29, 32, 35, 41], "A": [2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 23, 24, 25, 26, 30, 31, 33, 37, 38, 41], "integ": [2, 5, 6, 9, 29], "latest_step": [2, 5, 35, 37, 40], "best_step": [2, 5], "best": [2, 5], "best_fn": [2, 5, 28], "reload": [2, 5], "perform": [2, 5, 7, 13, 14, 17, 28, 30, 32, 37, 41], "disk": [2, 12, 28, 29, 30, 34, 37], "intern": [2, 4, 5, 7, 17, 37, 39], "date": 2, "reached_preempt": [2, 5, 40], "preemption": [2, 33], "sync": [2, 5, 11], "point": [2, 5, 6, 28, 29, 30, 40, 41], "ha": [2, 5, 6, 12, 29, 30, 32, 35, 37, 38, 39, 41], "reach": [2, 6, 11], "should_sav": [2, 5, 35], "should": [2, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 17, 18, 23, 25, 26, 30, 32, 34, 35, 37, 38, 41], "current": [2, 5, 12, 18, 20, 24, 30, 31, 41], "interv": [2, 5, 6, 18, 37, 40], "save_kwarg": [2, 5], "metric": [2, 5, 13], "method": [2, 4, 6, 7, 12, 17, 23, 24, 32, 38], "process": [2, 5, 6, 7, 11, 12, 17, 20, 29, 38, 39], "synchron": [2, 4, 5, 7, 11, 17, 34, 35, 37, 39], "action": [2, 7, 32], "us": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 24, 25, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "instead": [2, 4, 5, 6, 7, 18, 28, 30, 32, 39, 41], "specif": [2, 3, 4, 7, 29, 32, 37, 40], "construct": [2, 4, 11, 12, 17, 18, 24, 29, 35, 38], "were": [2, 35], "assum": [2, 4, 38], "we": [2, 3, 4, 6, 7, 12, 15, 18, 28, 29, 30, 32, 34, 35, 37, 38, 39, 40, 41], "singl": [2, 4, 5, 7, 11, 12, 14, 15, 18, 23, 26, 32, 33, 35, 37, 39, 41], "must": [2, 4, 5, 6, 7, 11, 14, 15, 17, 18, 23, 25, 28, 30, 32, 35, 37, 38, 40], "below": [2, 4, 5, 28, 29, 30, 32, 35, 37, 40], "detail": [2, 5, 13, 29, 30, 35, 37, 40], "exampl": [2, 3, 4, 5, 6, 7, 14, 15, 16, 17, 25, 28, 29, 30, 32, 34, 35, 37, 39, 40], "my_train_st": 2, "meta": 2, "my_metadata": 2, "union": [2, 3, 4, 5, 6, 7, 14, 16, 17, 18, 23, 24, 26], "str": [2, 4, 5, 6, 7, 9, 11, 13, 14, 16, 17, 18, 21, 23, 24, 25, 26, 32], "savabl": [2, 4], "dictionari": [2, 4, 5, 15, 16, 29, 37, 38], "string": [2, 4, 5, 6, 9, 14, 15, 16, 17, 29, 35, 41], "numer": [2, 17, 41], "along": [2, 20, 37, 38], "requir": [2, 4, 7, 9, 15, 17, 24, 25, 28, 29, 30, 32, 35, 37], "determin": [2, 4, 5, 12, 14, 17, 18, 32], "kept": [2, 5], "conjunct": [2, 4, 6, 37], "max_to_keep": [2, 5, 6, 28, 35, 37], "attempt": [2, 38, 39], "regardless": [2, 4], "By": [2, 4, 5, 17, 23], "write": [2, 4, 5, 10, 12, 14, 17, 21, 28, 29, 32, 34, 37, 40], "permit": 2, "save_interval_step": [2, 5, 28, 35, 37, 40], "save_on_step": [2, 5, 28], "overwrit": [2, 5, 7, 32], "whether": [2, 3, 5, 14, 17, 18, 20, 23, 29, 32, 35], "oper": [2, 4, 5, 7, 12, 14, 15, 17, 28, 32, 36, 37, 39], "track_best": 2, "creation": [2, 4, 5, 29], "fail": [2, 32, 38], "alreadi": [2, 5, 7, 12, 14, 17, 28, 32, 34, 35, 37, 38, 39], "given": [2, 4, 5, 6, 7, 11, 12, 14, 16, 17, 18, 30, 35, 37], "docstr": 2, "abstract_train_st": [2, 5, 35], "accept": [2, 5, 11, 15, 17, 31, 41], "ok": 2, "wai": [2, 4, 5, 6, 7, 12, 15, 20, 30, 35, 40], "rememb": [2, 7, 41], "pathlik": [2, 5, 6, 7, 14, 18, 29], "rather": [2, 5, 6, 17, 30, 32, 33, 37], "than": [2, 5, 6, 17, 30, 32, 34, 35, 37], "independ": [2, 4, 11, 29], "where": [2, 4, 5, 7, 9, 12, 25, 29, 30, 38, 41], "kei": [2, 4, 5, 11, 15, 16, 17, 21, 23, 24, 26, 29, 30, 32, 34, 37, 38], "associ": [2, 3, 11, 15, 23], "each": [2, 5, 7, 17, 21, 23, 29, 30, 32, 33, 35, 37, 41], "To": [2, 12, 29, 32, 34, 35, 36, 38, 40, 41], "avoid": [2, 4, 5, 14, 18, 29, 30, 32], "miss": [2, 4, 6], "concret": [2, 5, 28, 30, 32, 34, 37], "constructor": [2, 4, 5, 13, 17, 21, 23, 37], "respect": [2, 37, 41], "other": [2, 3, 4, 5, 9, 11, 12, 14, 15, 17, 24, 25, 27, 28, 29, 30, 35, 37], "automat": [2, 3, 4, 5, 6, 17, 23, 28, 37, 40], "retain": [2, 5], "lifetim": [2, 38, 39], "befor": [2, 4, 5, 6, 7, 13, 14, 17, 20, 25, 28, 30, 35, 36, 38, 39, 40], "success": [2, 12, 15, 29, 41], "extra": [2, 4, 17, 30, 38], "individu": [2, 4, 17, 29, 30, 34], "retriev": [2, 35, 37], "empti": [2, 4, 14, 16, 29], "block": [2, 6, 7, 11, 28, 37], "incomplet": [2, 36, 37], "op": [2, 20, 38], "sinc": [2, 4, 5, 6, 14, 15, 29, 32, 34, 40, 41], "clean": [2, 5, 6, 12, 35, 37], "immedi": [2, 40], "after": [2, 4, 6, 9, 17, 24, 35, 39, 40], "background": [2, 5, 7, 11, 12, 13, 18, 28, 35, 36, 37], "thread": [2, 5, 7, 11, 12, 13, 28, 35, 37], "wait": [2, 6, 7, 11, 28, 37, 40], "some": [2, 4, 28, 29, 30, 32, 35, 37, 40, 41], "howev": [2, 4, 5, 12, 28, 29, 30, 32, 34, 35, 37], "check": [2, 5, 6, 20, 26, 27, 28, 32, 38], "outstand": [2, 7], "asynchron": [2, 4, 5, 7, 32, 34, 35, 37], "deleg": [2, 5, 7, 37], "underli": [2, 7], "overrid": [2, 4, 5, 11, 12, 13, 14, 17, 21, 32], "issubclass": [2, 5, 11, 12, 13, 14, 17, 32], "invok": [2, 5, 11, 12, 13, 14], "earli": [2, 5, 11, 12, 13, 14], "abc": [2, 5, 11, 12, 13, 14], "abcmeta": [2, 5, 11, 12, 13, 14], "__subclasscheck__": [2, 5, 11, 12, 13, 14], "It": [2, 4, 5, 6, 10, 11, 12, 13, 14, 17, 26, 28, 29, 30, 32, 33, 35, 37, 38], "notimpl": [2, 5, 11, 12, 13, 14], "normal": [2, 5, 11, 12, 13, 14, 30, 34, 38, 40], "algorithm": [2, 5, 11, 12, 13, 14, 17], "outcom": [2, 5, 11, 12, 13, 14], "export": [3, 4, 7, 8, 9, 11, 21, 22, 23, 24, 25, 26, 27], "symbol": [3, 4, 7, 8, 9, 11, 16], "base": [3, 5, 6, 17, 22, 27, 29, 38], "dataclass": [3, 4, 7, 32, 41], "thei": [3, 5, 6, 12, 15, 29, 35], "mycheckpointhandl": 3, "for_sav": [3, 32], "mycheckpointsav": 3, "for_restor": [3, 32], "mycheckpointrestor": 3, "usag": [3, 4, 7, 15, 41], "ckptr": [3, 4, 6, 7, 28, 30, 34, 37, 41], "custom_st": 3, "alia": [3, 17], "arraysavearg": [3, 4], "standardsavearg": [3, 4], "standardrestorearg": [3, 4], "pytreesavearg": [3, 4, 34], "pytreerestorearg": [3, 4], "jsonsavearg": [3, 4], "jsonrestorearg": [3, 4], "protosavearg": [3, 4], "protorestorearg": [3, 4], "jaxrandomkeysavearg": 3, "jaxrandomkeyrestorearg": 3, "numpyrandomkeysavearg": 3, "numpyrandomkeyrestorearg": 3, "regist": [3, 4, 5, 17, 32, 38, 39], "handler_cl": 3, "registr": [3, 32], "pass": [3, 6, 17, 23, 24, 29, 32, 34, 37, 38], "find": [3, 4, 5, 6, 14, 24, 30, 38, 39], "correct": [3, 4, 18], "both": [3, 4, 17, 29, 34, 37, 41], "decor": 3, "correspond": [3, 4, 5, 6, 12, 15, 17, 18, 24, 25, 29, 32, 34, 37, 41], "tupl": [3, 4, 9, 10, 16, 29], "namespac": [4, 7, 33], "dataset": [4, 12, 14, 18, 29, 37], "ideal": [4, 7, 12], "cheap": [4, 7], "collect": [4, 5, 7, 32], "full": [4, 7, 30, 31, 32], "final": [4, 12, 14, 17, 18, 29, 41], "callback": 4, "Will": 4, "worker": [4, 32], "async_sav": [4, 32], "await": [4, 17, 32], "copi": [4, 15, 17, 28, 32], "commit": [4, 7, 12, 14, 17], "futur": [4, 17, 23, 28, 32], "list": [4, 10, 14, 15, 17, 18, 25, 26, 29, 31, 32, 35, 37, 38], "concurrent_gb": 4, "96": [4, 32], "primary_host": [4, 5, 7, 13, 14, 17, 18, 28], "constitut": 4, "capabl": [4, 17, 35], "leav": [4, 10, 12, 23, 28, 32, 35, 37], "python": [4, 10, 25, 32, 38, 39], "scalar": [4, 5, 6, 9, 17, 29], "itself": [4, 7, 34], "non": [4, 5, 12, 18, 23, 25], "OR": [4, 6, 12, 17], "cover": 4, "consid": [4, 5, 7, 14, 17, 18, 28, 34, 37, 41], "parent": [4, 7, 17, 18, 29, 30], "creat": [4, 5, 6, 11, 12, 13, 17, 20, 23, 25, 26, 28, 29, 30, 32, 34, 35, 37, 38, 39, 41], "max": [4, 5, 28], "concurr": [4, 5, 11, 28, 32], "gb": 4, "help": [4, 5, 29, 35, 37, 38], "reduc": [4, 5, 34], "possibl": [4, 5, 17, 30, 32, 37], "oom": 4, "larg": [4, 5, 12, 30, 34, 35], "id": [4, 5, 11, 17, 39], "primari": [4, 5, 12, 17, 25], "local": [4, 5, 17, 18], "save_arg": [4, 30, 34, 37], "layer0": [4, 28, 34, 37], "w": [4, 32, 38, 39], "b": [4, 12, 15, 16, 18, 25, 29, 30, 32, 34, 35, 38, 39, 40, 41], "dir": [4, 5, 12, 13, 14, 18, 34], "aggregate_filenam": 4, "use_ocdbt": [4, 7, 17, 29, 34], "use_zarr3": [4, 7, 29, 34], "type_handler_registri": 4, "type_handl": [4, 17, 29, 30, 32, 37], "_typehandlerregistryimpl": 4, "handler_impl": 4, "consistut": 4, "leaf": [4, 6, 15, 17, 18, 25, 30, 32, 41], "todo": [4, 12, 18], "cpgaffnei": 4, "cut": 4, "down": 4, "protect": 4, "access": [4, 9, 17], "enabl": [4, 5, 17, 23, 37, 40], "ocdbt": [4, 17, 29, 32, 34], "driver": [4, 29, 34], "format": [4, 5, 10, 14, 16, 17, 26, 32, 33, 37, 38], "faster": [4, 7, 28], "well": [4, 23, 28, 29, 32], "space": 4, "effici": [4, 34], "zarr": [4, 17, 29], "ver3": 4, "ver2": 4, "global": [4, 17, 18, 20, 29, 32, 39], "basepytreecheckpointhandl": 4, "compat": [4, 17], "devic": [4, 9, 11, 17, 19, 28, 29, 30, 33, 35, 38, 39], "includ": [4, 7, 18, 29, 32, 33, 35, 37, 38], "exact": [4, 30], "combin": [4, 6, 29, 35, 37, 41], "store": [4, 9, 17, 29, 32, 34, 35, 37], "layer1": [4, 34], "small": [4, 32, 34, 40, 41], "greater": [4, 6, 17], "potenti": 4, "less": [4, 17, 28, 32, 34], "wast": [4, 34, 40], "With": [4, 17, 29], "activ": [4, 12, 30, 41], "obsolet": 4, "lambda": [4, 15, 17, 29, 30, 34, 35, 37, 38, 41], "x": [4, 15, 16, 18, 23, 29, 30, 34, 35, 37, 38, 39], "size": [4, 17, 25], "some_s": 4, "eventu": [4, 30, 41], "through": [4, 17, 32], "data": [4, 10, 11, 12, 18, 29, 32, 38], "its": [4, 7, 25, 26, 29, 38], "transforms_default_to_origin": 4, "legacy_transform_fn": 4, "basic": [4, 7, 29, 35, 37], "often": [4, 7, 28, 30, 34, 35, 37], "give": [4, 6, 17], "everi": [4, 5, 29, 34, 35, 37], "special": [4, 37], "One": [4, 5, 29], "partit": 4, "mesh": [4, 17, 20, 23, 29, 30, 35, 39], "mesh_ax": [4, 17], "also": [4, 5, 7, 12, 14, 15, 17, 18, 20, 28, 29, 30, 32, 33, 35, 37, 38, 40], "prefer": [4, 14, 28], "namedshard": [4, 9, 17, 29, 30, 35, 39], "arraytypehandl": 4, "restore_typ": [4, 17, 30], "truncat": [4, 17], "pad": [4, 14, 17], "global_shap": [4, 6, 17], "y": [4, 15, 38, 39], "take": [4, 5, 6, 7, 9, 14, 15, 17, 18, 29, 40, 41], "flax": [4, 10, 41], "struct": [4, 41], "trainstat": [4, 41], "dict": [4, 9, 10, 15, 16, 24, 29, 32, 35, 38], "train_stat": [4, 5, 6, 28, 35], "zero": [4, 5, 6, 14, 18], "_make_restore_arg": 4, "transform_util": [4, 15, 41], "callabl": [4, 5, 6, 11, 14, 17, 21, 23, 24, 25, 26, 38], "match": [4, 5, 6, 12, 14, 15, 16, 17, 20, 24, 29, 32, 37, 41], "filenotfounderror": 4, "doe": [4, 5, 7, 12, 14, 16, 17, 30, 31, 34, 38, 39, 40], "element": [4, 9, 14, 16, 17, 21, 29, 41], "multi_value_fn": [4, 15, 41], "nest": [4, 15, 16, 29, 35, 38, 41], "represent": [4, 9, 15, 16, 17, 29, 35], "jnp": [4, 17, 38, 39, 41], "float32": [4, 28, 29, 30, 34, 35, 38, 39], "8": [4, 28, 29, 30, 34, 35, 38, 39, 40, 41], "sens": 4, "composite_opt": 4, "compositeopt": 4, "active_process": [4, 5, 7, 14, 18, 28], "barrier_sync_key_prefix": [4, 5, 7, 14, 18, 28], "temporary_path_class": [4, 5, 7, 12, 28], "items_and_handl": 4, "distinct": [4, 5, 29, 33, 35, 37], "train": [4, 6, 18, 28, 30, 32, 33, 34, 35, 37, 40, 41], "iter": [4, 6, 14, 18], "anyth": [4, 34], "els": [4, 29, 32], "two": [4, 11, 15, 26, 29, 30, 37, 38], "mechan": 4, "either": [4, 7, 11, 23, 25, 30, 36], "defer": 4, "subsequ": 4, "conform": [4, 16], "assumpt": 4, "actual": [4, 12, 29, 35, 38], "skip": [4, 5, 32, 37], "too": [4, 14, 30, 34], "similar": [4, 5, 28, 30, 37], "fashion": [4, 17], "per": [4, 5, 17, 29, 30, 32, 34, 37], "order": [4, 14, 17, 25, 29, 30, 32, 37], "pattern": [4, 41], "want": [4, 12, 29, 32, 35, 37, 41], "everyth": 4, "becaus": [4, 28, 29, 32, 37, 38], "subdirectori": [4, 5, 17, 29, 33], "sub": [4, 18, 35, 37], "entri": [4, 17, 29], "compositeresult": 4, "known": [4, 40], "filenam": [4, 17], "written": [4, 6, 17, 18, 28, 38, 39], "unus": [4, 32], "checkpoint_nam": [4, 35], "handl": [4, 7, 17, 35, 36], "folder": [4, 14, 29, 32], "float": [4, 12, 17, 18, 32], "number": [4, 5, 6, 13, 14, 17, 18, 20, 28, 35, 37, 38], "array_checkpoint_handl": 4, "run": [4, 5, 6, 7, 28, 29, 32, 35, 37, 38, 40], "serial": [4, 10, 16, 17, 29, 37], "deseri": [4, 16, 17], "protocol": [4, 11, 13, 14, 25], "buffer": [4, 25], "messag": [4, 38, 39], "key_nam": 4, "random": [4, 34, 38, 39, 41], "untyp": 4, "checkpoint_arg": 4, "nnumpi": 4, "lagaci": 4, "seri": [5, 28, 35, 37], "logger": 5, "refactor": [5, 12, 20, 33, 37], "api": [5, 20, 22, 25, 28, 29, 30, 32, 33, 35, 36, 39, 40, 41], "newer": 5, "technic": 5, "ultim": 5, "back": [5, 34, 38, 40], "behind": 5, "relat": [5, 7, 29], "frill": [5, 37], "quit": [5, 28, 34], "custom_metadata": 5, "lang": [5, 29, 35], "design": [5, 30, 37, 38, 41], "context": [5, 17, 20, 23, 29, 35, 37], "schemat": 5, "cleanup": [5, 13, 14, 18], "alwai": [5, 7, 12, 37, 38], "releas": [5, 33], "resourc": [5, 28, 32, 36, 37, 40], "properli": 5, "might": 5, "program": [5, 18, 36, 39, 40], "exit": [5, 6, 36, 40], "NOT": [5, 28], "safe": [5, 11], "job": [5, 28, 34, 40], "mean": [5, 6, 28, 34, 37, 38, 41], "intend": [5, 12, 17], "across": [5, 11, 12, 23, 39], "within": [5, 17, 23, 29, 32, 35], "root": [5, 6, 14, 18], "trainer": 5, "evalu": 5, "api_refer": [5, 33], "mutual": 5, "exclus": 5, "togeth": 5, "high": [5, 6, 37], "onc": [5, 28, 32, 35, 37, 38, 39], "ignor": [5, 6, 14, 17, 18, 41], "against": [5, 32], "event": 5, "reset": [5, 20], "updat": [5, 12, 23, 28, 36, 38], "extern": [5, 38, 39], "enable_background_delet": [5, 13, 28], "is_saving_in_progress": 5, "progress": [5, 28], "keep_time_interv": [5, 28], "keep_period": [5, 28], "best_mod": [5, 28], "keep_checkpoints_without_metr": [5, 28], "step_prefix": [5, 6, 14, 18, 28], "step_format_fixed_length": [5, 6, 14, 18, 28, 37], "step_name_format": [5, 6, 14, 18, 28], "single_host_load_and_broadcast": [5, 14, 18, 28], "todelete_subdir": [5, 13, 28], "read_onli": [5, 28, 37], "async_opt": [5, 28], "multiprocessing_opt": [5, 12, 28], "should_save_fn": [5, 28], "file_opt": [5, 12, 28], "n": [5, 37, 38, 41], "maximum": [5, 6, 35], "older": [5, 32], "neg": 5, "meet": 5, "condit": 5, "etc": [5, 14, 17, 18, 29, 32, 34, 41], "remain": [5, 28], "garbag": 5, "ordinarili": [5, 12, 28], "preserv": [5, 15], "least": [5, 25], "frequenc": 5, "approxim": 5, "hour": 5, "maintain": [5, 21], "qualiti": 5, "recenc": 5, "score": 5, "measur": 5, "min": 5, "basi": 5, "elig": 5, "never": 5, "form": [5, 7, 9, 14, 15, 18, 24, 29], "_": [5, 41], "simpli": [5, 15, 28, 29, 35, 41], "digit": [5, 6, 14, 18, 37], "lead": [5, 6, 14, 18, 25, 32, 34, 37], "sort": [5, 37], "easier": [5, 29, 37], "build": [5, 14, 38], "temporari": [5, 12, 37], "fix": [5, 14, 18], "load": [5, 21, 22, 25, 29, 30, 32, 34, 35, 38, 39], "broadcast": [5, 11], "o": [5, 32, 34, 39], "qp": 5, "filesystem": [5, 12, 34], "renam": [5, 12, 13, 15, 30, 32], "system": [5, 20, 32, 39, 40], "consum": 5, "asset": [5, 38, 39], "googl": [5, 31, 33], "cloud": 5, "prefix": [5, 6, 11, 14, 18], "done": [5, 12], "end": [5, 17, 18, 24], "usual": [5, 37], "multiprocess": 5, "predic": 5, "fileopt": [5, 12, 28], "timeout_sec": [5, 7], "300": [5, 7], "barrier_sync_fn": [5, 7, 11], "post_finalization_callback": [5, 7], "process_index": [5, 17], "over": [5, 14, 15, 17, 18, 35], "belong": 5, "prepend": 5, "barrier": [5, 11], "collis": [5, 29], "anoth": [5, 6, 15, 29, 32], "conveni": [6, 35], "checkpoint_dir": [6, 14, 18], "until_step": 6, "seconds_to_sleep": 6, "timeout": [6, 11], "timeout_fn": 6, "lock": [6, 18], "unlock": 6, "execut": 6, "equal": [6, 17, 34], "sleep": [6, 32], "look": [6, 14, 23, 30, 34, 37], "left": [6, 28], "indefinit": 6, "appli": [6, 14, 15, 17, 18, 23, 27, 29, 37, 41], "_42": 6, "yield": [6, 14, 20], "stepdir": 6, "min_interval_sec": 6, "appear": [6, 14], "equival": [6, 41], "tf": [6, 21, 23, 24, 25, 26, 38, 39], "control": [6, 34], "flow": [6, 38], "revert": 6, "code": [6, 20, 32, 36, 38], "longer": [6, 29, 30, 34, 41], "between": [6, 18, 37, 38, 40, 41], "valid": [6, 14, 16, 18, 23, 26, 27, 32, 39], "increas": [6, 18, 30], "suggest": [6, 38], "expir": 6, "boolean": [6, 10, 23], "resum": [6, 40], "At": [6, 28, 37], "caller": 6, "come": 6, "fast": 6, "enough": 6, "detect": [6, 12, 40], "still": [6, 28, 29, 34, 37], "go": [6, 29, 40], "minimum": [6, 28, 34, 37], "put": [6, 28, 38, 41], "lower": 6, "bound": [6, 23, 24], "out": [6, 15, 16, 28, 34, 38], "arriv": 6, "sharding_tre": 6, "set_global_shap": 6, "wrap": [6, 23, 32, 37, 38], "train_state_shard": 6, "axes_tre": 6, "value_metadata": [6, 29, 32], "real": [6, 9, 17, 32], "field": [6, 29, 32, 41], "reli": [7, 34], "while": [7, 17, 18, 28, 30, 34, 37, 39], "common": [7, 14, 30, 33, 35, 41], "path_permission_mod": [7, 12, 28], "checkpoint_metadata_stor": [7, 12], "guarante": [7, 37, 38, 39], "strongli": 7, "coupl": 7, "pytree_of_arrai": 7, "abstract_pytree_target": 7, "pytree_of_arai": 7, "add": [7, 18, 30, 32], "overhead": 7, "place": [7, 10, 14, 30], "asyncmanag": 7, "surfac": 7, "shorthand": [7, 35, 37], "repres": [9, 12, 14, 15, 18, 29, 30, 35, 37, 41], "origin": [9, 15, 16, 17, 23, 29, 34, 35, 41], "account": [9, 18], "singledeviceshard": 9, "gspmdshard": 9, "positionalshard": 9, "classmethod": [9, 12, 25, 26], "jax_shard": 9, "convert": [9, 16, 18, 23, 24, 38], "to_jax_shard": 9, "from_deserialized_dict": 9, "deserialized_dict": 9, "serialized_str": 9, "to_serialized_str": 9, "axis_nam": 9, "partition_spec": 9, "device_str": 9, "enumer": 9, "deriv": 10, "msgpack_util": 10, "in_plac": 10, "byte": [10, 17, 34], "low": 10, "to_byt": 10, "split": [10, 17, 34, 39], "max_chunk_s": 10, "chunk": [10, 17], "primit": 10, "specifyng": 10, "modifi": [10, 38, 41], "encod": [10, 29], "encoded_pytre": 10, "from_byt": 10, "uniqu": 11, "in_tre": 11, "is_sourc": 11, "timeout_m": 11, "identifi": [11, 15, 25], "exceed": 11, "suffix": 11, "326119183": 12, "featur": [12, 17, 40], "free": [12, 39], "own": [12, 29, 38], "mainli": [12, 14], "separ": [12, 16, 29, 32, 33, 34, 37, 41], "temp": 12, "them": [12, 17, 25, 32, 33, 34, 38], "touch": 12, "primarili": 12, "commit_success": [12, 14, 18], "difficult": 12, "reason": [12, 32], "achiev": 12, "furthermor": [12, 28, 30], "opt": 12, "flexibl": [12, 32, 33], "approach": [12, 34], "importantli": [12, 28, 40], "except": [12, 32, 37], "from_fin": 12, "final_path": 12, "temporary_path": 12, "could": [12, 32, 34, 38, 39, 40, 41], "get_fin": 12, "contrast": [12, 35], "determinist": [12, 39], "final_dir": 12, "fileexistserror": 12, "tmp_dir": 12, "commit_timestamp_nsec": [12, 14], "checkpoint_start_tim": [12, 18], "durat": [12, 13, 18, 28], "lineag": 12, "began": 12, "name_format": [13, 14], "duration_metr": 13, "standard_checkpoint_delet": 13, "refer": [13, 16, 17, 29, 33, 37], "_name_format": 13, "total": [13, 38], "_todelete_subdir": 13, "etil": [14, 28, 29, 32, 34, 37], "epath": [14, 28, 29, 32, 34, 37], "abstract_path": 14, "init_timestamp_nsec": 14, "init": [14, 18, 32, 41], "timestamp": [14, 18, 29], "uncommit": 14, "nano": 14, "epoch": 14, "commit_timestamp": 14, "datetim": 14, "utc": 14, "timezon": 14, "__delattr__": 14, "delattr": 14, "hash": [14, 39], "__setattr__": 14, "setattr": 14, "respons": [14, 17], "queri": 14, "build_nam": 14, "hint": 14, "attribut": [14, 25], "meant": 14, "find_al": 14, "base_path": 14, "metadatat": 14, "find_step": 14, "23": [14, 35], "4": [14, 28, 29, 30, 32, 35, 37, 38, 39, 40, 41], "0023": 14, "step_23": 14, "step_0023": 14, "underscor": 14, "length": [14, 34], "000123": 14, "write_name_format": 14, "read_name_format": 14, "prioriti": 14, "posit": 14, "conflict": [14, 17], "highest": 14, "lowest": [14, 37], "earlier": [14, 29], "entir": [14, 18, 28, 32], "root_path": 14, "checkpoint_path": 14, "include_uncommit": 14, "subject": [14, 23], "subdir": 14, "search": 14, "override_directori": [14, 18], "my": [14, 18, 34, 35, 37, 41], "txt": [14, 18], "step_path": 14, "build_metadata": 14, "filter": [14, 15, 16], "original_kei": [15, 30, 41], "use_fallback": [15, 41], "value_fn": [15, 41], "pair": [15, 17, 37], "denot": [15, 29, 37, 41], "regex": 15, "r": [15, 32, 41], "1b": 15, "charact": 15, "kv": [15, 41], "signifi": 15, "multipli": [15, 41], "backrefer": [15, 41], "replac": [15, 30, 41], "group": [15, 32], "fallback": 15, "default_to_origin": [15, 41], "new_tre": [15, 41], "original_tre": [15, 41], "suppos": 15, "multi_value_fn_input_arg": 15, "output": [15, 23, 25, 26, 34, 38, 41], "c": [15, 29, 30, 35, 38, 39, 41], "d": [15, 29, 30, 32, 34, 35], "b1": 15, "b2": [15, 41], "a1": [15, 41], "doubl": 15, "drop": [15, 17, 41], "c1": 15, "c2": 15, "z": [15, 41], "sum": [15, 41], "carri": 15, "matter": [15, 30], "here": [15, 18, 24, 27, 30, 31, 32, 34, 37, 38, 39, 40], "x1": 15, "x2": 15, "relev": [15, 17, 32], "taken": [15, 41], "merg": [15, 17, 29], "overlap": 15, "preced": [15, 17], "public": [16, 22], "keep_empty_nod": 16, "flat_dict": [16, 38], "sep": 16, "reconstruct": [16, 25, 29], "flatten": [16, 29, 41], "unflatten": 16, "infer": [16, 23, 24, 37], "necessarili": 16, "flat_with_kei": 16, "flat": 16, "keypath": 16, "serializ": 16, "node": [16, 25, 29, 41], "foo": [16, 29], "bar": 16, "tree_map_with_path": 16, "scalar_dtyp": 16, "write_chunk_shap": 17, "read_chunk_shap": 17, "chunk_byte_s": [17, 34], "custom_handl": [17, 33], "contact": [17, 36], "team": [17, 36], "aggregatehandl": 17, "cast": 17, "bfloat16": 17, "divisor": 17, "choos": 17, "largest": 17, "chosen": 17, "greedi": 17, "priorit": 17, "dimens": [17, 25, 37], "arbitrari": [17, 35, 38], "reshap": [17, 39], "shorter": 17, "excess": 17, "typestr": [17, 32], "paraminfo": [17, 29, 32], "remot": [17, 34], "applic": [17, 30, 39], "later": [17, 29], "sequnec": 17, "noth": 17, "param_info": 17, "parent_dir": [17, 29], "metadata_kei": 17, "replic": [17, 34], "numpi": [17, 24, 25, 28, 29, 30, 32, 34, 35, 38, 39, 41], "around": 17, "replica_id": 17, "replica": 17, "pick": 17, "ts_context": [17, 29], "kvstore": [17, 29], "local_shap": 17, "spec": [17, 25, 29, 30, 35], "tspec": [17, 29], "serv": [17, 21, 24, 25, 30, 35, 38], "ty": 17, "func": 17, "re": [17, 28, 32, 35, 37], "select": 17, "mass": 17, "favor": 18, "those": [18, 20, 37, 38], "266449081": 18, "unit": [18, 29], "test": [18, 38, 39], "coverag": 18, "exist_ok": [18, 32], "placehold": 18, "act": 18, "parallel": [18, 32, 34], "arr": 18, "produc": [18, 34], "pmap": 18, "veri": [18, 34], "start": [18, 28, 29, 33, 35, 37, 38], "prallel": 18, "dtensor": [19, 23], "initialize_dtensor": [19, 20, 39], "dtensor_initi": [19, 20, 39], "shutdown_dtensor": [19, 20, 39], "jax_mesh_to_dtensor_mesh": [19, 20], "maybe_enable_dtensor_export_on": [19, 20, 23, 39], "get_current_dtensor_mesh": [19, 20], "exportmanag": [19, 22, 38, 39], "exportmanagerbas": 19, "jaxmodul": [19, 21, 24, 26, 39], "servingconfig": [19, 21, 26, 38, 39], "tensorspecwithdefault": 19, "callablesignatur": 19, "with_default_arg": [19, 25], "make_auto_batching_funct": [19, 25], "validationmanag": [19, 38, 39], "validationreport": [19, 26, 38], "validationreportopt": 19, "__post_init__": [19, 27], "distribut": [20, 39], "dtensor_util": [20, 39], "reset_context": [20, 39], "tensorflow": [20, 25, 33, 38, 39], "tensor": [20, 24, 25, 38, 39], "undefin": 20, "escap": 20, "hatch": 20, "clear": [20, 32], "initialize_accelerator_system": 20, "runtimeerror": 20, "client": 20, "pjit": [20, 39], "axi": [20, 23], "export_manag": 21, "serving_config": [21, 24, 26, 38, 39], "pre": [21, 24, 32, 38], "post": [21, 24, 38], "processor": [21, 24, 38], "coorespond": 21, "signatur": [21, 23, 24, 25, 26, 38], "savedmodel": [21, 25, 26, 33, 38, 39], "tf_modul": 21, "serving_signatur": 21, "model_path": [21, 22], "save_opt": 21, "signature_overrid": 21, "model": [21, 22, 23, 25, 26, 28, 29, 30, 32, 33, 34, 35, 38, 41], "savemodel": [21, 22], "saveopt": 21, "saved_model": [21, 25, 38, 39], "ones": [21, 25, 28, 29, 30, 35, 41], "export_manager_bas": 22, "jax_modul": [23, 38, 39], "apply_fn": [23, 41], "trainabl": 23, "input_polymorphic_shap": 23, "jax2tf_kwarg": 23, "jit_compil": 23, "pspec": [23, 39], "allow_multi_axis_sharding_conslid": 23, "hold": [23, 25], "variabl": 23, "applyfn": 23, "assign": 23, "default_method_kei": 23, "tell": [23, 35, 37], "thu": [23, 41], "recommend": [23, 32, 38], "explicitli": [23, 29, 36, 37], "polymorhp": 23, "polymorph": 23, "jax2tf": 23, "polymorphic_shap": 23, "with_gradi": 23, "jit": [23, 35], "compil": [23, 38, 39], "partitionspec": [23, 29, 30, 35, 39], "disallow": 23, "conslid": 23, "convers": [23, 38], "apply_fn_map": 23, "model_param": 23, "jax2tf_kwargs_map": 23, "input_polymorphic_shape_map": 23, "update_vari": 23, "addition": [23, 34, 37], "jax_method": 23, "to_jax_exported_map": 23, "model_input": [23, 26], "output_dir": [23, 38], "jax_export": 23, "jax_exported_map": 23, "signature_kei": 24, "input_signatur": [24, 25, 38, 39], "tf_preprocessor": [24, 38], "tf_postprocessor": [24, 38], "extra_trackable_resourc": 24, "method_kei": 24, "get_input_signatur": 24, "explict": 24, "get_infer_step": 24, "infer_step_fn": 24, "right": 24, "fn": 24, "infer_step": 24, "usus": 24, "bind": 24, "require_numpi": 24, "e2": [24, 38], "whose": [24, 25], "decid": [24, 26], "preprocess": [24, 38], "postprocess": [24, 38], "rule": 24, "thumb": 24, "func_map": 24, "tensor_spec": 25, "default_v": 25, "is_primari": 25, "extend": 25, "tensorspec": [25, 38, 39], "constraint": [25, 35], "convent": 25, "sess": 25, "signature_def": 25, "signaturedef": 25, "from_saved_model": 25, "model_dir": 25, "tag": 25, "sess_config": 25, "reconsruct": 25, "henc": 25, "tf1": 25, "serving_default": [25, 38, 39], "tf2": 25, "loaded_tf2": 25, "But": 25, "metagraph": 25, "configproto": 25, "session": 25, "tf_fn": 25, "polymorphicfunct": 25, "auto": [25, 40], "batch": [25, 26, 32, 39], "There": [25, 30, 33, 37], "int32": [25, 29, 30, 35], "batching_fn": 25, "constant": 25, "definit": 26, "validation_manag": 26, "ojbect": 26, "loaded_model": [26, 38, 39], "with_xprof": 26, "report_opt": 26, "baselin": [26, 27, 38], "candid": [26, 27, 38], "check_input": 26, "batch_mod": 26, "check_output": 26, "baseline_result": 26, "candidate_result": 26, "validation_report": [27, 38], "report": [27, 33, 38], "validationsinglejobresult": 27, "config": [27, 38], "compar": [27, 38], "criterion": 27, "floating_atol": 27, "1e": [27, 38], "07": [27, 38, 39], "floating_rtol": 27, "max_non_floating_mismatch_ratio": [27, 38], "01": [27, 38], "output_report_path": 27, "print_debug_info": 27, "legal": 27, "overflowerror": 27, "proce": [28, 32], "amount": 28, "portion": [28, 34], "spend": 28, "slow": [28, 34], "network": 28, "connect": 28, "expens": [28, 32], "tpu": 28, "gpu": 28, "previous": [28, 34, 35], "idl": 28, "product": 28, "higher": 28, "proport": 28, "worri": 28, "significantli": [28, 37], "On": 28, "300m": 28, "decreas": 28, "40": [28, 32, 39], "8b": 28, "85": [28, 32], "340b": 28, "97": [28, 32], "short": 28, "adopt": 28, "highli": [28, 32], "encourag": 28, "improv": [28, 30], "throughput": 28, "substanti": [28, 34, 40], "setup": [28, 29, 34, 41], "kernel": [28, 41], "bia": [28, 37, 41], "simpl": [28, 35, 39, 41], "someth": 28, "TO": 28, "sync_checkpoint": 28, "kick": 28, "off": [28, 37], "main": [28, 40], "aliv": 28, "async_checkpoint_manag": 28, "ckpt_mngr": 28, "train_step": [28, 37, 40], "accordingli": 28, "num_step": [28, 35, 37, 40], "switch": 28, "frozenset": 28, "memori": [28, 32, 34, 39], "corrupt": 28, "shown": 28, "generaliz": 28, "practic": [28, 30, 34], "our": [28, 33, 34, 35, 38], "guid": [28, 30, 32, 33], "understand": [29, 37], "particularli": [29, 30, 34], "ever": 29, "debug": 29, "piec": 29, "larger": [29, 34], "create_sharded_arrai": [29, 30, 35], "device_put": [29, 30, 35, 39], "arang": [29, 30, 35], "16": [29, 30, 35, 38], "tree_util": [29, 30, 34, 35, 37], "tree_map": [29, 30, 34, 35, 37], "abstract_st": [29, 30], "10": [29, 30, 32, 34, 35, 39, 41], "11": [29, 30, 35], "12": [29, 30, 32, 35, 40, 41], "13": [29, 30, 32, 35], "14": [29, 30, 32, 35], "15": [29, 30, 35], "print_directori": 29, "purpos": [29, 34, 35], "assert": [29, 32, 38, 39], "is_dir": 29, "level_str": 29, "p": [29, 39, 41], "iterdir": [29, 34, 35], "global_metadata": 29, "global_properti": 29, "custom_data": 29, "_checkpoint_metadata": [29, 32, 35], "_string": 29, "process_0": [29, 32, 34], "manifest": [29, 32, 34], "8e172779b2c1d0e83ca9a2cc1a0dc55d": 29, "697e69ecab1aa3bea377b2ef277892af": 29, "de776f8ac0adda96122b34430d046a60": 29, "7c381fd96c90fe944fde271d08ed0ac2": 29, "d64623d715b03a65cf3427a25d21e58": 29, "_shard": 29, "_metadata": [29, 32], "3ad5287cb85d6e22345d73ea05201c47": 29, "understood": 29, "resid": 29, "asid": 29, "term": 29, "natur": [29, 30], "compositit": 29, "prevent": [29, 32, 34, 36], "embed": 29, "univers": 29, "descript": 29, "read_text": 29, "tree_metadata": [29, 34], "key_metadata": 29, "key_typ": 29, "value_typ": 29, "skip_deseri": 29, "isn": 29, "realli": [29, 30], "human": 29, "readabl": [29, 34], "though": [29, 40], "beyond": 29, "librari": [29, 33, 34, 38, 41], "opaqu": 29, "reader": 29, "ll": 29, "notic": 29, "presenc": 29, "cheapli": 29, "view": 29, "sometim": 29, "pool": 29, "repeat": 29, "100mb": 29, "limit": 29, "cache_pool": 29, "total_bytes_limit": 29, "100000000": 29, "array_seri": 29, "state_dir": 29, "param_nam": 29, "param_path": 29, "zarr3": [29, 34], "experimental_read_coalescing_threshold_byt": 29, "1000000": 29, "experimental_read_coalescing_merged_byt": 29, "500000000000": 29, "experimental_read_coalescing_interv": 29, "1m": 29, "recheck_cached_data": 29, "recheck_cached_metadata": 29, "verifi": 29, "gather": [29, 32, 35], "open": [29, 31, 32], "zarrai": [29, 34], "manner": 30, "pride": 30, "extens": [30, 39], "essenti": [30, 35, 37], "major": 30, "fulli": [30, 34], "ineffici": 30, "better": [30, 32], "manual": [30, 35, 37, 38], "eval_shap": 30, "set_restore_dtyp": 30, "int16": 30, "cast_dtype_abstract_st": 30, "different_shape_abstract_st": 30, "32": [30, 38], "sharp": 30, "edg": [30, 33], "commonli": 30, "decis": 30, "behalf": 30, "demonstr": [30, 39], "alter": 30, "set_shard": 30, "change_sharding_abstract_st": 30, "home": [30, 32, 39], "doc": [30, 32, 35, 39], "1442": 30, "userwarn": [30, 39], "couldn": 30, "popul": 30, "slightli": [30, 34], "long": 30, "rel": [30, 37], "upgrad": [30, 41], "contribut": 31, "colin": 31, "gaffnei": 31, "dinghua": 31, "li": 31, "john": 31, "zhang": 31, "ruoxin": 31, "sang": 31, "ayush": 31, "jain": 31, "haitang": 31, "hu": 31, "project": 31, "section": 32, "notebook": 32, "cell": 32, "asyncio": 32, "functool": 32, "pytree_checkpoint_handl": 32, "walk": 32, "certain": [32, 33, 35], "why": 32, "mystat": 32, "optim": [32, 33, 41], "dispatch": 32, "mess": 32, "isinst": 32, "mystatehandl": 32, "npz": 32, "_executor": 32, "threadpoolexecutor": 32, "max_work": 32, "del": 32, "zip": 32, "mkdir": 32, "submit": 32, "partial": [32, 37], "_write_st": 32, "get_event_loop": 32, "run_in_executor": 32, "_from_stat": 32, "explain": 32, "my_stat": 32, "savez": 32, "my_tre": [32, 35], "20": [32, 35], "30": 32, "50": 32, "60": 32, "my_checkpoint": 32, "rmtree": 32, "echo": 32, "l": 32, "asdf": 32, "instal": 32, "19": [32, 35], "pty": 32, "runtimewarn": 32, "fork": 32, "incompat": 32, "multithread": 32, "deadlock": 32, "pid": 32, "fd": 32, "forkpti": 32, "inspect": [32, 35], "costli": 32, "fit": 32, "extract": 32, "subtre": 32, "especi": 32, "mystatemetadata": 32, "a_shap": 32, "b_shape": 32, "mystatehandlerwithmetdata": 32, "_read_metadata": 32, "header": 32, "pretti": 32, "typeerror": 32, "ipykernel_940": 32, "1325065468": 32, "cl": 32, "repr": 32, "eq": 32, "unsafe_hash": 32, "frozen": 32, "1019": 32, "1020": 32, "paren": 32, "1021": 32, "1022": 32, "1023": 32, "1011": 32, "1012": 32, "1013": 32, "_process_class": 32, "1014": 32, "1015": 32, "925": 32, "_field_typ": 32, "_field": 32, "_field_initvar": 32, "926": 32, "_set_new_attribut": 32, "927": 32, "_init_fn": 32, "fld": 32, "928": 32, "929": 32, "has_post_init": 32, "self_nam": 32, "502": 32, "seen_default": 32, "503": 32, "elif": 32, "504": 32, "505": 32, "506": 32, "didn": 32, "newli": [32, 41], "aspect": 32, "lot": 32, "glob": 32, "legacymystatecheckpointhandl": 32, "use_npz": 32, "join": 32, "dump": 32, "tolist": 32, "restore_as_dict": 32, "state_fil": 32, "fspath": 32, "mystatecheckpointhandl": 32, "mystatesav": 32, "mystaterestor": 32, "legacy_path2": 32, "legacy_checkpoint": 32, "__main__": 32, "nameerror": [32, 41], "3432597007": 32, "242": [32, 39], "243": 32, "244": 32, "245": 32, "246": 32, "94": 32, "95": 32, "98": 32, "560276776": 32, "45": [32, 39], "46": 32, "47": 32, "48": 32, "49": 32, "path2": 32, "2863598327": 32, "3120497307": 32, "41": 32, "42": [32, 35], "43": [32, 35], "44": 32, "comput": [32, 38, 39], "stall": 32, "cpu": [32, 38, 39], "task": [32, 35], "mystateasynccheckpointhandl": 32, "artifici": 32, "inflat": 32, "spent": 32, "shutdown": 32, "illustr": 32, "world": 32, "path3": 32, "content": 32, "async_st": 32, "umbrella": 33, "interrel": 33, "customiz": [33, 34], "pypi": 33, "pip": 33, "github": 33, "command": 33, "obtain": 33, "optax": 33, "git": 33, "com": 33, "window": 33, "plan": 33, "yet": 33, "similarli": [33, 37], "announc": 33, "orbax_checkpoint_announc": 33, "orbax_checkpoint_101": 33, "orbax_checkpoint_api_overview": 33, "checkpointing_pytre": 33, "checkpoint_format": 33, "optimized_checkpoint": 33, "toler": 33, "preemption_checkpoint": 33, "orbax_export_101": 33, "issu": 33, "request": 33, "tracker": 33, "scalabl": 34, "came": 34, "few": [34, 35], "drawback": 34, "chief": 34, "among": 34, "fact": 34, "hundr": 34, "billion": 34, "layer": [34, 41], "stack": 34, "thousand": 34, "undesir": 34, "pain": 34, "preempt": 34, "frequent": 34, "restart": [34, 40], "concern": 34, "happen": [34, 35, 37, 38, 41], "smaller": 34, "empir": 34, "observ": 34, "speed": 34, "param0": 34, "another_item": 34, "mayb": 34, "012b2c6e5c9d2a16c240a59d5f0f35c0": 34, "056e0816bdc5496a86251e58a0ec202b": 34, "0000000000000001": 34, "tempfil": [34, 39], "subprocess": 34, "multidimension": 34, "offer": 34, "caus": 34, "layout": [34, 39], "aris": 34, "anticip": 34, "1mb": 34, "won": 34, "affect": 34, "impact": [34, 37], "array_len": 34, "1024": 34, "prngkei": [34, 39, 41], "subkei": 34, "32kb": 34, "64kb": 34, "1kb": 34, "temp_dir": 34, "temporarydirectori": 34, "mgr": 34, "target_byte_s": 34, "gc": 34, "ocdbt_target_data_file_s": 34, "print_directory_file_s": 34, "data_dir": 34, "is_fil": 34, "stat": 34, "examin": [34, 37], "tmpoawlmo3u": 34, "782199be187042b19808645ebf60a483": 34, "99432": 34, "kb": 34, "much": 34, "tmp73cy32ui": 34, "1665fddb5994cbf6cb33f20b96977f28": 34, "17260": 34, "99073179bc3bbc509d40f8dea080eafa": 34, "10286": 34, "b0b2c235f9f9297436bf1670b4ad1158": 34, "10292": 34, "5c9028ade16e89ce30a61ee76837cde": 34, "10299": 34, "2f8ff798d10d7d7393595639d0bedf48": 34, "10288": 34, "bbe2bc1484ba776deebfc21cf61b9fa6": 34, "26b3c232c0c77ba9880b86410ee2e8d5": 34, "10310": 34, "09ae8d6dacf5478080425f9b4a192eb1": 34, "10323": 34, "17da0760f1e84b70d78aa4abffda2ae9": 34, "10284": 34, "accomplish": [35, 40], "depth": 35, "complic": [35, 41], "abstract_my_tre": 35, "easi": 35, "suffici": 35, "advanc": 35, "suitabl": 35, "imagin": 35, "easili": 35, "composite_checkpoint": [35, 37], "sequenti": 35, "accord": 35, "period": [35, 40], "bewar": 35, "extra_param": 35, "rang": [35, 37, 40], "restored_st": [35, 41], "restored_extra_param": 35, "cours": 35, "environ": [35, 39], "checkpoint_manager_shard": 35, "train_fn": 35, "17": 35, "18": [35, 38, 39], "21": 35, "22": [35, 38, 39], "24": 35, "zeros_lik": 35, "checkpoint_manager_context": 36, "proper": 36, "learn": 36, "encapsul": 37, "crucial": 37, "isol": 37, "upon": 37, "thing": 37, "discern": 37, "differenti": 37, "weight": [37, 41], "my_data": 37, "conceptu": 37, "realiz": 37, "speedup": 37, "mention": 37, "think": 37, "choic": 37, "visual": 37, "Be": 37, "wari": 37, "turn": 37, "target_st": 37, "_state": 37, "_extra_metadata": 37, "three": 38, "closur": 38, "trackableresourc": 38, "inherit": 38, "hardwar": 38, "readi": 38, "prepar": 38, "example1_param": 38, "55": 38, "sin": [38, 39], "example1_model_fn": 38, "example1_preprocess": 38, "preprocessor": 38, "norm_input": 38, "map_structur": 38, "math": 38, "reduce_max": 38, "example1_postprocess": 38, "model_fn_output": 38, "33": [38, 39], "31": 38, "277557": 38, "local_xla": [38, 39], "xla": [38, 39], "stream_executor": [38, 39], "cuda": [38, 39], "cuda_fft": [38, 39], "cc": [38, 39], "485": [38, 39], "unabl": [38, 39], "cufft": [38, 39], "plugin": [38, 39], "296776": 38, "cuda_dnn": [38, 39], "8454": [38, 39], "cudnn": [38, 39], "302305": 38, "cuda_bla": [38, 39], "1452": [38, 39], "cubla": [38, 39], "293931": 38, "tf2tensorrt": [38, 39], "py_util": [38, 39], "38": [38, 39], "trt": [38, 39], "tensorrt": [38, 39], "model_output": 38, "2497077": 38, "71577436": 38, "2752213": 38, "7577755": 38, "14171076": 38, "3438435": 38, "38742545": 38, "5236475": 38, "2990017": 38, "8615575": 38, "301152": 38, "3622999": 38, "3470116": 38, "14385182": 38, "9656446": 38, "8573546": 38, "export_mgr": [38, 39], "example1_output_dir": 38, "loaded_model_output": 38, "2497075": 38, "5236478": 38, "857355": 38, "initializelog": [38, 39], "stderr": [38, 39], "i0000": [38, 39], "00": [38, 39], "1721342013": 38, "875786": 38, "1226": 38, "servic": [38, 39], "146": [38, 39], "0x7fab9c008320": 38, "platform": [38, 39], "875832": 38, "154": [38, 39], "streamexecutor": [38, 39], "900130": 38, "device_compil": [38, 39], "h": [38, 39], "188": [38, 39], "cluster": [38, 39], "line": [38, 39], "assert_allclos": 38, "atol": 38, "rtol": 38, "funtion": 38, "model_fn": 38, "pack": 38, "encount": 38, "solv": 38, "problem": 38, "example2_param": 38, "example2_model_fn": 38, "example2_preprocessor": 38, "model_func": 38, "example2_output_dir": 38, "4540081": 38, "7459334": 38, "4337778": 38, "7292558": 38, "13133897": 38, "22628856": 38, "3348992": 38, "727082": 38, "9575605": 38, "02830961": 38, "7293793": 38, "8874733": 38, "8366392": 38, "9934858": 38, "2853003": 38, "5893724": 38, "validationjob": 38, "batch_input": 38, "validation_mgr": 38, "tf_saved_model_path": 38, "serving_kei": 38, "statu": 38, "to_json": 38, "indent": 38, "flat_list": 38, "got": 38, "framework": [38, 39], "eagertensor": 38, "floatingpointdiffreport": 38, "256": 38, "max_diff": 38, "76837158203125e": 38, "max_rel_diff": 38, "140828100522413e": 38, "08": 38, "all_clos": 38, "all_close_absolute_toler": 38, "all_close_relative_toler": 38, "nonfloatingpointdiffreport": 38, "total_flattened_tensor": 38, "mismatch": 38, "mismatch_ratio": 38, "latenc": 38, "num_batch": 38, "avg_in_m": 38, "0320097208023071": 38, "p90_in_m": 38, "0459423065185547": 38, "p99_in_m": 38, "1519670486450195": 38, "989424228668213": 38, "201676368713379": 38, "532589435577392": 38, "xprof_url": 38, "fairli": 38, "output_0": 38, "appl": 38, "develop": 39, "compos": 39, "emul": 39, "core": 39, "virtual": 39, "flag": 39, "xla_flag": 39, "xla_force_host_platform_device_count": 39, "cpudevic": 39, "acceler": 39, "fabric": 39, "980285": 39, "999003": 39, "39": 39, "004740": 39, "038455": 39, "dim_x": 39, "16000": 39, "dim_i": 39, "8000": 39, "k1": 39, "k2": 39, "k3": 39, "example3_param": 39, "uniform": 39, "example3_input": 39, "example3_model_fn": 39, "matmul": 39, "mesh_shap": 39, "asarrai": 39, "params_pspec": 39, "sharded_param": 39, "sharded_input": 39, "sharded_model_fn": 39, "in_shard": 39, "out_shard": 39, "obx_export": 39, "export_dir": 39, "mkdtemp": 39, "messagefactori": 39, "getmessageclass": 39, "getprototyp": 39, "as_proto": 39, "serializetostr": 39, "tmppg7ptpkh": 39, "302821": 39, "local_tsl": 39, "tsl": 39, "cpu_allocator_impl": 39, "83": 39, "alloc": 39, "512000000": 39, "exce": 39, "tf_input": 39, "convert_to_tensor": 39, "1721342026": 39, "185129": 39, "1308": 39, "0x7f529428c090": 39, "185154": 39, "185159": 39, "185161": 39, "185164": 39, "185167": 39, "185169": 39, "185172": 39, "185175": 39, "212234": 39, "4012": 39, "061": 39, "3977": 39, "1375": 39, "3994": 39, "8787": 39, "3965": 39, "551": 39, "4050": 39, "7322": 39, "3978": 39, "2388": 39, "recov": 40, "quickli": 40, "interrupt": 40, "various": 40, "demand": 40, "receiv": 40, "signal": 40, "advantag": 40, "shorten": 40, "occur": 40, "fewer": 40, "multihost_util": 40, "mydir": 40, "start_step": 40, "align": 40, "minut": 40, "grace": 40, "termin": 40, "modif": [40, 41], "depict": 40, "facilit": 41, "surgeri": 41, "finetun": 41, "reus": 41, "a2": 41, "b5": 41, "a_1": 41, "b_5": 41, "dense_1": 41, "dense_2": 41, "_new": 41, "_1": 41, "1_": 41, "a_new": 41, "dense_1_new": 41, "kernel_1": 41, "bias_1": 41, "dense_2_new": 41, "quantiz": 41, "hyperparamet": 41, "v": 41, "dense_1_kernel": 41, "dense_1_bia": 41, "dense_2_kernel": 41, "dense_2_bia": 41, "averag": 41, "a_2": 41, "b_1": 41, "b_2": 41, "b_3": 41, "k": 41, "len": 41, "dense_0": 41, "dense_3": 41, "onto": 41, "randomli": 41, "input_s": 41, "new_stat": 41, "tx": 41, "original_st": 41, "newmodel": 41, "insert": 41, "originalmodel": 41, "1dense_0": 41, "1dense_1": 41, "ad": 41, "unpack": 41, "omit": 41, "key1": 41, "big": 41, "key2": 41, "to_sav": 41, "100": 41, "to_restor": 41, "restored1": 41, "restored2": 41, "1key2": 41, "modulenotfounderror": 41, "ipykernel_1455": 41, "1688818069": 41, "3477447246": 41, "3102324940": 41, "referenc": 41, "num": 41}, "objects": {"orbax": [[7, 0, 0, "-", "checkpoint"]], "orbax.checkpoint": [[7, 1, 1, "", "AbstractCheckpointer"], [4, 1, 1, "", "ArrayCheckpointHandler"], [4, 1, 1, "", "AsyncCheckpointHandler"], [7, 1, 1, "", "AsyncCheckpointer"], [4, 1, 1, "", "CheckpointHandler"], [7, 1, 1, "", "Checkpointer"], [4, 1, 1, "", "CompositeCheckpointHandler"], [4, 1, 1, "", "JaxRandomKeyCheckpointHandler"], [4, 1, 1, "", "JsonCheckpointHandler"], [4, 1, 1, "", "NumpyRandomKeyCheckpointHandler"], [4, 1, 1, "", "ProtoCheckpointHandler"], [4, 1, 1, "", "PyTreeCheckpointHandler"], [7, 1, 1, "", "PyTreeCheckpointer"], [4, 1, 1, "", "StandardCheckpointHandler"], [7, 1, 1, "", "StandardCheckpointer"], [2, 0, 0, "-", "abstract_checkpoint_manager"], [3, 0, 0, "-", "args"], [5, 0, 0, "-", "checkpoint_manager"], [6, 0, 0, "-", "checkpoint_utils"], [8, 0, 0, "-", "logging"], [9, 0, 0, "-", "metadata"], [10, 0, 0, "-", "msgpack_utils"], [11, 0, 0, "-", "multihost"], [15, 0, 0, "-", "transform_utils"], [16, 0, 0, "-", "tree"], [17, 0, 0, "-", "type_handlers"], [18, 0, 0, "-", "utils"]], "orbax.checkpoint.AbstractCheckpointer": [[7, 2, 1, "", "close"], [7, 2, 1, "", "metadata"], [7, 2, 1, "", "restore"], [7, 2, 1, "", "save"], [7, 2, 1, "", "structure"]], "orbax.checkpoint.ArrayCheckpointHandler": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "async_save"], [4, 2, 1, "", "close"], [4, 2, 1, "", "finalize"], [4, 2, 1, "", "restore"], [4, 2, 1, "", "save"]], "orbax.checkpoint.AsyncCheckpointHandler": [[4, 2, 1, "", "async_save"]], "orbax.checkpoint.AsyncCheckpointer": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "check_for_errors"], [7, 2, 1, "", "close"], [7, 2, 1, "", "restore"], [7, 2, 1, "", "save"], [7, 2, 1, "", "wait_until_finished"]], "orbax.checkpoint.CheckpointHandler": [[4, 2, 1, "", "close"], [4, 2, 1, "", "finalize"], [4, 2, 1, "", "metadata"], [4, 2, 1, "", "restore"], [4, 2, 1, "", "save"]], "orbax.checkpoint.Checkpointer": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "close"], [7, 2, 1, "", "metadata"], [7, 2, 1, "", "restore"], [7, 2, 1, "", "save"]], "orbax.checkpoint.CompositeCheckpointHandler": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "async_save"], [4, 2, 1, "", "close"], [4, 2, 1, "", "finalize"], [4, 2, 1, "", "metadata"], [4, 2, 1, "", "restore"], [4, 2, 1, "", "save"]], "orbax.checkpoint.JaxRandomKeyCheckpointHandler": [[4, 2, 1, "", "async_save"], [4, 2, 1, "", "restore"], [4, 2, 1, "", "save"]], "orbax.checkpoint.JsonCheckpointHandler": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "async_save"], [4, 2, 1, "", "close"], [4, 2, 1, "", "restore"], [4, 2, 1, "", "save"]], "orbax.checkpoint.NumpyRandomKeyCheckpointHandler": [[4, 2, 1, "", "async_save"], [4, 2, 1, "", "restore"], [4, 2, 1, "", "save"]], "orbax.checkpoint.ProtoCheckpointHandler": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "async_save"], [4, 2, 1, "", "close"], [4, 2, 1, "", "restore"], [4, 2, 1, "", "save"]], "orbax.checkpoint.PyTreeCheckpointHandler": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "async_save"], [4, 2, 1, "", "close"], [4, 2, 1, "", "finalize"], [4, 2, 1, "", "metadata"], [4, 2, 1, "", "restore"], [4, 2, 1, "", "save"]], "orbax.checkpoint.PyTreeCheckpointer": [[7, 2, 1, "", "__init__"]], "orbax.checkpoint.StandardCheckpointHandler": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "async_save"], [4, 2, 1, "", "close"], [4, 2, 1, "", "finalize"], [4, 2, 1, "", "metadata"], [4, 2, 1, "", "restore"], [4, 2, 1, "", "save"]], "orbax.checkpoint.StandardCheckpointer": [[7, 2, 1, "", "__init__"]], "orbax.checkpoint.abstract_checkpoint_manager": [[2, 1, 1, "", "AbstractCheckpointManager"]], "orbax.checkpoint.abstract_checkpoint_manager.AbstractCheckpointManager": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "__subclasshook__"], [2, 2, 1, "", "all_steps"], [2, 2, 1, "", "best_step"], [2, 2, 1, "", "check_for_errors"], [2, 2, 1, "", "close"], [2, 2, 1, "", "delete"], [2, 3, 1, "", "directory"], [2, 2, 1, "", "item_metadata"], [2, 2, 1, "", "latest_step"], [2, 2, 1, "", "metadata"], [2, 2, 1, "", "metrics"], [2, 2, 1, "", "reached_preemption"], [2, 2, 1, "", "reload"], [2, 2, 1, "", "restore"], [2, 2, 1, "", "save"], [2, 2, 1, "", "should_save"], [2, 2, 1, "", "wait_until_finished"]], "orbax.checkpoint.args": [[3, 4, 1, "", "ArrayRestore"], [3, 4, 1, "", "ArraySave"], [3, 1, 1, "id0", "CheckpointArgs"], [3, 4, 1, "", "Composite"], [3, 4, 1, "", "JaxRandomKeyRestore"], [3, 4, 1, "", "JaxRandomKeySave"], [3, 4, 1, "", "JsonRestore"], [3, 4, 1, "", "JsonSave"], [3, 4, 1, "", "NumpyRandomKeyRestore"], [3, 4, 1, "", "NumpyRandomKeySave"], [3, 4, 1, "", "ProtoRestore"], [3, 4, 1, "", "ProtoSave"], [3, 4, 1, "", "PyTreeRestore"], [3, 4, 1, "", "PyTreeSave"], [3, 4, 1, "", "StandardRestore"], [3, 4, 1, "", "StandardSave"], [3, 5, 1, "", "get_registered_args_cls"], [3, 5, 1, "", "get_registered_handler_cls"], [3, 5, 1, "", "has_registered_args"], [3, 5, 1, "", "register_with_handler"]], "orbax.checkpoint.args.CheckpointArgs": [[3, 2, 1, "id20", "__eq__"], [3, 4, 1, "id21", "__hash__"], [3, 2, 1, "id22", "__init__"]], "orbax.checkpoint.checkpoint_manager": [[5, 1, 1, "", "AsyncOptions"], [5, 1, 1, "", "CheckpointManager"], [5, 1, 1, "", "CheckpointManagerOptions"], [5, 1, 1, "", "MultiprocessingOptions"], [5, 5, 1, "", "is_async_checkpointer"]], "orbax.checkpoint.checkpoint_manager.AsyncOptions": [[5, 2, 1, "", "__eq__"], [5, 4, 1, "", "__hash__"], [5, 2, 1, "", "__init__"]], "orbax.checkpoint.checkpoint_manager.CheckpointManager": [[5, 2, 1, "", "__init__"], [5, 2, 1, "", "__subclasshook__"], [5, 2, 1, "", "all_steps"], [5, 2, 1, "", "best_step"], [5, 2, 1, "", "check_for_errors"], [5, 2, 1, "", "close"], [5, 2, 1, "", "delete"], [5, 3, 1, "", "directory"], [5, 2, 1, "", "is_saving_in_progress"], [5, 2, 1, "", "item_metadata"], [5, 2, 1, "", "latest_step"], [5, 2, 1, "", "metadata"], [5, 2, 1, "", "metrics"], [5, 2, 1, "", "reached_preemption"], [5, 2, 1, "", "reload"], [5, 2, 1, "", "restore"], [5, 2, 1, "", "save"], [5, 2, 1, "", "should_save"], [5, 2, 1, "", "wait_until_finished"]], "orbax.checkpoint.checkpoint_manager.CheckpointManagerOptions": [[5, 2, 1, "", "__eq__"], [5, 4, 1, "", "__hash__"], [5, 2, 1, "", "__init__"]], "orbax.checkpoint.checkpoint_manager.MultiprocessingOptions": [[5, 2, 1, "", "__eq__"], [5, 4, 1, "", "__hash__"], [5, 2, 1, "", "__init__"]], "orbax.checkpoint.checkpoint_utils": [[6, 5, 1, "", "checkpoints_iterator"], [6, 5, 1, "", "construct_restore_args"], [6, 5, 1, "", "unlock_existing_checkpoints"], [6, 5, 1, "", "wait_for_new_checkpoint"]], "orbax.checkpoint.metadata": [[9, 1, 1, "", "ArrayMetadata"], [9, 1, 1, "", "GSPMDShardingMetadata"], [9, 1, 1, "", "Metadata"], [9, 1, 1, "", "NamedShardingMetadata"], [9, 1, 1, "", "PositionalShardingMetadata"], [9, 1, 1, "", "ScalarMetadata"], [9, 1, 1, "", "ShardingMetadata"], [9, 1, 1, "", "ShardingTypes"], [9, 1, 1, "", "SingleDeviceShardingMetadata"], [9, 1, 1, "", "StringMetadata"], [9, 5, 1, "", "from_jax_sharding"], [9, 5, 1, "", "from_serialized_string"], [9, 5, 1, "", "get_sharding_or_none"]], "orbax.checkpoint.metadata.ArrayMetadata": [[9, 2, 1, "", "__eq__"], [9, 4, 1, "", "__hash__"], [9, 2, 1, "", "__init__"]], "orbax.checkpoint.metadata.GSPMDShardingMetadata": [[9, 2, 1, "", "__eq__"], [9, 4, 1, "", "__hash__"], [9, 2, 1, "", "__init__"]], "orbax.checkpoint.metadata.Metadata": [[9, 2, 1, "", "__eq__"], [9, 4, 1, "", "__hash__"], [9, 2, 1, "", "__init__"]], "orbax.checkpoint.metadata.NamedShardingMetadata": [[9, 2, 1, "", "__eq__"], [9, 4, 1, "", "__hash__"], [9, 2, 1, "", "__init__"], [9, 2, 1, "", "from_deserialized_dict"], [9, 2, 1, "", "from_jax_sharding"], [9, 2, 1, "", "to_jax_sharding"], [9, 2, 1, "", "to_serialized_string"]], "orbax.checkpoint.metadata.PositionalShardingMetadata": [[9, 2, 1, "", "__eq__"], [9, 4, 1, "", "__hash__"], [9, 2, 1, "", "__init__"]], "orbax.checkpoint.metadata.ScalarMetadata": [[9, 2, 1, "", "__eq__"], [9, 4, 1, "", "__hash__"], [9, 2, 1, "", "__init__"]], "orbax.checkpoint.metadata.ShardingMetadata": [[9, 2, 1, "", "__eq__"], [9, 4, 1, "", "__hash__"], [9, 2, 1, "", "__init__"], [9, 2, 1, "", "from_deserialized_dict"], [9, 2, 1, "", "from_jax_sharding"], [9, 2, 1, "", "to_jax_sharding"], [9, 2, 1, "", "to_serialized_string"]], "orbax.checkpoint.metadata.SingleDeviceShardingMetadata": [[9, 2, 1, "", "__eq__"], [9, 4, 1, "", "__hash__"], [9, 2, 1, "", "__init__"], [9, 2, 1, "", "from_deserialized_dict"], [9, 2, 1, "", "from_jax_sharding"], [9, 2, 1, "", "to_jax_sharding"], [9, 2, 1, "", "to_serialized_string"]], "orbax.checkpoint.metadata.StringMetadata": [[9, 2, 1, "", "__eq__"], [9, 4, 1, "", "__hash__"], [9, 2, 1, "", "__init__"]], "orbax.checkpoint.msgpack_utils": [[10, 5, 1, "", "msgpack_restore"], [10, 5, 1, "", "msgpack_serialize"]], "orbax.checkpoint.multihost": [[11, 1, 1, "", "BarrierSyncFn"], [11, 5, 1, "", "broadcast_one_to_all"], [11, 5, 1, "", "get_barrier_sync_fn"], [11, 5, 1, "", "sync_global_processes"], [11, 5, 1, "", "unique_barrier_key"]], "orbax.checkpoint.multihost.BarrierSyncFn": [[11, 2, 1, "", "__call__"], [11, 2, 1, "", "__init__"], [11, 2, 1, "", "__subclasshook__"]], "orbax.checkpoint.path": [[12, 0, 0, "-", "atomicity"], [13, 0, 0, "-", "deleter"], [14, 0, 0, "-", "step"]], "orbax.checkpoint.path.atomicity": [[12, 1, 1, "", "AtomicRenameTemporaryPath"], [12, 1, 1, "", "CommitFileTemporaryPath"], [12, 1, 1, "", "TemporaryPath"], [12, 5, 1, "", "get_default_temporary_path_class"], [12, 5, 1, "", "on_commit_callback"]], "orbax.checkpoint.path.atomicity.AtomicRenameTemporaryPath": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "__subclasshook__"], [12, 2, 1, "", "create"], [12, 2, 1, "", "finalize"], [12, 2, 1, "", "from_final"], [12, 2, 1, "", "get"], [12, 2, 1, "", "get_final"], [12, 2, 1, "", "match"]], "orbax.checkpoint.path.atomicity.CommitFileTemporaryPath": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "__subclasshook__"], [12, 2, 1, "", "create"], [12, 2, 1, "", "finalize"], [12, 2, 1, "", "from_final"], [12, 2, 1, "", "get"], [12, 2, 1, "", "get_final"], [12, 2, 1, "", "match"]], "orbax.checkpoint.path.atomicity.TemporaryPath": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "__subclasshook__"], [12, 2, 1, "", "create"], [12, 2, 1, "", "finalize"], [12, 2, 1, "", "from_final"], [12, 2, 1, "", "get"], [12, 2, 1, "", "get_final"], [12, 2, 1, "", "match"]], "orbax.checkpoint.path.deleter": [[13, 1, 1, "", "CheckpointDeleter"], [13, 1, 1, "", "StandardCheckpointDeleter"], [13, 1, 1, "", "ThreadedCheckpointDeleter"], [13, 5, 1, "", "create_checkpoint_deleter"]], "orbax.checkpoint.path.deleter.CheckpointDeleter": [[13, 2, 1, "", "__init__"], [13, 2, 1, "", "__subclasshook__"], [13, 2, 1, "", "close"], [13, 2, 1, "", "delete"], [13, 2, 1, "", "delete_steps"]], "orbax.checkpoint.path.deleter.StandardCheckpointDeleter": [[13, 2, 1, "", "__init__"], [13, 2, 1, "", "delete"]], "orbax.checkpoint.path.deleter.ThreadedCheckpointDeleter": [[13, 2, 1, "", "__init__"]], "orbax.checkpoint.path.step": [[14, 1, 1, "", "Metadata"], [14, 1, 1, "", "NameFormat"], [14, 5, 1, "", "any_checkpoint_step"], [14, 5, 1, "", "build_step_metadatas"], [14, 5, 1, "", "build_step_path"], [14, 5, 1, "", "checkpoint_steps"], [14, 5, 1, "", "checkpoint_steps_paths"], [14, 5, 1, "", "cleanup_tmp_directories"], [14, 5, 1, "", "composite_name_format"], [14, 5, 1, "", "find_step_path"], [14, 5, 1, "", "get_save_directory"], [14, 5, 1, "", "is_checkpoint_finalized"], [14, 5, 1, "", "is_gcs_path"], [14, 5, 1, "", "is_tmp_checkpoint"], [14, 5, 1, "", "latest_step_metadata"], [14, 5, 1, "", "standard_name_format"], [14, 5, 1, "", "step_from_checkpoint_name"], [14, 5, 1, "", "step_metadata_of_checkpoint_path"], [14, 5, 1, "", "step_prefix_with_underscore"], [14, 5, 1, "", "tmp_checkpoints"]], "orbax.checkpoint.path.step.Metadata": [[14, 2, 1, "", "__delattr__"], [14, 2, 1, "", "__eq__"], [14, 2, 1, "", "__hash__"], [14, 2, 1, "", "__init__"], [14, 2, 1, "", "__setattr__"], [14, 3, 1, "", "commit_timestamp"], [14, 3, 1, "", "commit_timestamp_nsecs"], [14, 3, 1, "", "init_timestamp_nsecs"], [14, 4, 1, "", "path"], [14, 4, 1, "", "step"]], "orbax.checkpoint.path.step.NameFormat": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "__subclasshook__"], [14, 2, 1, "", "build_name"], [14, 2, 1, "", "find_all"], [14, 2, 1, "", "find_step"]], "orbax.checkpoint.transform_utils": [[15, 1, 1, "", "Transform"], [15, 5, 1, "", "apply_transformations"], [15, 5, 1, "", "merge_trees"]], "orbax.checkpoint.transform_utils.Transform": [[15, 2, 1, "", "__eq__"], [15, 4, 1, "", "__hash__"], [15, 2, 1, "", "__init__"]], "orbax.checkpoint.tree": [[16, 5, 1, "", "deserialize_tree"], [16, 5, 1, "", "from_flat_dict"], [16, 5, 1, "", "from_flattened_with_keypath"], [16, 5, 1, "", "get_key_name"], [16, 5, 1, "", "get_param_names"], [16, 5, 1, "", "is_dict_key"], [16, 5, 1, "", "is_empty_node"], [16, 5, 1, "", "is_empty_or_leaf"], [16, 5, 1, "", "is_sequence_key"], [16, 5, 1, "", "serialize_tree"], [16, 5, 1, "", "to_flat_dict"], [16, 5, 1, "", "to_shape_dtype_struct"], [16, 5, 1, "", "tuple_path_from_keypath"]], "orbax.checkpoint.type_handlers": [[17, 1, 1, "id0", "ArrayHandler"], [17, 1, 1, "", "ArrayRestoreArgs"], [17, 1, 1, "", "NumpyHandler"], [17, 1, 1, "", "RestoreArgs"], [17, 1, 1, "", "SaveArgs"], [17, 1, 1, "", "ScalarHandler"], [17, 1, 1, "", "StringHandler"], [17, 1, 1, "", "TypeHandler"], [17, 1, 1, "", "TypeHandlerRegistry"], [17, 5, 1, "", "create_type_handler_registry"], [17, 5, 1, "", "get_cast_tspec_deserialize"], [17, 5, 1, "", "get_cast_tspec_serialize"], [17, 5, 1, "", "get_json_tspec_read"], [17, 5, 1, "", "get_json_tspec_write"], [17, 5, 1, "", "get_ts_context"], [17, 5, 1, "", "get_type_handler"], [17, 5, 1, "", "has_type_handler"], [17, 5, 1, "", "is_ocdbt_checkpoint"], [17, 5, 1, "", "merge_ocdbt_per_process_files"], [17, 5, 1, "", "register_standard_handlers_with_options"], [17, 5, 1, "", "register_type_handler"]], "orbax.checkpoint.type_handlers.ArrayHandler": [[17, 2, 1, "id1", "__init__"], [17, 2, 1, "id5", "deserialize"], [17, 2, 1, "id3", "metadata"], [17, 2, 1, "id4", "serialize"], [17, 2, 1, "id2", "typestr"]], "orbax.checkpoint.type_handlers.ArrayRestoreArgs": [[17, 2, 1, "", "__eq__"], [17, 4, 1, "", "__hash__"], [17, 2, 1, "", "__init__"], [17, 4, 1, "", "restore_type"]], "orbax.checkpoint.type_handlers.NumpyHandler": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "deserialize"], [17, 2, 1, "", "metadata"], [17, 2, 1, "", "serialize"], [17, 2, 1, "", "typestr"]], "orbax.checkpoint.type_handlers.RestoreArgs": [[17, 2, 1, "", "__eq__"], [17, 4, 1, "", "__hash__"], [17, 2, 1, "", "__init__"]], "orbax.checkpoint.type_handlers.SaveArgs": [[17, 2, 1, "", "__eq__"], [17, 4, 1, "", "__hash__"], [17, 2, 1, "", "__init__"]], "orbax.checkpoint.type_handlers.ScalarHandler": [[17, 2, 1, "", "deserialize"], [17, 2, 1, "", "metadata"], [17, 2, 1, "", "serialize"], [17, 2, 1, "", "typestr"]], "orbax.checkpoint.type_handlers.StringHandler": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "deserialize"], [17, 2, 1, "", "metadata"], [17, 2, 1, "", "serialize"], [17, 2, 1, "", "typestr"]], "orbax.checkpoint.type_handlers.TypeHandler": [[17, 2, 1, "", "deserialize"], [17, 2, 1, "", "finalize"], [17, 2, 1, "", "metadata"], [17, 2, 1, "", "serialize"], [17, 2, 1, "", "typestr"]], "orbax.checkpoint.utils": [[18, 5, 1, "", "any_checkpoint_step"], [18, 5, 1, "", "are_locked"], [18, 5, 1, "", "async_exists"], [18, 5, 1, "", "async_makedirs"], [18, 5, 1, "", "async_write_bytes"], [18, 5, 1, "", "checkpoint_steps"], [18, 5, 1, "", "checkpoint_steps_paths"], [18, 5, 1, "", "cleanup_tmp_directories"], [18, 5, 1, "", "fully_replicated_host_local_array_to_global_array"], [18, 5, 1, "", "get_save_directory"], [18, 5, 1, "", "is_checkpoint_finalized"], [18, 5, 1, "", "is_gcs_path"], [18, 5, 1, "", "is_locked"], [18, 5, 1, "", "is_scalar"], [18, 5, 1, "", "is_tmp_checkpoint"], [18, 5, 1, "", "leaf_is_placeholder"], [18, 5, 1, "", "leaf_placeholder"], [18, 5, 1, "", "lockdir"], [18, 5, 1, "", "name_from_leaf_placeholder"], [18, 5, 1, "", "record_saved_duration"], [18, 5, 1, "", "step_from_checkpoint_name"], [18, 5, 1, "", "tmp_checkpoints"]], "orbax.export": [[20, 0, 0, "-", "dtensor_utils"], [21, 0, 0, "-", "export_manager"], [22, 0, 0, "-", "export_manager_base"], [23, 0, 0, "-", "jax_module"], [24, 0, 0, "-", "serving_config"], [25, 0, 0, "-", "utils"]], "orbax.export.dtensor_utils": [[20, 5, 1, "", "dtensor_initialized"], [20, 5, 1, "", "get_current_dtensor_mesh"], [20, 5, 1, "", "initialize_dtensor"], [20, 5, 1, "", "jax_mesh_to_dtensor_mesh"], [20, 5, 1, "", "maybe_enable_dtensor_export_on"], [20, 5, 1, "", "shutdown_dtensor"]], "orbax.export.export_manager": [[21, 1, 1, "", "ExportManager"]], "orbax.export.export_manager.ExportManager": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "load"], [21, 2, 1, "", "save"], [21, 3, 1, "", "serving_signatures"], [21, 3, 1, "", "tf_module"]], "orbax.export.export_manager_base": [[22, 1, 1, "", "ExportManagerBase"]], "orbax.export.export_manager_base.ExportManagerBase": [[22, 2, 1, "", "load"], [22, 2, 1, "", "save"]], "orbax.export.jax_module": [[23, 1, 1, "", "JaxModule"]], "orbax.export.jax_module.JaxModule": [[23, 2, 1, "", "__init__"], [23, 3, 1, "", "apply_fn_map"], [23, 3, 1, "", "input_polymorphic_shape_map"], [23, 3, 1, "", "jax2tf_kwargs_map"], [23, 3, 1, "", "jax_methods"], [23, 3, 1, "", "methods"], [23, 3, 1, "", "model_params"], [23, 2, 1, "", "to_jax_exported_map"], [23, 2, 1, "", "update_variables"]], "orbax.export.serving_config": [[24, 1, 1, "", "ServingConfig"]], "orbax.export.serving_config.ServingConfig": [[24, 2, 1, "", "__eq__"], [24, 4, 1, "", "__hash__"], [24, 2, 1, "", "__init__"], [24, 2, 1, "", "bind"], [24, 2, 1, "", "get_infer_step"], [24, 2, 1, "", "get_input_signature"]], "orbax.export.utils": [[25, 1, 1, "", "CallableSignatures"], [25, 1, 1, "", "TensorSpecWithDefault"], [25, 5, 1, "", "make_auto_batching_function"], [25, 5, 1, "", "with_default_args"]], "orbax.export.utils.CallableSignatures": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "from_saved_model"], [25, 3, 1, "", "signatures"]], "orbax.export.utils.TensorSpecWithDefault": [[25, 2, 1, "", "__eq__"], [25, 4, 1, "", "__hash__"], [25, 2, 1, "", "__init__"]], "orbax.export.validate": [[26, 0, 0, "-", "validation_manager"], [27, 0, 0, "-", "validation_report"]], "orbax.export.validate.validation_manager": [[26, 1, 1, "", "ValidationManager"]], "orbax.export.validate.validation_manager.ValidationManager": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "check_input"], [26, 2, 1, "", "check_output"], [26, 2, 1, "", "validate"]], "orbax.export.validate.validation_report": [[27, 1, 1, "", "ValidationReport"], [27, 1, 1, "", "ValidationReportOption"]], "orbax.export.validate.validation_report.ValidationReport": [[27, 2, 1, "", "__init__"]], "orbax.export.validate.validation_report.ValidationReportOption": [[27, 2, 1, "", "__eq__"], [27, 4, 1, "", "__hash__"], [27, 2, 1, "", "__init__"], [27, 2, 1, "", "__post_init__"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"us": 0, "refactor": 0, "checkpointmanag": [0, 5, 37], "api": [0, 1, 19, 37, 38], "singl": [0, 38], "item": [0, 29], "checkpoint": [0, 1, 6, 7, 8, 13, 18, 28, 29, 30, 31, 32, 33, 34, 35, 37, 41], "befor": [0, 32, 34], "after": [0, 32, 34], "multipl": [0, 35], "orbax": [1, 19, 33, 35, 38, 39], "refer": [1, 19], "abstractcheckpointmanag": 2, "checkpointarg": 3, "arrai": [3, 30], "standard": [3, 35], "pytre": [3, 15, 29, 30, 41], "gener": [3, 18, 25, 31], "composit": 3, "json": 3, "proto": 3, "jaxrandomkei": 3, "numpyrandomkei": 3, "util": [3, 5, 6, 9, 10, 11, 16, 18, 20, 25], "checkpointhandl": [4, 30, 32, 37], "asynccheckpointhandl": [4, 32], "standardcheckpointhandl": 4, "pytreecheckpointhandl": [4, 17], "compositecheckpointhandl": [4, 37], "jsoncheckpointhandl": 4, "arraycheckpointhandl": 4, "protocheckpointhandl": 4, "jaxrandomkeycheckpointhandl": 4, "numpyrandomkeycheckpointhandl": 4, "checkpointmanageropt": 5, "asyncopt": 5, "multiprocessingopt": 5, "function": [5, 12, 14, 17, 25], "abstractcheckpoint": 7, "asynccheckpoint": 7, "standardcheckpoint": 7, "pytreecheckpoint": 7, "log": 8, "abstractlogg": 8, "compositelogg": 8, "standardlogg": 8, "cloudlogg": 8, "cloudloggeropt": 8, "stepstatist": 8, "metadata": [9, 14, 32], "tree": [9, 16], "shard": [9, 18, 30, 39], "msgpack": 10, "multi": [11, 20, 41], "host": [11, 20], "atom": [12, 18], "temporarypath": 12, "atomicrenametemporarypath": 12, "commitfiletemporarypath": 12, "helper": [12, 14], "delet": 13, "step": [14, 18], "entiti": 14, "nameformat": 14, "factori": 14, "variou": 14, "experiment": 14, "implement": 14, "class": 14, "transform": [15, 41], "typehandl": [17, 32], "argument": 17, "numpyhandl": 17, "scalarhandl": 17, "arrayhandl": 17, "singleslicearrayhandl": 17, "stringhandl": 17, "tensorstor": [17, 29, 34], "registri": 17, "async": [18, 32], "wrapper": 18, "aggreg": 18, "file": [18, 34], "directori": [18, 29], "misc": 18, "export": [19, 20, 31, 33, 38, 39], "dtensor": [20, 39], "devic": 20, "exportmanag": 21, "exportmanagerbas": 22, "jaxmodul": [23, 38], "servingconfig": 24, "tensorspecwithdefault": 25, "callablesignatur": 25, "validationmanag": 26, "validationreport": 27, "validationreportopt": 27, "asynchron": 28, "what": 28, "i": 28, "thi": 28, "why": 28, "should": 28, "care": 28, "usag": [28, 38], "addit": [28, 34], "detail": 28, "format": [29, 34], "guid": 29, "root": 29, "sequenti": 29, "work": [29, 39], "support": [30, 33], "basic": 30, "custom": [30, 32, 34], "restor": [30, 34, 35, 41], "properti": 30, "dtype": 30, "pad": 30, "truncat": 30, "shape": 30, "chang": 30, "advanc": 30, "option": 30, "save": [30, 34, 35], "contributor": 31, "core": 31, "commun": 31, "guidelin": 31, "logic": 32, "setup": [32, 38, 39], "serial": 32, "deseri": 32, "v": 32, "non": 32, "instal": 33, "optim": 34, "toward": 34, "an": 34, "improv": 34, "perform": 34, "sec": 34, "old": 34, "new": 34, "enabl": 34, "note": 34, "chunk": 34, "size": 34, "data": 34, "object": 35, "manag": 35, "A": 35, "recip": 35, "announc": 36, "2024": 36, "04": 36, "02": 36, "01": 36, "18": 36, "12": 36, "overview": [37, 38, 41], "layer": 37, "simpl": 38, "exampl": [38, 41], "limit": 38, "onli": 38, "take": 38, "arg": 38, "input": 38, "valid": 38, "togeth": 39, "jax": 39, "model": 39, "preemption": 40, "toler": 40, "apply_transform": 41, "fallback": 41, "renam": 41, "kei": 41, "updat": 41, "valu": 41, "restructur": 41, "real": 41, "world": 41, "tip": 41, "trick": 41, "regex": 41, "group": 41, "name": 41}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Using the Refactored CheckpointManager API": [[0, "using-the-refactored-checkpointmanager-api"]], "Single-Item Checkpointing": [[0, "single-item-checkpointing"]], "Before": [[0, "before"], [0, "id1"], [32, "before"]], "After": [[0, "after"], [0, "id2"], [32, "after"]], "Multiple-Item Checkpointing": [[0, "multiple-item-checkpointing"]], "orbax.checkpoint API Reference": [[1, "orbax-checkpoint-api-reference"]], "AbstractCheckpointManager": [[2, "module-orbax.checkpoint.abstract_checkpoint_manager"], [2, "id1"]], "CheckpointArgs": [[3, "module-orbax.checkpoint.args"], [3, "id1"]], ")": [[3, "id10"], [3, "id19"]], "Array": [[3, "array"]], "Standard PyTree": [[3, "standard-pytree"]], "Generic PyTree": [[3, "generic-pytree"]], "Composite": [[3, "composite"]], "JSON": [[3, "json"]], "Proto": [[3, "proto"]], "JaxRandomKey": [[3, "jaxrandomkey"]], "NumpyRandomKey": [[3, "numpyrandomkey"]], "Utilities": [[3, "utilities"]], "CheckpointHandlers": [[4, "module-orbax.checkpoint"]], "CheckpointHandler": [[4, "checkpointhandler"], [32, "checkpointhandler"]], "AsyncCheckpointHandler": [[4, "asynccheckpointhandler"], [32, "asynccheckpointhandler"]], "StandardCheckpointHandler": [[4, "standardcheckpointhandler"]], "PyTreeCheckpointHandler": [[4, "pytreecheckpointhandler"]], "CompositeCheckpointHandler": [[4, "compositecheckpointhandler"], [37, "compositecheckpointhandler"]], "JsonCheckpointHandler": [[4, "jsoncheckpointhandler"]], "ArrayCheckpointHandler": [[4, "arraycheckpointhandler"]], "ProtoCheckpointHandler": [[4, "protocheckpointhandler"]], "JaxRandomKeyCheckpointHandler": [[4, "jaxrandomkeycheckpointhandler"]], "NumpyRandomKeyCheckpointHandler": [[4, "numpyrandomkeycheckpointhandler"]], "CheckpointManager": [[5, "module-orbax.checkpoint.checkpoint_manager"], [5, "id1"]], "CheckpointManagerOptions": [[5, "checkpointmanageroptions"]], "AsyncOptions": [[5, "asyncoptions"]], "MultiprocessingOptions": [[5, "multiprocessingoptions"]], "Utility functions": [[5, "utility-functions"], [25, "utility-functions"]], "Checkpointing Utilities": [[6, "module-orbax.checkpoint.checkpoint_utils"]], "Checkpointers": [[7, "module-orbax.checkpoint"]], "AbstractCheckpointer": [[7, "abstractcheckpointer"]], "Checkpointer": [[7, "checkpointer"]], "AsyncCheckpointer": [[7, "asynccheckpointer"]], "StandardCheckpointer": [[7, "standardcheckpointer"]], "PyTreeCheckpointer": [[7, "pytreecheckpointer"]], "Checkpoint logging": [[8, "module-orbax.checkpoint.logging"]], "AbstractLogger": [[8, "abstractlogger"]], "CompositeLogger": [[8, "compositelogger"]], "StandardLogger": [[8, "standardlogger"]], "CloudLogger": [[8, "cloudlogger"]], "CloudLoggerOptions": [[8, "cloudloggeroptions"]], "StepStatistics": [[8, "stepstatistics"]], "Metadata Utilities": [[9, "module-orbax.checkpoint.metadata"]], "Tree Metadata": [[9, "tree-metadata"]], "Sharding Metadata": [[9, "sharding-metadata"]], "Msgpack utils": [[10, "module-orbax.checkpoint.msgpack_utils"]], "Multi-host Utilities": [[11, "module-orbax.checkpoint.multihost"]], "Atomicity": [[12, "module-orbax.checkpoint.path.atomicity"], [18, "atomicity"]], "TemporaryPath": [[12, "temporarypath"]], "AtomicRenameTemporaryPath": [[12, "atomicrenametemporarypath"]], "CommitFileTemporaryPath": [[12, "commitfiletemporarypath"]], "Helper functions": [[12, "helper-functions"], [14, "helper-functions"]], "Checkpoint Deleter": [[13, "module-orbax.checkpoint.path.deleter"]], "Step entities": [[14, "module-orbax.checkpoint.path.step"]], "Metadata": [[14, "metadata"], [32, "metadata"]], "NameFormat": [[14, "nameformat"]], "Factories for various NameFormats": [[14, "factories-for-various-nameformats"]], "Helper functions (experimental)": [[14, "helper-functions-experimental"]], "Helper functions to implement NameFormat classes": [[14, "helper-functions-to-implement-nameformat-classes"]], "PyTree Transformations": [[15, "module-orbax.checkpoint.transform_utils"]], "Tree Utilities": [[16, "module-orbax.checkpoint.tree"]], "TypeHandlers": [[17, "module-orbax.checkpoint.type_handlers"]], "Arguments for PyTreeCheckpointHandler": [[17, "arguments-for-pytreecheckpointhandler"]], "TypeHandler": [[17, "typehandler"], [32, "typehandler"]], "NumpyHandler": [[17, "numpyhandler"]], "ScalarHandler": [[17, "scalarhandler"]], "ArrayHandler": [[17, "arrayhandler"]], "SingleSliceArrayHandler": [[17, "singleslicearrayhandler"]], "StringHandler": [[17, "stringhandler"]], "Tensorstore functions": [[17, "tensorstore-functions"]], "TypeHandler registry": [[17, "typehandler-registry"]], "General Utilities": [[18, "module-orbax.checkpoint.utils"], [25, "module-orbax.export.utils"]], "Async wrappers": [[18, "async-wrappers"]], "Aggregate file": [[18, "aggregate-file"]], "Directories": [[18, "directories"]], "Checkpoint steps": [[18, "checkpoint-steps"]], "Sharding": [[18, "sharding"]], "Misc.": [[18, "misc"]], "orbax.export API Reference": [[19, "orbax-export-api-reference"]], "DTensor utilities for multi-device/host export": [[20, "dtensor-utilities-for-multi-device-host-export"]], "ExportManager": [[21, "module-orbax.export.export_manager"], [21, "id1"]], "ExportManagerBase": [[22, "module-orbax.export.export_manager_base"], [22, "id1"]], "JaxModule": [[23, "module-orbax.export.jax_module"], [23, "id1"]], "ServingConfig": [[24, "module-orbax.export.serving_config"], [24, "id1"]], "TensorSpecWithDefault": [[25, "tensorspecwithdefault"]], "CallableSignatures": [[25, "callablesignatures"]], "ValidationManager": [[26, "module-orbax.export.validate.validation_manager"], [26, "id1"]], "ValidationReport": [[27, "validationreport"]], "ValidationReportOption": [[27, "validationreportoption"]], "Asynchronous Checkpointing": [[28, "asynchronous-checkpointing"]], "What is this?": [[28, "what-is-this"]], "Why should I care?": [[28, "why-should-i-care"]], "Usage": [[28, "usage"]], "Additional Details": [[28, "additional-details"]], "Checkpoint Format Guide": [[29, "checkpoint-format-guide"]], "Root Directory": [[29, "root-directory"]], "Sequential Checkpoint": [[29, "sequential-checkpoint"]], "Checkpoint Items": [[29, "checkpoint-items"]], "PyTree Checkpoints": [[29, "pytree-checkpoints"]], "Working with TensorStore": [[29, "working-with-tensorstore"]], "Checkpointing PyTrees of Arrays": [[30, "checkpointing-pytrees-of-arrays"]], "CheckpointHandler Support": [[30, "checkpointhandler-support"]], "Basic Checkpointing": [[30, "basic-checkpointing"]], "Customizing Restored Properties": [[30, "customizing-restored-properties"]], "Array dtype": [[30, "array-dtype"]], "Pad / truncate shape": [[30, "pad-truncate-shape"]], "Change sharding": [[30, "change-sharding"]], "Advanced Options": [[30, "advanced-options"]], "Saving": [[30, "saving"]], "Restoring": [[30, "restoring"]], "Contributors": [[31, "contributors"]], "Core Contributors": [[31, "core-contributors"]], "Checkpointing": [[31, "checkpointing"], [33, "checkpointing"]], "Exporting": [[31, "exporting"], [33, "exporting"], [38, "exporting"]], "General": [[31, "general"]], "Community Guidelines": [[31, "community-guidelines"]], "Customizing Checkpointing Logic": [[32, "customizing-checkpointing-logic"]], "Setup": [[32, "setup"], [38, "setup"], [39, "setup"]], "Custom serialization / deserialization": [[32, "custom-serialization-deserialization"]], "Async vs Non-Async": [[32, "async-vs-non-async"]], "Orbax": [[33, "orbax"]], "Installation": [[33, "installation"]], "Support": [[33, "support"]], "Optimized Checkpointing with Tensorstore": [[34, "optimized-checkpointing-with-tensorstore"]], "Towards an Improved Checkpoint Format": [[34, "towards-an-improved-checkpoint-format"]], "Save Performance (sec)": [[34, "save-performance-sec"]], "Restore Performance (sec)": [[34, "restore-performance-sec"]], "Checkpoint Format": [[34, "checkpoint-format"]], "Old Format": [[34, "old-format"]], "New Format": [[34, "new-format"]], "Enabling the new format": [[34, "enabling-the-new-format"]], "Additional Notes": [[34, "additional-notes"]], "Custom Chunk Sizes": [[34, "custom-chunk-sizes"]], "Customizing Data File Size": [[34, "customizing-data-file-size"]], "BEFORE": [[34, "before"]], "AFTER": [[34, "after"]], "Checkpointing with Orbax": [[35, "checkpointing-with-orbax"]], "Saving and Restoring": [[35, "saving-and-restoring"]], "Multiple Objects": [[35, "multiple-objects"]], "Managing Checkpoints": [[35, "managing-checkpoints"]], "A Standard Recipe": [[35, "a-standard-recipe"]], "Announcements": [[36, "announcements"]], "2024-04-02": [[36, "id1"]], "2024-02-01": [[36, "id2"]], "2024-01-18": [[36, "id3"]], "2024-01-12": [[36, "id4"]], "API Overview": [[37, "api-overview"], [38, "api-overview"], [38, "id1"]], "CheckpointHandler Layer": [[37, "checkpointhandler-layer"]], "Checkpointer Layer": [[37, "checkpointer-layer"]], "CheckpointManager Layer": [[37, "checkpointmanager-layer"]], "Exporting with Orbax": [[38, "exporting-with-orbax"]], "Simple Example Usage": [[38, "simple-example-usage"], [38, "id2"]], "Limitation": [[38, "limitation"], [38, "id3"]], "\u201cJaxModule only take single arg as the input\u201d.": [[38, "jaxmodule-only-take-single-arg-as-the-input"]], "Validating": [[38, "validating"]], "Examples": [[38, "examples"], [41, "examples"]], "Orbax export work together with DTensor": [[39, "orbax-export-work-together-with-dtensor"]], "Export sharded JAX model with DTensor": [[39, "export-sharded-jax-model-with-dtensor"]], "Preemption Tolerance": [[40, "preemption-tolerance"]], "Transformations": [[41, "transformations"]], "Overview": [[41, "overview"]], "apply_transformations": [[41, "apply-transformations"]], "Transform": [[41, "transform"]], "Fallbacks": [[41, "fallbacks"]], "Renaming keys": [[41, "renaming-keys"]], "Updating the value": [[41, "updating-the-value"]], "Restructuring PyTrees": [[41, "restructuring-pytrees"]], "Multi-value transformations": [[41, "multi-value-transformations"]], "Real world example": [[41, "real-world-example"]], "Restoring a Checkpoint": [[41, "restoring-a-checkpoint"]], "Tips and Tricks": [[41, "tips-and-tricks"]], "Regex group names": [[41, "regex-group-names"]]}, "indexentries": {"abstractcheckpointmanager (class in orbax.checkpoint.abstract_checkpoint_manager)": [[2, "orbax.checkpoint.abstract_checkpoint_manager.AbstractCheckpointManager"]], "__init__() (orbax.checkpoint.abstract_checkpoint_manager.abstractcheckpointmanager method)": [[2, "orbax.checkpoint.abstract_checkpoint_manager.AbstractCheckpointManager.__init__"]], "__subclasshook__() (orbax.checkpoint.abstract_checkpoint_manager.abstractcheckpointmanager method)": [[2, "orbax.checkpoint.abstract_checkpoint_manager.AbstractCheckpointManager.__subclasshook__"]], "all_steps() (orbax.checkpoint.abstract_checkpoint_manager.abstractcheckpointmanager method)": [[2, "orbax.checkpoint.abstract_checkpoint_manager.AbstractCheckpointManager.all_steps"]], "best_step() (orbax.checkpoint.abstract_checkpoint_manager.abstractcheckpointmanager method)": [[2, "orbax.checkpoint.abstract_checkpoint_manager.AbstractCheckpointManager.best_step"]], "check_for_errors() (orbax.checkpoint.abstract_checkpoint_manager.abstractcheckpointmanager method)": [[2, "orbax.checkpoint.abstract_checkpoint_manager.AbstractCheckpointManager.check_for_errors"]], "close() (orbax.checkpoint.abstract_checkpoint_manager.abstractcheckpointmanager method)": [[2, "orbax.checkpoint.abstract_checkpoint_manager.AbstractCheckpointManager.close"]], "delete() (orbax.checkpoint.abstract_checkpoint_manager.abstractcheckpointmanager method)": [[2, "orbax.checkpoint.abstract_checkpoint_manager.AbstractCheckpointManager.delete"]], "directory (orbax.checkpoint.abstract_checkpoint_manager.abstractcheckpointmanager property)": [[2, "orbax.checkpoint.abstract_checkpoint_manager.AbstractCheckpointManager.directory"]], "item_metadata() (orbax.checkpoint.abstract_checkpoint_manager.abstractcheckpointmanager method)": [[2, "orbax.checkpoint.abstract_checkpoint_manager.AbstractCheckpointManager.item_metadata"]], "latest_step() (orbax.checkpoint.abstract_checkpoint_manager.abstractcheckpointmanager method)": [[2, "orbax.checkpoint.abstract_checkpoint_manager.AbstractCheckpointManager.latest_step"]], "metadata() (orbax.checkpoint.abstract_checkpoint_manager.abstractcheckpointmanager method)": [[2, "orbax.checkpoint.abstract_checkpoint_manager.AbstractCheckpointManager.metadata"]], "metrics() (orbax.checkpoint.abstract_checkpoint_manager.abstractcheckpointmanager method)": [[2, "orbax.checkpoint.abstract_checkpoint_manager.AbstractCheckpointManager.metrics"]], "module": [[2, "module-orbax.checkpoint.abstract_checkpoint_manager"], [3, "module-orbax.checkpoint.args"], [4, "module-orbax.checkpoint"], [5, "module-orbax.checkpoint.checkpoint_manager"], [6, "module-orbax.checkpoint.checkpoint_utils"], [7, "module-orbax.checkpoint"], [8, "module-orbax.checkpoint.logging"], [9, "module-orbax.checkpoint.metadata"], [10, "module-orbax.checkpoint.msgpack_utils"], [11, "module-orbax.checkpoint.multihost"], [12, "module-orbax.checkpoint.path.atomicity"], [13, "module-orbax.checkpoint.path.deleter"], [14, "module-orbax.checkpoint.path.step"], [15, "module-orbax.checkpoint.transform_utils"], [16, "module-orbax.checkpoint.tree"], [17, "module-orbax.checkpoint.type_handlers"], [18, "module-orbax.checkpoint.utils"], [20, "module-orbax.export.dtensor_utils"], [21, "module-orbax.export.export_manager"], [22, "module-orbax.export.export_manager_base"], [23, "module-orbax.export.jax_module"], [24, "module-orbax.export.serving_config"], [25, "module-orbax.export.utils"], [26, "module-orbax.export.validate.validation_manager"], [27, "module-orbax.export.validate.validation_report"]], "orbax.checkpoint.abstract_checkpoint_manager": [[2, "module-orbax.checkpoint.abstract_checkpoint_manager"]], "reached_preemption() (orbax.checkpoint.abstract_checkpoint_manager.abstractcheckpointmanager method)": [[2, "orbax.checkpoint.abstract_checkpoint_manager.AbstractCheckpointManager.reached_preemption"]], "reload() (orbax.checkpoint.abstract_checkpoint_manager.abstractcheckpointmanager method)": [[2, "orbax.checkpoint.abstract_checkpoint_manager.AbstractCheckpointManager.reload"]], "restore() (orbax.checkpoint.abstract_checkpoint_manager.abstractcheckpointmanager method)": [[2, "orbax.checkpoint.abstract_checkpoint_manager.AbstractCheckpointManager.restore"]], "save() (orbax.checkpoint.abstract_checkpoint_manager.abstractcheckpointmanager method)": [[2, "orbax.checkpoint.abstract_checkpoint_manager.AbstractCheckpointManager.save"]], "should_save() (orbax.checkpoint.abstract_checkpoint_manager.abstractcheckpointmanager method)": [[2, "orbax.checkpoint.abstract_checkpoint_manager.AbstractCheckpointManager.should_save"]], "wait_until_finished() (orbax.checkpoint.abstract_checkpoint_manager.abstractcheckpointmanager method)": [[2, "orbax.checkpoint.abstract_checkpoint_manager.AbstractCheckpointManager.wait_until_finished"]], "arrayrestore (in module orbax.checkpoint.args)": [[3, "orbax.checkpoint.args.ArrayRestore"]], "arraysave (in module orbax.checkpoint.args)": [[3, "orbax.checkpoint.args.ArraySave"]], "checkpointargs (class in orbax.checkpoint.args)": [[3, "id0"], [3, "orbax.checkpoint.args.CheckpointArgs"]], "composite (in module orbax.checkpoint.args)": [[3, "orbax.checkpoint.args.Composite"]], "jaxrandomkeyrestore (in module orbax.checkpoint.args)": [[3, "orbax.checkpoint.args.JaxRandomKeyRestore"]], "jaxrandomkeysave (in module orbax.checkpoint.args)": [[3, "orbax.checkpoint.args.JaxRandomKeySave"]], "jsonrestore (in module orbax.checkpoint.args)": [[3, "orbax.checkpoint.args.JsonRestore"]], "jsonsave (in module orbax.checkpoint.args)": [[3, "orbax.checkpoint.args.JsonSave"]], "numpyrandomkeyrestore (in module orbax.checkpoint.args)": [[3, "orbax.checkpoint.args.NumpyRandomKeyRestore"]], "numpyrandomkeysave (in module orbax.checkpoint.args)": [[3, "orbax.checkpoint.args.NumpyRandomKeySave"]], "protorestore (in module orbax.checkpoint.args)": [[3, "orbax.checkpoint.args.ProtoRestore"]], "protosave (in module orbax.checkpoint.args)": [[3, "orbax.checkpoint.args.ProtoSave"]], "pytreerestore (in module orbax.checkpoint.args)": [[3, "orbax.checkpoint.args.PyTreeRestore"]], "pytreesave (in module orbax.checkpoint.args)": [[3, "orbax.checkpoint.args.PyTreeSave"]], "standardrestore (in module orbax.checkpoint.args)": [[3, "orbax.checkpoint.args.StandardRestore"]], "standardsave (in module orbax.checkpoint.args)": [[3, "orbax.checkpoint.args.StandardSave"]], "__eq__() (orbax.checkpoint.args.checkpointargs method)": [[3, "id20"], [3, "orbax.checkpoint.args.CheckpointArgs.__eq__"]], "__hash__ (orbax.checkpoint.args.checkpointargs attribute)": [[3, "id21"], [3, "orbax.checkpoint.args.CheckpointArgs.__hash__"]], "__init__() (orbax.checkpoint.args.checkpointargs method)": [[3, "id22"], [3, "orbax.checkpoint.args.CheckpointArgs.__init__"]], "get_registered_args_cls() (in module orbax.checkpoint.args)": [[3, "orbax.checkpoint.args.get_registered_args_cls"]], "get_registered_handler_cls() (in module orbax.checkpoint.args)": [[3, "orbax.checkpoint.args.get_registered_handler_cls"]], "has_registered_args() (in module orbax.checkpoint.args)": [[3, "orbax.checkpoint.args.has_registered_args"]], "orbax.checkpoint.args": [[3, "module-orbax.checkpoint.args"]], "register_with_handler() (in module orbax.checkpoint.args)": [[3, "orbax.checkpoint.args.register_with_handler"]], "arraycheckpointhandler (class in orbax.checkpoint)": [[4, "orbax.checkpoint.ArrayCheckpointHandler"]], "asynccheckpointhandler (class in orbax.checkpoint)": [[4, "orbax.checkpoint.AsyncCheckpointHandler"]], "checkpointhandler (class in orbax.checkpoint)": [[4, "orbax.checkpoint.CheckpointHandler"]], "compositecheckpointhandler (class in orbax.checkpoint)": [[4, "orbax.checkpoint.CompositeCheckpointHandler"]], "jaxrandomkeycheckpointhandler (class in orbax.checkpoint)": [[4, "orbax.checkpoint.JaxRandomKeyCheckpointHandler"]], "jsoncheckpointhandler (class in orbax.checkpoint)": [[4, "orbax.checkpoint.JsonCheckpointHandler"]], "numpyrandomkeycheckpointhandler (class in orbax.checkpoint)": [[4, "orbax.checkpoint.NumpyRandomKeyCheckpointHandler"]], "protocheckpointhandler (class in orbax.checkpoint)": [[4, "orbax.checkpoint.ProtoCheckpointHandler"]], "pytreecheckpointhandler (class in orbax.checkpoint)": [[4, "orbax.checkpoint.PyTreeCheckpointHandler"]], "standardcheckpointhandler (class in orbax.checkpoint)": [[4, "orbax.checkpoint.StandardCheckpointHandler"]], "__init__() (orbax.checkpoint.arraycheckpointhandler method)": [[4, "orbax.checkpoint.ArrayCheckpointHandler.__init__"]], "__init__() (orbax.checkpoint.compositecheckpointhandler method)": [[4, "orbax.checkpoint.CompositeCheckpointHandler.__init__"]], "__init__() (orbax.checkpoint.jsoncheckpointhandler method)": [[4, "orbax.checkpoint.JsonCheckpointHandler.__init__"]], "__init__() (orbax.checkpoint.protocheckpointhandler method)": [[4, "orbax.checkpoint.ProtoCheckpointHandler.__init__"]], "__init__() (orbax.checkpoint.pytreecheckpointhandler method)": [[4, "orbax.checkpoint.PyTreeCheckpointHandler.__init__"]], "__init__() (orbax.checkpoint.standardcheckpointhandler method)": [[4, "orbax.checkpoint.StandardCheckpointHandler.__init__"]], "async_save() (orbax.checkpoint.arraycheckpointhandler method)": [[4, "orbax.checkpoint.ArrayCheckpointHandler.async_save"]], "async_save() (orbax.checkpoint.asynccheckpointhandler method)": [[4, "orbax.checkpoint.AsyncCheckpointHandler.async_save"]], "async_save() (orbax.checkpoint.compositecheckpointhandler method)": [[4, "orbax.checkpoint.CompositeCheckpointHandler.async_save"]], "async_save() (orbax.checkpoint.jaxrandomkeycheckpointhandler method)": [[4, "orbax.checkpoint.JaxRandomKeyCheckpointHandler.async_save"]], "async_save() (orbax.checkpoint.jsoncheckpointhandler method)": [[4, "orbax.checkpoint.JsonCheckpointHandler.async_save"]], "async_save() (orbax.checkpoint.numpyrandomkeycheckpointhandler method)": [[4, "orbax.checkpoint.NumpyRandomKeyCheckpointHandler.async_save"]], "async_save() (orbax.checkpoint.protocheckpointhandler method)": [[4, "orbax.checkpoint.ProtoCheckpointHandler.async_save"]], "async_save() (orbax.checkpoint.pytreecheckpointhandler method)": [[4, "orbax.checkpoint.PyTreeCheckpointHandler.async_save"]], "async_save() (orbax.checkpoint.standardcheckpointhandler method)": [[4, "orbax.checkpoint.StandardCheckpointHandler.async_save"]], "close() (orbax.checkpoint.arraycheckpointhandler method)": [[4, "orbax.checkpoint.ArrayCheckpointHandler.close"]], "close() (orbax.checkpoint.checkpointhandler method)": [[4, "orbax.checkpoint.CheckpointHandler.close"]], "close() (orbax.checkpoint.compositecheckpointhandler method)": [[4, "orbax.checkpoint.CompositeCheckpointHandler.close"]], "close() (orbax.checkpoint.jsoncheckpointhandler method)": [[4, "orbax.checkpoint.JsonCheckpointHandler.close"]], "close() (orbax.checkpoint.protocheckpointhandler method)": [[4, "orbax.checkpoint.ProtoCheckpointHandler.close"]], "close() (orbax.checkpoint.pytreecheckpointhandler method)": [[4, "orbax.checkpoint.PyTreeCheckpointHandler.close"]], "close() (orbax.checkpoint.standardcheckpointhandler method)": [[4, "orbax.checkpoint.StandardCheckpointHandler.close"]], "finalize() (orbax.checkpoint.arraycheckpointhandler method)": [[4, "orbax.checkpoint.ArrayCheckpointHandler.finalize"]], "finalize() (orbax.checkpoint.checkpointhandler method)": [[4, "orbax.checkpoint.CheckpointHandler.finalize"]], "finalize() (orbax.checkpoint.compositecheckpointhandler method)": [[4, "orbax.checkpoint.CompositeCheckpointHandler.finalize"]], "finalize() (orbax.checkpoint.pytreecheckpointhandler method)": [[4, "orbax.checkpoint.PyTreeCheckpointHandler.finalize"]], "finalize() (orbax.checkpoint.standardcheckpointhandler method)": [[4, "orbax.checkpoint.StandardCheckpointHandler.finalize"]], "metadata() (orbax.checkpoint.checkpointhandler method)": [[4, "orbax.checkpoint.CheckpointHandler.metadata"]], "metadata() (orbax.checkpoint.compositecheckpointhandler method)": [[4, "orbax.checkpoint.CompositeCheckpointHandler.metadata"]], "metadata() (orbax.checkpoint.pytreecheckpointhandler method)": [[4, "orbax.checkpoint.PyTreeCheckpointHandler.metadata"]], "metadata() (orbax.checkpoint.standardcheckpointhandler method)": [[4, "orbax.checkpoint.StandardCheckpointHandler.metadata"]], "orbax.checkpoint": [[4, "module-orbax.checkpoint"], [7, "module-orbax.checkpoint"]], "restore() (orbax.checkpoint.arraycheckpointhandler method)": [[4, "orbax.checkpoint.ArrayCheckpointHandler.restore"]], "restore() (orbax.checkpoint.checkpointhandler method)": [[4, "orbax.checkpoint.CheckpointHandler.restore"]], "restore() (orbax.checkpoint.compositecheckpointhandler method)": [[4, "orbax.checkpoint.CompositeCheckpointHandler.restore"]], "restore() (orbax.checkpoint.jaxrandomkeycheckpointhandler method)": [[4, "orbax.checkpoint.JaxRandomKeyCheckpointHandler.restore"]], "restore() (orbax.checkpoint.jsoncheckpointhandler method)": [[4, "orbax.checkpoint.JsonCheckpointHandler.restore"]], "restore() (orbax.checkpoint.numpyrandomkeycheckpointhandler method)": [[4, "orbax.checkpoint.NumpyRandomKeyCheckpointHandler.restore"]], "restore() (orbax.checkpoint.protocheckpointhandler method)": [[4, "orbax.checkpoint.ProtoCheckpointHandler.restore"]], "restore() (orbax.checkpoint.pytreecheckpointhandler method)": [[4, "orbax.checkpoint.PyTreeCheckpointHandler.restore"]], "restore() (orbax.checkpoint.standardcheckpointhandler method)": [[4, "orbax.checkpoint.StandardCheckpointHandler.restore"]], "save() (orbax.checkpoint.arraycheckpointhandler method)": [[4, "orbax.checkpoint.ArrayCheckpointHandler.save"]], "save() (orbax.checkpoint.checkpointhandler method)": [[4, "orbax.checkpoint.CheckpointHandler.save"]], "save() (orbax.checkpoint.compositecheckpointhandler method)": [[4, "orbax.checkpoint.CompositeCheckpointHandler.save"]], "save() (orbax.checkpoint.jaxrandomkeycheckpointhandler method)": [[4, "orbax.checkpoint.JaxRandomKeyCheckpointHandler.save"]], "save() (orbax.checkpoint.jsoncheckpointhandler method)": [[4, "orbax.checkpoint.JsonCheckpointHandler.save"]], "save() (orbax.checkpoint.numpyrandomkeycheckpointhandler method)": [[4, "orbax.checkpoint.NumpyRandomKeyCheckpointHandler.save"]], "save() (orbax.checkpoint.protocheckpointhandler method)": [[4, "orbax.checkpoint.ProtoCheckpointHandler.save"]], "save() (orbax.checkpoint.pytreecheckpointhandler method)": [[4, "orbax.checkpoint.PyTreeCheckpointHandler.save"]], "save() (orbax.checkpoint.standardcheckpointhandler method)": [[4, "orbax.checkpoint.StandardCheckpointHandler.save"]], "asyncoptions (class in orbax.checkpoint.checkpoint_manager)": [[5, "orbax.checkpoint.checkpoint_manager.AsyncOptions"]], "checkpointmanager (class in orbax.checkpoint.checkpoint_manager)": [[5, "orbax.checkpoint.checkpoint_manager.CheckpointManager"]], "checkpointmanageroptions (class in orbax.checkpoint.checkpoint_manager)": [[5, "orbax.checkpoint.checkpoint_manager.CheckpointManagerOptions"]], "multiprocessingoptions (class in orbax.checkpoint.checkpoint_manager)": [[5, "orbax.checkpoint.checkpoint_manager.MultiprocessingOptions"]], "__eq__() (orbax.checkpoint.checkpoint_manager.asyncoptions method)": [[5, "orbax.checkpoint.checkpoint_manager.AsyncOptions.__eq__"]], "__eq__() (orbax.checkpoint.checkpoint_manager.checkpointmanageroptions method)": [[5, "orbax.checkpoint.checkpoint_manager.CheckpointManagerOptions.__eq__"]], "__eq__() (orbax.checkpoint.checkpoint_manager.multiprocessingoptions method)": [[5, "orbax.checkpoint.checkpoint_manager.MultiprocessingOptions.__eq__"]], "__hash__ (orbax.checkpoint.checkpoint_manager.asyncoptions attribute)": [[5, "orbax.checkpoint.checkpoint_manager.AsyncOptions.__hash__"]], "__hash__ (orbax.checkpoint.checkpoint_manager.checkpointmanageroptions attribute)": [[5, "orbax.checkpoint.checkpoint_manager.CheckpointManagerOptions.__hash__"]], "__hash__ (orbax.checkpoint.checkpoint_manager.multiprocessingoptions attribute)": [[5, "orbax.checkpoint.checkpoint_manager.MultiprocessingOptions.__hash__"]], "__init__() (orbax.checkpoint.checkpoint_manager.asyncoptions method)": [[5, "orbax.checkpoint.checkpoint_manager.AsyncOptions.__init__"]], "__init__() (orbax.checkpoint.checkpoint_manager.checkpointmanager method)": [[5, "orbax.checkpoint.checkpoint_manager.CheckpointManager.__init__"]], "__init__() (orbax.checkpoint.checkpoint_manager.checkpointmanageroptions method)": [[5, "orbax.checkpoint.checkpoint_manager.CheckpointManagerOptions.__init__"]], "__init__() (orbax.checkpoint.checkpoint_manager.multiprocessingoptions method)": [[5, "orbax.checkpoint.checkpoint_manager.MultiprocessingOptions.__init__"]], "__subclasshook__() (orbax.checkpoint.checkpoint_manager.checkpointmanager method)": [[5, "orbax.checkpoint.checkpoint_manager.CheckpointManager.__subclasshook__"]], "all_steps() (orbax.checkpoint.checkpoint_manager.checkpointmanager method)": [[5, "orbax.checkpoint.checkpoint_manager.CheckpointManager.all_steps"]], "best_step() (orbax.checkpoint.checkpoint_manager.checkpointmanager method)": [[5, "orbax.checkpoint.checkpoint_manager.CheckpointManager.best_step"]], "check_for_errors() (orbax.checkpoint.checkpoint_manager.checkpointmanager method)": [[5, "orbax.checkpoint.checkpoint_manager.CheckpointManager.check_for_errors"]], "close() (orbax.checkpoint.checkpoint_manager.checkpointmanager method)": [[5, "orbax.checkpoint.checkpoint_manager.CheckpointManager.close"]], "delete() (orbax.checkpoint.checkpoint_manager.checkpointmanager method)": [[5, "orbax.checkpoint.checkpoint_manager.CheckpointManager.delete"]], "directory (orbax.checkpoint.checkpoint_manager.checkpointmanager property)": [[5, "orbax.checkpoint.checkpoint_manager.CheckpointManager.directory"]], "is_async_checkpointer() (in module orbax.checkpoint.checkpoint_manager)": [[5, "orbax.checkpoint.checkpoint_manager.is_async_checkpointer"]], "is_saving_in_progress() (orbax.checkpoint.checkpoint_manager.checkpointmanager method)": [[5, "orbax.checkpoint.checkpoint_manager.CheckpointManager.is_saving_in_progress"]], "item_metadata() (orbax.checkpoint.checkpoint_manager.checkpointmanager method)": [[5, "orbax.checkpoint.checkpoint_manager.CheckpointManager.item_metadata"]], "latest_step() (orbax.checkpoint.checkpoint_manager.checkpointmanager method)": [[5, "orbax.checkpoint.checkpoint_manager.CheckpointManager.latest_step"]], "metadata() (orbax.checkpoint.checkpoint_manager.checkpointmanager method)": [[5, "orbax.checkpoint.checkpoint_manager.CheckpointManager.metadata"]], "metrics() (orbax.checkpoint.checkpoint_manager.checkpointmanager method)": [[5, "orbax.checkpoint.checkpoint_manager.CheckpointManager.metrics"]], "orbax.checkpoint.checkpoint_manager": [[5, "module-orbax.checkpoint.checkpoint_manager"]], "reached_preemption() (orbax.checkpoint.checkpoint_manager.checkpointmanager method)": [[5, "orbax.checkpoint.checkpoint_manager.CheckpointManager.reached_preemption"]], "reload() (orbax.checkpoint.checkpoint_manager.checkpointmanager method)": [[5, "orbax.checkpoint.checkpoint_manager.CheckpointManager.reload"]], "restore() (orbax.checkpoint.checkpoint_manager.checkpointmanager method)": [[5, "orbax.checkpoint.checkpoint_manager.CheckpointManager.restore"]], "save() (orbax.checkpoint.checkpoint_manager.checkpointmanager method)": [[5, "orbax.checkpoint.checkpoint_manager.CheckpointManager.save"]], "should_save() (orbax.checkpoint.checkpoint_manager.checkpointmanager method)": [[5, "orbax.checkpoint.checkpoint_manager.CheckpointManager.should_save"]], "wait_until_finished() (orbax.checkpoint.checkpoint_manager.checkpointmanager method)": [[5, "orbax.checkpoint.checkpoint_manager.CheckpointManager.wait_until_finished"]], "checkpoints_iterator() (in module orbax.checkpoint.checkpoint_utils)": [[6, "orbax.checkpoint.checkpoint_utils.checkpoints_iterator"]], "construct_restore_args() (in module orbax.checkpoint.checkpoint_utils)": [[6, "orbax.checkpoint.checkpoint_utils.construct_restore_args"]], "orbax.checkpoint.checkpoint_utils": [[6, "module-orbax.checkpoint.checkpoint_utils"]], "unlock_existing_checkpoints() (in module orbax.checkpoint.checkpoint_utils)": [[6, "orbax.checkpoint.checkpoint_utils.unlock_existing_checkpoints"]], "wait_for_new_checkpoint() (in module orbax.checkpoint.checkpoint_utils)": [[6, "orbax.checkpoint.checkpoint_utils.wait_for_new_checkpoint"]], "abstractcheckpointer (class in orbax.checkpoint)": [[7, "orbax.checkpoint.AbstractCheckpointer"]], "asynccheckpointer (class in orbax.checkpoint)": [[7, "orbax.checkpoint.AsyncCheckpointer"]], "checkpointer (class in orbax.checkpoint)": [[7, "orbax.checkpoint.Checkpointer"]], "pytreecheckpointer (class in orbax.checkpoint)": [[7, "orbax.checkpoint.PyTreeCheckpointer"]], "standardcheckpointer (class in orbax.checkpoint)": [[7, "orbax.checkpoint.StandardCheckpointer"]], "__init__() (orbax.checkpoint.asynccheckpointer method)": [[7, "orbax.checkpoint.AsyncCheckpointer.__init__"]], "__init__() (orbax.checkpoint.checkpointer method)": [[7, "orbax.checkpoint.Checkpointer.__init__"]], "__init__() (orbax.checkpoint.pytreecheckpointer method)": [[7, "orbax.checkpoint.PyTreeCheckpointer.__init__"]], "__init__() (orbax.checkpoint.standardcheckpointer method)": [[7, "orbax.checkpoint.StandardCheckpointer.__init__"]], "check_for_errors() (orbax.checkpoint.asynccheckpointer method)": [[7, "orbax.checkpoint.AsyncCheckpointer.check_for_errors"]], "close() (orbax.checkpoint.abstractcheckpointer method)": [[7, "orbax.checkpoint.AbstractCheckpointer.close"]], "close() (orbax.checkpoint.asynccheckpointer method)": [[7, "orbax.checkpoint.AsyncCheckpointer.close"]], "close() (orbax.checkpoint.checkpointer method)": [[7, "orbax.checkpoint.Checkpointer.close"]], "metadata() (orbax.checkpoint.abstractcheckpointer method)": [[7, "orbax.checkpoint.AbstractCheckpointer.metadata"]], "metadata() (orbax.checkpoint.checkpointer method)": [[7, "orbax.checkpoint.Checkpointer.metadata"]], "restore() (orbax.checkpoint.abstractcheckpointer method)": [[7, "orbax.checkpoint.AbstractCheckpointer.restore"]], "restore() (orbax.checkpoint.asynccheckpointer method)": [[7, "orbax.checkpoint.AsyncCheckpointer.restore"]], "restore() (orbax.checkpoint.checkpointer method)": [[7, "orbax.checkpoint.Checkpointer.restore"]], "save() (orbax.checkpoint.abstractcheckpointer method)": [[7, "orbax.checkpoint.AbstractCheckpointer.save"]], "save() (orbax.checkpoint.asynccheckpointer method)": [[7, "orbax.checkpoint.AsyncCheckpointer.save"]], "save() (orbax.checkpoint.checkpointer method)": [[7, "orbax.checkpoint.Checkpointer.save"]], "structure() (orbax.checkpoint.abstractcheckpointer method)": [[7, "orbax.checkpoint.AbstractCheckpointer.structure"]], "wait_until_finished() (orbax.checkpoint.asynccheckpointer method)": [[7, "orbax.checkpoint.AsyncCheckpointer.wait_until_finished"]], "orbax.checkpoint.logging": [[8, "module-orbax.checkpoint.logging"]], "arraymetadata (class in orbax.checkpoint.metadata)": [[9, "orbax.checkpoint.metadata.ArrayMetadata"]], "gspmdshardingmetadata (class in orbax.checkpoint.metadata)": [[9, "orbax.checkpoint.metadata.GSPMDShardingMetadata"]], "metadata (class in orbax.checkpoint.metadata)": [[9, "orbax.checkpoint.metadata.Metadata"]], "namedshardingmetadata (class in orbax.checkpoint.metadata)": [[9, "orbax.checkpoint.metadata.NamedShardingMetadata"]], "positionalshardingmetadata (class in orbax.checkpoint.metadata)": [[9, "orbax.checkpoint.metadata.PositionalShardingMetadata"]], "scalarmetadata (class in orbax.checkpoint.metadata)": [[9, "orbax.checkpoint.metadata.ScalarMetadata"]], "shardingmetadata (class in orbax.checkpoint.metadata)": [[9, "orbax.checkpoint.metadata.ShardingMetadata"]], "shardingtypes (class in orbax.checkpoint.metadata)": [[9, "orbax.checkpoint.metadata.ShardingTypes"]], "singledeviceshardingmetadata (class in orbax.checkpoint.metadata)": [[9, "orbax.checkpoint.metadata.SingleDeviceShardingMetadata"]], "stringmetadata (class in orbax.checkpoint.metadata)": [[9, "orbax.checkpoint.metadata.StringMetadata"]], "__eq__() (orbax.checkpoint.metadata.arraymetadata method)": [[9, "orbax.checkpoint.metadata.ArrayMetadata.__eq__"]], "__eq__() (orbax.checkpoint.metadata.gspmdshardingmetadata method)": [[9, "orbax.checkpoint.metadata.GSPMDShardingMetadata.__eq__"]], "__eq__() (orbax.checkpoint.metadata.metadata method)": [[9, "orbax.checkpoint.metadata.Metadata.__eq__"]], "__eq__() (orbax.checkpoint.metadata.namedshardingmetadata method)": [[9, "orbax.checkpoint.metadata.NamedShardingMetadata.__eq__"]], "__eq__() (orbax.checkpoint.metadata.positionalshardingmetadata method)": [[9, "orbax.checkpoint.metadata.PositionalShardingMetadata.__eq__"]], "__eq__() (orbax.checkpoint.metadata.scalarmetadata method)": [[9, "orbax.checkpoint.metadata.ScalarMetadata.__eq__"]], "__eq__() (orbax.checkpoint.metadata.shardingmetadata method)": [[9, "orbax.checkpoint.metadata.ShardingMetadata.__eq__"]], "__eq__() (orbax.checkpoint.metadata.singledeviceshardingmetadata method)": [[9, "orbax.checkpoint.metadata.SingleDeviceShardingMetadata.__eq__"]], "__eq__() (orbax.checkpoint.metadata.stringmetadata method)": [[9, "orbax.checkpoint.metadata.StringMetadata.__eq__"]], "__hash__ (orbax.checkpoint.metadata.arraymetadata attribute)": [[9, "orbax.checkpoint.metadata.ArrayMetadata.__hash__"]], "__hash__ (orbax.checkpoint.metadata.gspmdshardingmetadata attribute)": [[9, "orbax.checkpoint.metadata.GSPMDShardingMetadata.__hash__"]], "__hash__ (orbax.checkpoint.metadata.metadata attribute)": [[9, "orbax.checkpoint.metadata.Metadata.__hash__"]], "__hash__ (orbax.checkpoint.metadata.namedshardingmetadata attribute)": [[9, "orbax.checkpoint.metadata.NamedShardingMetadata.__hash__"]], "__hash__ (orbax.checkpoint.metadata.positionalshardingmetadata attribute)": [[9, "orbax.checkpoint.metadata.PositionalShardingMetadata.__hash__"]], "__hash__ (orbax.checkpoint.metadata.scalarmetadata attribute)": [[9, "orbax.checkpoint.metadata.ScalarMetadata.__hash__"]], "__hash__ (orbax.checkpoint.metadata.shardingmetadata attribute)": [[9, "orbax.checkpoint.metadata.ShardingMetadata.__hash__"]], "__hash__ (orbax.checkpoint.metadata.singledeviceshardingmetadata attribute)": [[9, "orbax.checkpoint.metadata.SingleDeviceShardingMetadata.__hash__"]], "__hash__ (orbax.checkpoint.metadata.stringmetadata attribute)": [[9, "orbax.checkpoint.metadata.StringMetadata.__hash__"]], "__init__() (orbax.checkpoint.metadata.arraymetadata method)": [[9, "orbax.checkpoint.metadata.ArrayMetadata.__init__"]], "__init__() (orbax.checkpoint.metadata.gspmdshardingmetadata method)": [[9, "orbax.checkpoint.metadata.GSPMDShardingMetadata.__init__"]], "__init__() (orbax.checkpoint.metadata.metadata method)": [[9, "orbax.checkpoint.metadata.Metadata.__init__"]], "__init__() (orbax.checkpoint.metadata.namedshardingmetadata method)": [[9, "orbax.checkpoint.metadata.NamedShardingMetadata.__init__"]], "__init__() (orbax.checkpoint.metadata.positionalshardingmetadata method)": [[9, "orbax.checkpoint.metadata.PositionalShardingMetadata.__init__"]], "__init__() (orbax.checkpoint.metadata.scalarmetadata method)": [[9, "orbax.checkpoint.metadata.ScalarMetadata.__init__"]], "__init__() (orbax.checkpoint.metadata.shardingmetadata method)": [[9, "orbax.checkpoint.metadata.ShardingMetadata.__init__"]], "__init__() (orbax.checkpoint.metadata.singledeviceshardingmetadata method)": [[9, "orbax.checkpoint.metadata.SingleDeviceShardingMetadata.__init__"]], "__init__() (orbax.checkpoint.metadata.stringmetadata method)": [[9, "orbax.checkpoint.metadata.StringMetadata.__init__"]], "from_deserialized_dict() (orbax.checkpoint.metadata.namedshardingmetadata class method)": [[9, "orbax.checkpoint.metadata.NamedShardingMetadata.from_deserialized_dict"]], "from_deserialized_dict() (orbax.checkpoint.metadata.shardingmetadata class method)": [[9, "orbax.checkpoint.metadata.ShardingMetadata.from_deserialized_dict"]], "from_deserialized_dict() (orbax.checkpoint.metadata.singledeviceshardingmetadata class method)": [[9, "orbax.checkpoint.metadata.SingleDeviceShardingMetadata.from_deserialized_dict"]], "from_jax_sharding() (in module orbax.checkpoint.metadata)": [[9, "orbax.checkpoint.metadata.from_jax_sharding"]], "from_jax_sharding() (orbax.checkpoint.metadata.namedshardingmetadata class method)": [[9, "orbax.checkpoint.metadata.NamedShardingMetadata.from_jax_sharding"]], "from_jax_sharding() (orbax.checkpoint.metadata.shardingmetadata class method)": [[9, "orbax.checkpoint.metadata.ShardingMetadata.from_jax_sharding"]], "from_jax_sharding() (orbax.checkpoint.metadata.singledeviceshardingmetadata class method)": [[9, "orbax.checkpoint.metadata.SingleDeviceShardingMetadata.from_jax_sharding"]], "from_serialized_string() (in module orbax.checkpoint.metadata)": [[9, "orbax.checkpoint.metadata.from_serialized_string"]], "get_sharding_or_none() (in module orbax.checkpoint.metadata)": [[9, "orbax.checkpoint.metadata.get_sharding_or_none"]], "orbax.checkpoint.metadata": [[9, "module-orbax.checkpoint.metadata"]], "to_jax_sharding() (orbax.checkpoint.metadata.namedshardingmetadata method)": [[9, "orbax.checkpoint.metadata.NamedShardingMetadata.to_jax_sharding"]], "to_jax_sharding() (orbax.checkpoint.metadata.shardingmetadata method)": [[9, "orbax.checkpoint.metadata.ShardingMetadata.to_jax_sharding"]], "to_jax_sharding() (orbax.checkpoint.metadata.singledeviceshardingmetadata method)": [[9, "orbax.checkpoint.metadata.SingleDeviceShardingMetadata.to_jax_sharding"]], "to_serialized_string() (orbax.checkpoint.metadata.namedshardingmetadata method)": [[9, "orbax.checkpoint.metadata.NamedShardingMetadata.to_serialized_string"]], "to_serialized_string() (orbax.checkpoint.metadata.shardingmetadata method)": [[9, "orbax.checkpoint.metadata.ShardingMetadata.to_serialized_string"]], "to_serialized_string() (orbax.checkpoint.metadata.singledeviceshardingmetadata method)": [[9, "orbax.checkpoint.metadata.SingleDeviceShardingMetadata.to_serialized_string"]], "msgpack_restore() (in module orbax.checkpoint.msgpack_utils)": [[10, "orbax.checkpoint.msgpack_utils.msgpack_restore"]], "msgpack_serialize() (in module orbax.checkpoint.msgpack_utils)": [[10, "orbax.checkpoint.msgpack_utils.msgpack_serialize"]], "orbax.checkpoint.msgpack_utils": [[10, "module-orbax.checkpoint.msgpack_utils"]], "barriersyncfn (class in orbax.checkpoint.multihost)": [[11, "orbax.checkpoint.multihost.BarrierSyncFn"]], "__call__() (orbax.checkpoint.multihost.barriersyncfn method)": [[11, "orbax.checkpoint.multihost.BarrierSyncFn.__call__"]], "__init__() (orbax.checkpoint.multihost.barriersyncfn method)": [[11, "orbax.checkpoint.multihost.BarrierSyncFn.__init__"]], "__subclasshook__() (orbax.checkpoint.multihost.barriersyncfn method)": [[11, "orbax.checkpoint.multihost.BarrierSyncFn.__subclasshook__"]], "broadcast_one_to_all() (in module orbax.checkpoint.multihost)": [[11, "orbax.checkpoint.multihost.broadcast_one_to_all"]], "get_barrier_sync_fn() (in module orbax.checkpoint.multihost)": [[11, "orbax.checkpoint.multihost.get_barrier_sync_fn"]], "orbax.checkpoint.multihost": [[11, "module-orbax.checkpoint.multihost"]], "sync_global_processes() (in module orbax.checkpoint.multihost)": [[11, "orbax.checkpoint.multihost.sync_global_processes"]], "unique_barrier_key() (in module orbax.checkpoint.multihost)": [[11, "orbax.checkpoint.multihost.unique_barrier_key"]], "atomicrenametemporarypath (class in orbax.checkpoint.path.atomicity)": [[12, "orbax.checkpoint.path.atomicity.AtomicRenameTemporaryPath"]], "commitfiletemporarypath (class in orbax.checkpoint.path.atomicity)": [[12, "orbax.checkpoint.path.atomicity.CommitFileTemporaryPath"]], "temporarypath (class in orbax.checkpoint.path.atomicity)": [[12, "orbax.checkpoint.path.atomicity.TemporaryPath"]], "__init__() (orbax.checkpoint.path.atomicity.atomicrenametemporarypath method)": [[12, "orbax.checkpoint.path.atomicity.AtomicRenameTemporaryPath.__init__"]], "__init__() (orbax.checkpoint.path.atomicity.commitfiletemporarypath method)": [[12, "orbax.checkpoint.path.atomicity.CommitFileTemporaryPath.__init__"]], "__init__() (orbax.checkpoint.path.atomicity.temporarypath method)": [[12, "orbax.checkpoint.path.atomicity.TemporaryPath.__init__"]], "__subclasshook__() (orbax.checkpoint.path.atomicity.atomicrenametemporarypath method)": [[12, "orbax.checkpoint.path.atomicity.AtomicRenameTemporaryPath.__subclasshook__"]], "__subclasshook__() (orbax.checkpoint.path.atomicity.commitfiletemporarypath method)": [[12, "orbax.checkpoint.path.atomicity.CommitFileTemporaryPath.__subclasshook__"]], "__subclasshook__() (orbax.checkpoint.path.atomicity.temporarypath method)": [[12, "orbax.checkpoint.path.atomicity.TemporaryPath.__subclasshook__"]], "create() (orbax.checkpoint.path.atomicity.atomicrenametemporarypath method)": [[12, "orbax.checkpoint.path.atomicity.AtomicRenameTemporaryPath.create"]], "create() (orbax.checkpoint.path.atomicity.commitfiletemporarypath method)": [[12, "orbax.checkpoint.path.atomicity.CommitFileTemporaryPath.create"]], "create() (orbax.checkpoint.path.atomicity.temporarypath method)": [[12, "orbax.checkpoint.path.atomicity.TemporaryPath.create"]], "finalize() (orbax.checkpoint.path.atomicity.atomicrenametemporarypath method)": [[12, "orbax.checkpoint.path.atomicity.AtomicRenameTemporaryPath.finalize"]], "finalize() (orbax.checkpoint.path.atomicity.commitfiletemporarypath method)": [[12, "orbax.checkpoint.path.atomicity.CommitFileTemporaryPath.finalize"]], "finalize() (orbax.checkpoint.path.atomicity.temporarypath method)": [[12, "orbax.checkpoint.path.atomicity.TemporaryPath.finalize"]], "from_final() (orbax.checkpoint.path.atomicity.atomicrenametemporarypath class method)": [[12, "orbax.checkpoint.path.atomicity.AtomicRenameTemporaryPath.from_final"]], "from_final() (orbax.checkpoint.path.atomicity.commitfiletemporarypath class method)": [[12, "orbax.checkpoint.path.atomicity.CommitFileTemporaryPath.from_final"]], "from_final() (orbax.checkpoint.path.atomicity.temporarypath class method)": [[12, "orbax.checkpoint.path.atomicity.TemporaryPath.from_final"]], "get() (orbax.checkpoint.path.atomicity.atomicrenametemporarypath method)": [[12, "orbax.checkpoint.path.atomicity.AtomicRenameTemporaryPath.get"]], "get() (orbax.checkpoint.path.atomicity.commitfiletemporarypath method)": [[12, "orbax.checkpoint.path.atomicity.CommitFileTemporaryPath.get"]], "get() (orbax.checkpoint.path.atomicity.temporarypath method)": [[12, "orbax.checkpoint.path.atomicity.TemporaryPath.get"]], "get_default_temporary_path_class() (in module orbax.checkpoint.path.atomicity)": [[12, "orbax.checkpoint.path.atomicity.get_default_temporary_path_class"]], "get_final() (orbax.checkpoint.path.atomicity.atomicrenametemporarypath method)": [[12, "orbax.checkpoint.path.atomicity.AtomicRenameTemporaryPath.get_final"]], "get_final() (orbax.checkpoint.path.atomicity.commitfiletemporarypath method)": [[12, "orbax.checkpoint.path.atomicity.CommitFileTemporaryPath.get_final"]], "get_final() (orbax.checkpoint.path.atomicity.temporarypath method)": [[12, "orbax.checkpoint.path.atomicity.TemporaryPath.get_final"]], "match() (orbax.checkpoint.path.atomicity.atomicrenametemporarypath class method)": [[12, "orbax.checkpoint.path.atomicity.AtomicRenameTemporaryPath.match"]], "match() (orbax.checkpoint.path.atomicity.commitfiletemporarypath class method)": [[12, "orbax.checkpoint.path.atomicity.CommitFileTemporaryPath.match"]], "match() (orbax.checkpoint.path.atomicity.temporarypath class method)": [[12, "orbax.checkpoint.path.atomicity.TemporaryPath.match"]], "on_commit_callback() (in module orbax.checkpoint.path.atomicity)": [[12, "orbax.checkpoint.path.atomicity.on_commit_callback"]], "orbax.checkpoint.path.atomicity": [[12, "module-orbax.checkpoint.path.atomicity"]], "checkpointdeleter (class in orbax.checkpoint.path.deleter)": [[13, "orbax.checkpoint.path.deleter.CheckpointDeleter"]], "standardcheckpointdeleter (class in orbax.checkpoint.path.deleter)": [[13, "orbax.checkpoint.path.deleter.StandardCheckpointDeleter"]], "threadedcheckpointdeleter (class in orbax.checkpoint.path.deleter)": [[13, "orbax.checkpoint.path.deleter.ThreadedCheckpointDeleter"]], "__init__() (orbax.checkpoint.path.deleter.checkpointdeleter method)": [[13, "orbax.checkpoint.path.deleter.CheckpointDeleter.__init__"]], "__init__() (orbax.checkpoint.path.deleter.standardcheckpointdeleter method)": [[13, "orbax.checkpoint.path.deleter.StandardCheckpointDeleter.__init__"]], "__init__() (orbax.checkpoint.path.deleter.threadedcheckpointdeleter method)": [[13, "orbax.checkpoint.path.deleter.ThreadedCheckpointDeleter.__init__"]], "__subclasshook__() (orbax.checkpoint.path.deleter.checkpointdeleter method)": [[13, "orbax.checkpoint.path.deleter.CheckpointDeleter.__subclasshook__"]], "close() (orbax.checkpoint.path.deleter.checkpointdeleter method)": [[13, "orbax.checkpoint.path.deleter.CheckpointDeleter.close"]], "create_checkpoint_deleter() (in module orbax.checkpoint.path.deleter)": [[13, "orbax.checkpoint.path.deleter.create_checkpoint_deleter"]], "delete() (orbax.checkpoint.path.deleter.checkpointdeleter method)": [[13, "orbax.checkpoint.path.deleter.CheckpointDeleter.delete"]], "delete() (orbax.checkpoint.path.deleter.standardcheckpointdeleter method)": [[13, "orbax.checkpoint.path.deleter.StandardCheckpointDeleter.delete"]], "delete_steps() (orbax.checkpoint.path.deleter.checkpointdeleter method)": [[13, "orbax.checkpoint.path.deleter.CheckpointDeleter.delete_steps"]], "orbax.checkpoint.path.deleter": [[13, "module-orbax.checkpoint.path.deleter"]], "metadata (class in orbax.checkpoint.path.step)": [[14, "orbax.checkpoint.path.step.Metadata"]], "nameformat (class in orbax.checkpoint.path.step)": [[14, "orbax.checkpoint.path.step.NameFormat"]], "__delattr__() (orbax.checkpoint.path.step.metadata method)": [[14, "orbax.checkpoint.path.step.Metadata.__delattr__"]], "__eq__() (orbax.checkpoint.path.step.metadata method)": [[14, "orbax.checkpoint.path.step.Metadata.__eq__"]], "__hash__() (orbax.checkpoint.path.step.metadata method)": [[14, "orbax.checkpoint.path.step.Metadata.__hash__"]], "__init__() (orbax.checkpoint.path.step.metadata method)": [[14, "orbax.checkpoint.path.step.Metadata.__init__"]], "__init__() (orbax.checkpoint.path.step.nameformat method)": [[14, "orbax.checkpoint.path.step.NameFormat.__init__"]], "__setattr__() (orbax.checkpoint.path.step.metadata method)": [[14, "orbax.checkpoint.path.step.Metadata.__setattr__"]], "__subclasshook__() (orbax.checkpoint.path.step.nameformat method)": [[14, "orbax.checkpoint.path.step.NameFormat.__subclasshook__"]], "any_checkpoint_step() (in module orbax.checkpoint.path.step)": [[14, "orbax.checkpoint.path.step.any_checkpoint_step"]], "build_name() (orbax.checkpoint.path.step.nameformat method)": [[14, "orbax.checkpoint.path.step.NameFormat.build_name"]], "build_step_metadatas() (in module orbax.checkpoint.path.step)": [[14, "orbax.checkpoint.path.step.build_step_metadatas"]], "build_step_path() (in module orbax.checkpoint.path.step)": [[14, "orbax.checkpoint.path.step.build_step_path"]], "checkpoint_steps() (in module orbax.checkpoint.path.step)": [[14, "orbax.checkpoint.path.step.checkpoint_steps"]], "checkpoint_steps_paths() (in module orbax.checkpoint.path.step)": [[14, "orbax.checkpoint.path.step.checkpoint_steps_paths"]], "cleanup_tmp_directories() (in module orbax.checkpoint.path.step)": [[14, "orbax.checkpoint.path.step.cleanup_tmp_directories"]], "commit_timestamp (orbax.checkpoint.path.step.metadata property)": [[14, "orbax.checkpoint.path.step.Metadata.commit_timestamp"]], "commit_timestamp_nsecs (orbax.checkpoint.path.step.metadata property)": [[14, "orbax.checkpoint.path.step.Metadata.commit_timestamp_nsecs"]], "composite_name_format() (in module orbax.checkpoint.path.step)": [[14, "orbax.checkpoint.path.step.composite_name_format"]], "find_all() (orbax.checkpoint.path.step.nameformat method)": [[14, "orbax.checkpoint.path.step.NameFormat.find_all"]], "find_step() (orbax.checkpoint.path.step.nameformat method)": [[14, "orbax.checkpoint.path.step.NameFormat.find_step"]], "find_step_path() (in module orbax.checkpoint.path.step)": [[14, "orbax.checkpoint.path.step.find_step_path"]], "get_save_directory() (in module orbax.checkpoint.path.step)": [[14, "orbax.checkpoint.path.step.get_save_directory"]], "init_timestamp_nsecs (orbax.checkpoint.path.step.metadata property)": [[14, "orbax.checkpoint.path.step.Metadata.init_timestamp_nsecs"]], "is_checkpoint_finalized() (in module orbax.checkpoint.path.step)": [[14, "orbax.checkpoint.path.step.is_checkpoint_finalized"]], "is_gcs_path() (in module orbax.checkpoint.path.step)": [[14, "orbax.checkpoint.path.step.is_gcs_path"]], "is_tmp_checkpoint() (in module orbax.checkpoint.path.step)": [[14, "orbax.checkpoint.path.step.is_tmp_checkpoint"]], "latest_step_metadata() (in module orbax.checkpoint.path.step)": [[14, "orbax.checkpoint.path.step.latest_step_metadata"]], "orbax.checkpoint.path.step": [[14, "module-orbax.checkpoint.path.step"]], "path (orbax.checkpoint.path.step.metadata attribute)": [[14, "orbax.checkpoint.path.step.Metadata.path"]], "standard_name_format() (in module orbax.checkpoint.path.step)": [[14, "orbax.checkpoint.path.step.standard_name_format"]], "step (orbax.checkpoint.path.step.metadata attribute)": [[14, "orbax.checkpoint.path.step.Metadata.step"]], "step_from_checkpoint_name() (in module orbax.checkpoint.path.step)": [[14, "orbax.checkpoint.path.step.step_from_checkpoint_name"]], "step_metadata_of_checkpoint_path() (in module orbax.checkpoint.path.step)": [[14, "orbax.checkpoint.path.step.step_metadata_of_checkpoint_path"]], "step_prefix_with_underscore() (in module orbax.checkpoint.path.step)": [[14, "orbax.checkpoint.path.step.step_prefix_with_underscore"]], "tmp_checkpoints() (in module orbax.checkpoint.path.step)": [[14, "orbax.checkpoint.path.step.tmp_checkpoints"]], "transform (class in orbax.checkpoint.transform_utils)": [[15, "orbax.checkpoint.transform_utils.Transform"]], "__eq__() (orbax.checkpoint.transform_utils.transform method)": [[15, "orbax.checkpoint.transform_utils.Transform.__eq__"]], "__hash__ (orbax.checkpoint.transform_utils.transform attribute)": [[15, "orbax.checkpoint.transform_utils.Transform.__hash__"]], "__init__() (orbax.checkpoint.transform_utils.transform method)": [[15, "orbax.checkpoint.transform_utils.Transform.__init__"]], "apply_transformations() (in module orbax.checkpoint.transform_utils)": [[15, "orbax.checkpoint.transform_utils.apply_transformations"]], "merge_trees() (in module orbax.checkpoint.transform_utils)": [[15, "orbax.checkpoint.transform_utils.merge_trees"]], "orbax.checkpoint.transform_utils": [[15, "module-orbax.checkpoint.transform_utils"]], "deserialize_tree() (in module orbax.checkpoint.tree)": [[16, "orbax.checkpoint.tree.deserialize_tree"]], "from_flat_dict() (in module orbax.checkpoint.tree)": [[16, "orbax.checkpoint.tree.from_flat_dict"]], "from_flattened_with_keypath() (in module orbax.checkpoint.tree)": [[16, "orbax.checkpoint.tree.from_flattened_with_keypath"]], "get_key_name() (in module orbax.checkpoint.tree)": [[16, "orbax.checkpoint.tree.get_key_name"]], "get_param_names() (in module orbax.checkpoint.tree)": [[16, "orbax.checkpoint.tree.get_param_names"]], "is_dict_key() (in module orbax.checkpoint.tree)": [[16, "orbax.checkpoint.tree.is_dict_key"]], "is_empty_node() (in module orbax.checkpoint.tree)": [[16, "orbax.checkpoint.tree.is_empty_node"]], "is_empty_or_leaf() (in module orbax.checkpoint.tree)": [[16, "orbax.checkpoint.tree.is_empty_or_leaf"]], "is_sequence_key() (in module orbax.checkpoint.tree)": [[16, "orbax.checkpoint.tree.is_sequence_key"]], "orbax.checkpoint.tree": [[16, "module-orbax.checkpoint.tree"]], "serialize_tree() (in module orbax.checkpoint.tree)": [[16, "orbax.checkpoint.tree.serialize_tree"]], "to_flat_dict() (in module orbax.checkpoint.tree)": [[16, "orbax.checkpoint.tree.to_flat_dict"]], "to_shape_dtype_struct() (in module orbax.checkpoint.tree)": [[16, "orbax.checkpoint.tree.to_shape_dtype_struct"]], "tuple_path_from_keypath() (in module orbax.checkpoint.tree)": [[16, "orbax.checkpoint.tree.tuple_path_from_keypath"]], "arrayhandler (class in orbax.checkpoint.type_handlers)": [[17, "id0"], [17, "orbax.checkpoint.type_handlers.ArrayHandler"]], "arrayrestoreargs (class in orbax.checkpoint.type_handlers)": [[17, "orbax.checkpoint.type_handlers.ArrayRestoreArgs"]], "numpyhandler (class in orbax.checkpoint.type_handlers)": [[17, "orbax.checkpoint.type_handlers.NumpyHandler"]], "restoreargs (class in orbax.checkpoint.type_handlers)": [[17, "orbax.checkpoint.type_handlers.RestoreArgs"]], "saveargs (class in orbax.checkpoint.type_handlers)": [[17, "orbax.checkpoint.type_handlers.SaveArgs"]], "scalarhandler (class in orbax.checkpoint.type_handlers)": [[17, "orbax.checkpoint.type_handlers.ScalarHandler"]], "stringhandler (class in orbax.checkpoint.type_handlers)": [[17, "orbax.checkpoint.type_handlers.StringHandler"]], "typehandler (class in orbax.checkpoint.type_handlers)": [[17, "orbax.checkpoint.type_handlers.TypeHandler"]], "typehandlerregistry (class in orbax.checkpoint.type_handlers)": [[17, "orbax.checkpoint.type_handlers.TypeHandlerRegistry"]], "__eq__() (orbax.checkpoint.type_handlers.arrayrestoreargs method)": [[17, "orbax.checkpoint.type_handlers.ArrayRestoreArgs.__eq__"]], "__eq__() (orbax.checkpoint.type_handlers.restoreargs method)": [[17, "orbax.checkpoint.type_handlers.RestoreArgs.__eq__"]], "__eq__() (orbax.checkpoint.type_handlers.saveargs method)": [[17, "orbax.checkpoint.type_handlers.SaveArgs.__eq__"]], "__hash__ (orbax.checkpoint.type_handlers.arrayrestoreargs attribute)": [[17, "orbax.checkpoint.type_handlers.ArrayRestoreArgs.__hash__"]], "__hash__ (orbax.checkpoint.type_handlers.restoreargs attribute)": [[17, "orbax.checkpoint.type_handlers.RestoreArgs.__hash__"]], "__hash__ (orbax.checkpoint.type_handlers.saveargs attribute)": [[17, "orbax.checkpoint.type_handlers.SaveArgs.__hash__"]], "__init__() (orbax.checkpoint.type_handlers.arrayhandler method)": [[17, "id1"], [17, "orbax.checkpoint.type_handlers.ArrayHandler.__init__"]], "__init__() (orbax.checkpoint.type_handlers.arrayrestoreargs method)": [[17, "orbax.checkpoint.type_handlers.ArrayRestoreArgs.__init__"]], "__init__() (orbax.checkpoint.type_handlers.numpyhandler method)": [[17, "orbax.checkpoint.type_handlers.NumpyHandler.__init__"]], "__init__() (orbax.checkpoint.type_handlers.restoreargs method)": [[17, "orbax.checkpoint.type_handlers.RestoreArgs.__init__"]], "__init__() (orbax.checkpoint.type_handlers.saveargs method)": [[17, "orbax.checkpoint.type_handlers.SaveArgs.__init__"]], "__init__() (orbax.checkpoint.type_handlers.stringhandler method)": [[17, "orbax.checkpoint.type_handlers.StringHandler.__init__"]], "create_type_handler_registry() (in module orbax.checkpoint.type_handlers)": [[17, "orbax.checkpoint.type_handlers.create_type_handler_registry"]], "deserialize() (orbax.checkpoint.type_handlers.arrayhandler method)": [[17, "id5"], [17, "orbax.checkpoint.type_handlers.ArrayHandler.deserialize"]], "deserialize() (orbax.checkpoint.type_handlers.numpyhandler method)": [[17, "orbax.checkpoint.type_handlers.NumpyHandler.deserialize"]], "deserialize() (orbax.checkpoint.type_handlers.scalarhandler method)": [[17, "orbax.checkpoint.type_handlers.ScalarHandler.deserialize"]], "deserialize() (orbax.checkpoint.type_handlers.stringhandler method)": [[17, "orbax.checkpoint.type_handlers.StringHandler.deserialize"]], "deserialize() (orbax.checkpoint.type_handlers.typehandler method)": [[17, "orbax.checkpoint.type_handlers.TypeHandler.deserialize"]], "finalize() (orbax.checkpoint.type_handlers.typehandler method)": [[17, "orbax.checkpoint.type_handlers.TypeHandler.finalize"]], "get_cast_tspec_deserialize() (in module orbax.checkpoint.type_handlers)": [[17, "orbax.checkpoint.type_handlers.get_cast_tspec_deserialize"]], "get_cast_tspec_serialize() (in module orbax.checkpoint.type_handlers)": [[17, "orbax.checkpoint.type_handlers.get_cast_tspec_serialize"]], "get_json_tspec_read() (in module orbax.checkpoint.type_handlers)": [[17, "orbax.checkpoint.type_handlers.get_json_tspec_read"]], "get_json_tspec_write() (in module orbax.checkpoint.type_handlers)": [[17, "orbax.checkpoint.type_handlers.get_json_tspec_write"]], "get_ts_context() (in module orbax.checkpoint.type_handlers)": [[17, "orbax.checkpoint.type_handlers.get_ts_context"]], "get_type_handler() (in module orbax.checkpoint.type_handlers)": [[17, "orbax.checkpoint.type_handlers.get_type_handler"]], "has_type_handler() (in module orbax.checkpoint.type_handlers)": [[17, "orbax.checkpoint.type_handlers.has_type_handler"]], "is_ocdbt_checkpoint() (in module orbax.checkpoint.type_handlers)": [[17, "orbax.checkpoint.type_handlers.is_ocdbt_checkpoint"]], "merge_ocdbt_per_process_files() (in module orbax.checkpoint.type_handlers)": [[17, "orbax.checkpoint.type_handlers.merge_ocdbt_per_process_files"]], "metadata() (orbax.checkpoint.type_handlers.arrayhandler method)": [[17, "id3"], [17, "orbax.checkpoint.type_handlers.ArrayHandler.metadata"]], "metadata() (orbax.checkpoint.type_handlers.numpyhandler method)": [[17, "orbax.checkpoint.type_handlers.NumpyHandler.metadata"]], "metadata() (orbax.checkpoint.type_handlers.scalarhandler method)": [[17, "orbax.checkpoint.type_handlers.ScalarHandler.metadata"]], "metadata() (orbax.checkpoint.type_handlers.stringhandler method)": [[17, "orbax.checkpoint.type_handlers.StringHandler.metadata"]], "metadata() (orbax.checkpoint.type_handlers.typehandler method)": [[17, "orbax.checkpoint.type_handlers.TypeHandler.metadata"]], "orbax.checkpoint.type_handlers": [[17, "module-orbax.checkpoint.type_handlers"]], "register_standard_handlers_with_options() (in module orbax.checkpoint.type_handlers)": [[17, "orbax.checkpoint.type_handlers.register_standard_handlers_with_options"]], "register_type_handler() (in module orbax.checkpoint.type_handlers)": [[17, "orbax.checkpoint.type_handlers.register_type_handler"]], "restore_type (orbax.checkpoint.type_handlers.arrayrestoreargs attribute)": [[17, "orbax.checkpoint.type_handlers.ArrayRestoreArgs.restore_type"]], "serialize() (orbax.checkpoint.type_handlers.arrayhandler method)": [[17, "id4"], [17, "orbax.checkpoint.type_handlers.ArrayHandler.serialize"]], "serialize() (orbax.checkpoint.type_handlers.numpyhandler method)": [[17, "orbax.checkpoint.type_handlers.NumpyHandler.serialize"]], "serialize() (orbax.checkpoint.type_handlers.scalarhandler method)": [[17, "orbax.checkpoint.type_handlers.ScalarHandler.serialize"]], "serialize() (orbax.checkpoint.type_handlers.stringhandler method)": [[17, "orbax.checkpoint.type_handlers.StringHandler.serialize"]], "serialize() (orbax.checkpoint.type_handlers.typehandler method)": [[17, "orbax.checkpoint.type_handlers.TypeHandler.serialize"]], "typestr() (orbax.checkpoint.type_handlers.arrayhandler method)": [[17, "id2"], [17, "orbax.checkpoint.type_handlers.ArrayHandler.typestr"]], "typestr() (orbax.checkpoint.type_handlers.numpyhandler method)": [[17, "orbax.checkpoint.type_handlers.NumpyHandler.typestr"]], "typestr() (orbax.checkpoint.type_handlers.scalarhandler method)": [[17, "orbax.checkpoint.type_handlers.ScalarHandler.typestr"]], "typestr() (orbax.checkpoint.type_handlers.stringhandler method)": [[17, "orbax.checkpoint.type_handlers.StringHandler.typestr"]], "typestr() (orbax.checkpoint.type_handlers.typehandler method)": [[17, "orbax.checkpoint.type_handlers.TypeHandler.typestr"]], "any_checkpoint_step() (in module orbax.checkpoint.utils)": [[18, "orbax.checkpoint.utils.any_checkpoint_step"]], "are_locked() (in module orbax.checkpoint.utils)": [[18, "orbax.checkpoint.utils.are_locked"]], "async_exists() (in module orbax.checkpoint.utils)": [[18, "orbax.checkpoint.utils.async_exists"]], "async_makedirs() (in module orbax.checkpoint.utils)": [[18, "orbax.checkpoint.utils.async_makedirs"]], "async_write_bytes() (in module orbax.checkpoint.utils)": [[18, "orbax.checkpoint.utils.async_write_bytes"]], "checkpoint_steps() (in module orbax.checkpoint.utils)": [[18, "orbax.checkpoint.utils.checkpoint_steps"]], "checkpoint_steps_paths() (in module orbax.checkpoint.utils)": [[18, "orbax.checkpoint.utils.checkpoint_steps_paths"]], "cleanup_tmp_directories() (in module orbax.checkpoint.utils)": [[18, "orbax.checkpoint.utils.cleanup_tmp_directories"]], "fully_replicated_host_local_array_to_global_array() (in module orbax.checkpoint.utils)": [[18, "orbax.checkpoint.utils.fully_replicated_host_local_array_to_global_array"]], "get_save_directory() (in module orbax.checkpoint.utils)": [[18, "orbax.checkpoint.utils.get_save_directory"]], "is_checkpoint_finalized() (in module orbax.checkpoint.utils)": [[18, "orbax.checkpoint.utils.is_checkpoint_finalized"]], "is_gcs_path() (in module orbax.checkpoint.utils)": [[18, "orbax.checkpoint.utils.is_gcs_path"]], "is_locked() (in module orbax.checkpoint.utils)": [[18, "orbax.checkpoint.utils.is_locked"]], "is_scalar() (in module orbax.checkpoint.utils)": [[18, "orbax.checkpoint.utils.is_scalar"]], "is_tmp_checkpoint() (in module orbax.checkpoint.utils)": [[18, "orbax.checkpoint.utils.is_tmp_checkpoint"]], "leaf_is_placeholder() (in module orbax.checkpoint.utils)": [[18, "orbax.checkpoint.utils.leaf_is_placeholder"]], "leaf_placeholder() (in module orbax.checkpoint.utils)": [[18, "orbax.checkpoint.utils.leaf_placeholder"]], "lockdir() (in module orbax.checkpoint.utils)": [[18, "orbax.checkpoint.utils.lockdir"]], "name_from_leaf_placeholder() (in module orbax.checkpoint.utils)": [[18, "orbax.checkpoint.utils.name_from_leaf_placeholder"]], "orbax.checkpoint.utils": [[18, "module-orbax.checkpoint.utils"]], "record_saved_duration() (in module orbax.checkpoint.utils)": [[18, "orbax.checkpoint.utils.record_saved_duration"]], "step_from_checkpoint_name() (in module orbax.checkpoint.utils)": [[18, "orbax.checkpoint.utils.step_from_checkpoint_name"]], "tmp_checkpoints() (in module orbax.checkpoint.utils)": [[18, "orbax.checkpoint.utils.tmp_checkpoints"]], "dtensor_initialized() (in module orbax.export.dtensor_utils)": [[20, "orbax.export.dtensor_utils.dtensor_initialized"]], "get_current_dtensor_mesh() (in module orbax.export.dtensor_utils)": [[20, "orbax.export.dtensor_utils.get_current_dtensor_mesh"]], "initialize_dtensor() (in module orbax.export.dtensor_utils)": [[20, "orbax.export.dtensor_utils.initialize_dtensor"]], "jax_mesh_to_dtensor_mesh() (in module orbax.export.dtensor_utils)": [[20, "orbax.export.dtensor_utils.jax_mesh_to_dtensor_mesh"]], "maybe_enable_dtensor_export_on() (in module orbax.export.dtensor_utils)": [[20, "orbax.export.dtensor_utils.maybe_enable_dtensor_export_on"]], "orbax.export.dtensor_utils": [[20, "module-orbax.export.dtensor_utils"]], "shutdown_dtensor() (in module orbax.export.dtensor_utils)": [[20, "orbax.export.dtensor_utils.shutdown_dtensor"]], "exportmanager (class in orbax.export.export_manager)": [[21, "orbax.export.export_manager.ExportManager"]], "__init__() (orbax.export.export_manager.exportmanager method)": [[21, "orbax.export.export_manager.ExportManager.__init__"]], "load() (orbax.export.export_manager.exportmanager method)": [[21, "orbax.export.export_manager.ExportManager.load"]], "orbax.export.export_manager": [[21, "module-orbax.export.export_manager"]], "save() (orbax.export.export_manager.exportmanager method)": [[21, "orbax.export.export_manager.ExportManager.save"]], "serving_signatures (orbax.export.export_manager.exportmanager property)": [[21, "orbax.export.export_manager.ExportManager.serving_signatures"]], "tf_module (orbax.export.export_manager.exportmanager property)": [[21, "orbax.export.export_manager.ExportManager.tf_module"]], "exportmanagerbase (class in orbax.export.export_manager_base)": [[22, "orbax.export.export_manager_base.ExportManagerBase"]], "load() (orbax.export.export_manager_base.exportmanagerbase method)": [[22, "orbax.export.export_manager_base.ExportManagerBase.load"]], "orbax.export.export_manager_base": [[22, "module-orbax.export.export_manager_base"]], "save() (orbax.export.export_manager_base.exportmanagerbase method)": [[22, "orbax.export.export_manager_base.ExportManagerBase.save"]], "jaxmodule (class in orbax.export.jax_module)": [[23, "orbax.export.jax_module.JaxModule"]], "__init__() (orbax.export.jax_module.jaxmodule method)": [[23, "orbax.export.jax_module.JaxModule.__init__"]], "apply_fn_map (orbax.export.jax_module.jaxmodule property)": [[23, "orbax.export.jax_module.JaxModule.apply_fn_map"]], "input_polymorphic_shape_map (orbax.export.jax_module.jaxmodule property)": [[23, "orbax.export.jax_module.JaxModule.input_polymorphic_shape_map"]], "jax2tf_kwargs_map (orbax.export.jax_module.jaxmodule property)": [[23, "orbax.export.jax_module.JaxModule.jax2tf_kwargs_map"]], "jax_methods (orbax.export.jax_module.jaxmodule property)": [[23, "orbax.export.jax_module.JaxModule.jax_methods"]], "methods (orbax.export.jax_module.jaxmodule property)": [[23, "orbax.export.jax_module.JaxModule.methods"]], "model_params (orbax.export.jax_module.jaxmodule property)": [[23, "orbax.export.jax_module.JaxModule.model_params"]], "orbax.export.jax_module": [[23, "module-orbax.export.jax_module"]], "to_jax_exported_map() (orbax.export.jax_module.jaxmodule method)": [[23, "orbax.export.jax_module.JaxModule.to_jax_exported_map"]], "update_variables() (orbax.export.jax_module.jaxmodule method)": [[23, "orbax.export.jax_module.JaxModule.update_variables"]], "servingconfig (class in orbax.export.serving_config)": [[24, "orbax.export.serving_config.ServingConfig"]], "__eq__() (orbax.export.serving_config.servingconfig method)": [[24, "orbax.export.serving_config.ServingConfig.__eq__"]], "__hash__ (orbax.export.serving_config.servingconfig attribute)": [[24, "orbax.export.serving_config.ServingConfig.__hash__"]], "__init__() (orbax.export.serving_config.servingconfig method)": [[24, "orbax.export.serving_config.ServingConfig.__init__"]], "bind() (orbax.export.serving_config.servingconfig method)": [[24, "orbax.export.serving_config.ServingConfig.bind"]], "get_infer_step() (orbax.export.serving_config.servingconfig method)": [[24, "orbax.export.serving_config.ServingConfig.get_infer_step"]], "get_input_signature() (orbax.export.serving_config.servingconfig method)": [[24, "orbax.export.serving_config.ServingConfig.get_input_signature"]], "orbax.export.serving_config": [[24, "module-orbax.export.serving_config"]], "callablesignatures (class in orbax.export.utils)": [[25, "orbax.export.utils.CallableSignatures"]], "tensorspecwithdefault (class in orbax.export.utils)": [[25, "orbax.export.utils.TensorSpecWithDefault"]], "__eq__() (orbax.export.utils.tensorspecwithdefault method)": [[25, "orbax.export.utils.TensorSpecWithDefault.__eq__"]], "__hash__ (orbax.export.utils.tensorspecwithdefault attribute)": [[25, "orbax.export.utils.TensorSpecWithDefault.__hash__"]], "__init__() (orbax.export.utils.callablesignatures method)": [[25, "orbax.export.utils.CallableSignatures.__init__"]], "__init__() (orbax.export.utils.tensorspecwithdefault method)": [[25, "orbax.export.utils.TensorSpecWithDefault.__init__"]], "from_saved_model() (orbax.export.utils.callablesignatures class method)": [[25, "orbax.export.utils.CallableSignatures.from_saved_model"]], "make_auto_batching_function() (in module orbax.export.utils)": [[25, "orbax.export.utils.make_auto_batching_function"]], "orbax.export.utils": [[25, "module-orbax.export.utils"]], "signatures (orbax.export.utils.callablesignatures property)": [[25, "orbax.export.utils.CallableSignatures.signatures"]], "with_default_args() (in module orbax.export.utils)": [[25, "orbax.export.utils.with_default_args"]], "validationmanager (class in orbax.export.validate.validation_manager)": [[26, "orbax.export.validate.validation_manager.ValidationManager"]], "__init__() (orbax.export.validate.validation_manager.validationmanager method)": [[26, "orbax.export.validate.validation_manager.ValidationManager.__init__"]], "check_input() (orbax.export.validate.validation_manager.validationmanager class method)": [[26, "orbax.export.validate.validation_manager.ValidationManager.check_input"]], "check_output() (orbax.export.validate.validation_manager.validationmanager class method)": [[26, "orbax.export.validate.validation_manager.ValidationManager.check_output"]], "orbax.export.validate.validation_manager": [[26, "module-orbax.export.validate.validation_manager"]], "validate() (orbax.export.validate.validation_manager.validationmanager method)": [[26, "orbax.export.validate.validation_manager.ValidationManager.validate"]], "validationreport (class in orbax.export.validate.validation_report)": [[27, "orbax.export.validate.validation_report.ValidationReport"]], "validationreportoption (class in orbax.export.validate.validation_report)": [[27, "orbax.export.validate.validation_report.ValidationReportOption"]], "__eq__() (orbax.export.validate.validation_report.validationreportoption method)": [[27, "orbax.export.validate.validation_report.ValidationReportOption.__eq__"]], "__hash__ (orbax.export.validate.validation_report.validationreportoption attribute)": [[27, "orbax.export.validate.validation_report.ValidationReportOption.__hash__"]], "__init__() (orbax.export.validate.validation_report.validationreport method)": [[27, "orbax.export.validate.validation_report.ValidationReport.__init__"]], "__init__() (orbax.export.validate.validation_report.validationreportoption method)": [[27, "orbax.export.validate.validation_report.ValidationReportOption.__init__"]], "__post_init__() (orbax.export.validate.validation_report.validationreportoption method)": [[27, "orbax.export.validate.validation_report.ValidationReportOption.__post_init__"]], "orbax.export.validate.validation_report": [[27, "module-orbax.export.validate.validation_report"]]}})